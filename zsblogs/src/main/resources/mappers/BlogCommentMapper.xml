<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zs.dao.BlogCommentMapper" >
  <resultMap id="BaseResultMap" type="com.zs.entity.BlogComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="b_id" property="bId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, context, create_time, u_id, b_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zs.entity.BlogComment" >
    insert into blog_comment (id, context, create_time, 
      u_id, b_id)
    values (#{id,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{uId,jdbcType=INTEGER}, #{bId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zs.entity.BlogComment" >
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="bId != null" >
        b_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="bId != null" >
        #{bId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zs.entity.BlogComment" >
    update blog_comment
    <set >
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uId != null" >
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="bId != null" >
        b_id = #{bId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zs.entity.BlogComment" >
    update blog_comment
    set context = #{context,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      u_id = #{uId,jdbcType=INTEGER},
      b_id = #{bId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryFenye" resultMap="BaseResultMap" parameterType="com.zs.entity.other.EasyUIAccept">
  	select * from
  	(
	  	select t1.*,rownum rn from
	  	(
		  	select * from blog_comment
		  	<where>
		  	</where>
		  	<if test="sort!=null and order!=null">
		  		order by ${sort} ${order}
		  	</if>
	  	) t1
	  	<where>
	  		<if test="end!=null">
	  			rownum &lt;= #{end}
		  	</if>
	  	</where>
  	)
  	<where>
  		<if test="start!=null">
  			rn > #{start}
	  	</if>
  	</where>
  </select>
  <select id="getCount" resultType="int" parameterType="com.zs.entity.other.EasyUIAccept">
  	select count(*) from blog_comment
  	<where>
  	</where>
  </select>
</mapper>