/*
Navicat MySQL Data Transfer

Source Server         : 本地服务器
Source Server Version : 50617
Source Host           : localhost:3306
Source Database       : zsblogs

Target Server Type    : MYSQL
Target Server Version : 50617
File Encoding         : 65001

Date: 2017-11-06 15:26:10
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `blog`
-- ----------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `create_time` datetime NOT NULL,
  `summary` varchar(600) NOT NULL,
  `ishide` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog
-- ----------------------------
INSERT INTO `blog` VALUES ('1', 'asa', '湿哒哒所', '2017-10-14 17:43:35', 'ads', '0');
INSERT INTO `blog` VALUES ('2', '第二篇', '社会实践', '2017-10-14 18:03:17', 'ddd', '0');
INSERT INTO `blog` VALUES ('3', '俩sad', '啊啊啊啊', '2017-10-15 20:22:28', 'sss', '0');
INSERT INTO `blog` VALUES ('4', 'sssssss张顺', 'ada大', '2017-10-15 20:22:37', 'aa', '0');
INSERT INTO `blog` VALUES ('5', '美团App 插件化实践', '<h3 id=\"-\">背景</h3>\r\n<p>在Android开发行业里，插件化已经不是一门新鲜的技术了，在稍大的平台型App上早已是标配。进入2017年，Atlas、Replugin、VirtualAPK相继开源，标志着插件化技术进入了成熟阶段。但纵观各大插件框架，都是基于自身App的业务来开发的，目标或多或少都有区别，所以很难有一个插件框架能一统江湖解决所有问题。最后就是绕不开的兼容性问题，Android每次版本升级都会给各个插件化框架带来不少冲击，都要费劲心思适配一番，更别提国内各个厂商对在ROM上做的定制了，正如VirtualAPK的作者任玉刚所说：完成一个插件化框架的 Demo 并不是多难的事儿，然而要开发一款完善的插件化框架却并非易事。</p>\r\n<p>早在2014年美团移动技术团队就开始关注插件化技术了，并且意识到插件化架构是美团这种平台型App最好的集成形式。但由于业务增长、迭代、演化太快，受限于业务耦合和架构问题，插件化一直无法落地。到了2016年底，经过一系列的代码架构调整、技术调研，我们终于能腾出手来让插件化技术落地了。</p>\r\n<p>美团平台（与点评平台一起）目前承载了美团点评所有事业群近20条业务线的业务。其中有相对成熟的业务，比如外卖、餐饮，他们对插件的要求是稳定性高，不能因为上了插件导致业务出问题；也有迭代变化很快的业务，如交通、跑腿、金融等，他们要求能快速迭代上线；此外，由于美团App采用的二进制AAR依赖方式集成已经运转了两年，各种基础设施都很成熟了，我们不希望换成插件形式的接入之后还要改变开发模式。所以，美团平台对插件的诉求主要集中在兼容性和不影响开发模式这两个点上。</p>\r\n<h3 id=\"-\">美团插件化框架的原理和特点</h3>\r\n<p>插件框架的兼容性体现在多个方面，由于Android机制的问题，有些写法在插件化之前运行的很正常，但是接入插件化之后就变得不再有效。如果不解决兼容性问题，插件化的口碑和推广都会很大阻碍。兼容性不仅仅指的是对Android系统、Android碎片化的兼容，还要对已有基础库和构建工具的兼容。特别是后者，我们经常看到Github上开源的插件化框架里面有大量Crash的Issue，就是这个方面原因导致的。每个App的基础库和既有构建工具都不太一样，所以为自己的App选择合适的方案显得尤为重要。</p>\r\n<p>为了保证插件的兼容性，并能无缝兼容当前AAR开发模式，美团的插件化框架方案主要做了以下几点：：</p>\r\n<ul>\r\n<li>插件的Dex加载使用类似MultiDex方案，保证对反射的兼容</li>\r\n<li>替换所有的AssetManager，保证对资源访问的兼容</li>\r\n<li>四大组件预埋，代理新增Activity</li>\r\n<li>让构建系统来抹平AAR开发模式和插件化开发模式的差异</li>\r\n</ul>\r\n<p>MultiDex和组件代理这里不细说，网上有很多这方面的博客可以参考。下面重点说一下美团插件化框架对资源的处理和支持AAR、插件一键切换的构建系统。</p>\r\n<h3 id=\"-\">资源处理</h3>\r\n<p>了解插件化的读者都知道：如果希望访问插件的资源，需要使用AssetManager把插件的路径加入进去。但这样做是远远不够的。这是因为如果希望这个AssetManager生效，就得把它放到具体的Resources或ResourcesImpl里面，大部分插件化框架的做法是封装一个包含插件路径AssetManager的Resources，然后插件中只使用这一个Resources。</p>\r\n<p>这样的做法大多数情况是有效的，但是有至少3个问题：</p>\r\n<ol>\r\n<li>如果在插件中使用了宿主Resources，如：<code>getApplicationContext().getResources()</code>。 这个Resources就无法访问插件的资源了</li>\r\n<li>插件外的Resources 并不唯一，需要全局查找和替换</li>\r\n<li>Resoureces在使用的过程中有很多中间产物，例如Theme、TypedArray等等。这些都需要清理才能正常使用</li>\r\n</ol>\r\n<p>要完全解决这些问题，我们另辟蹊径，做了一个全局的资源处理方式：</p>\r\n<ul>\r\n<li>新建或者使用已有AssetManger，加载插件资源</li>\r\n<li>查找所有的Resources/Theme，替换其中的AssetManger</li>\r\n<li>清理Resources缓存，重建Theme</li>\r\n<li>AssetManager的重建保护，防止丢失插件路径</li>\r\n</ul>\r\n<p>这个方案和InstantRun有点类似，但是原生InstantRun有太多的问题：</p>\r\n<ul>\r\n<li>清理顺序错误，应该先清理Applicaiton后清理Activity</li>\r\n<li>Resources/Theme找不全，没有极端情况应对机制</li>\r\n<li>Theme光清理不重建</li>\r\n<li>完全不适配 Support包里面自己埋的“雷”<br>等等</li>\r\n</ul>\r\n<pre><code class=\"java\"><span class=\"keyword\">for</span> (Activity activity : activities) {\r\n    ... <span class=\"comment\">// 省略部分代码</span>\r\n    Resources.Theme theme = activity.getTheme();\r\n    <span class=\"keyword\">try</span> {\r\n        <span class=\"keyword\">try</span> {\r\n            Field ma = Resources.Theme.class.getDeclaredField(<span class=\"string\">\"mAssets\"</span>);\r\n            ma.setAccessible(<span class=\"keyword\">true</span>);\r\n            ma.set(theme, newAssetManager);\r\n        } <span class=\"keyword\">catch</span> (NoSuchFieldException ignore) {\r\n            Field themeField = Resources.Theme.class.getDeclaredField(<span class=\"string\">\"mThemeImpl\"</span>);\r\n            themeField.setAccessible(<span class=\"keyword\">true</span>);\r\n            Object impl = themeField.get(theme);\r\n            Field ma = impl.getClass().getDeclaredField(<span class=\"string\">\"mAssets\"</span>);\r\n            ma.setAccessible(<span class=\"keyword\">true</span>);\r\n            ma.set(impl, newAssetManager);\r\n        }\r\n        ...\r\n    } <span class=\"keyword\">catch</span> (Throwable e) {\r\n        Log.e(LOG_TAG, <span class=\"string\">\"Failed to update existing theme for activity \"</span> + activity,\r\n                e);\r\n    }\r\n    pruneResourceCaches(resources);\r\n}\r\n</code></pre>\r\n<p>这个思路是对的，但是远不够。例如，Google 自己的Support包里面的一个类 android.support.v7.view.ContextThemeWrapper会生成一个新的Theme保存：</p>\r\n<pre><code class=\"java\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContextThemeWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">ContextWrapper</span> </span>{\r\n    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mThemeResource;\r\n    <span class=\"keyword\">private</span> Resources.Theme mTheme;\r\n    <span class=\"keyword\">private</span> LayoutInflater mInflater;\r\n    ...\r\n    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initializeTheme</span><span class=\"params\">()</span> </span>{\r\n        <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> first = mTheme == <span class=\"keyword\">null</span>;\r\n        <span class=\"keyword\">if</span> (first) {\r\n            mTheme = getResources().newTheme();\r\n            <span class=\"keyword\">final</span> Resources.Theme theme = getBaseContext().getTheme();\r\n            <span class=\"keyword\">if</span> (theme != <span class=\"keyword\">null</span>) {\r\n                mTheme.setTo(theme);\r\n            }\r\n        }\r\n        onApplyThemeResource(mTheme, mThemeResource, first);\r\n    }\r\n    ...\r\n}\r\n</code></pre>\r\n<p>如果没有替换了这个ContextThemeWrapper的Theme，假如配合它使用的Reources/AssetManager是新的，就会导致Crash：<br><code>java.lang.RuntimeException: Failed to resolve attribute at index 0</code><br>这是大部分开源框架都存在的Issue。<br>为了解决这个问题，我们不仅清理所有Activity的Theme，还清理了所有View的Context。</p>\r\n<pre><code class=\"java\"><span class=\"keyword\">try</span> {\r\n    List&lt;View&gt; list = getAllChildViews(activity.getWindow().getDecorView());\r\n    <span class=\"keyword\">for</span> (View v : list) {\r\n        Context context = v.getContext();\r\n        <span class=\"keyword\">if</span> (context <span class=\"keyword\">instanceof</span> ContextThemeWrapper\r\n                &amp;&amp; context != activity\r\n                &amp;&amp; !clearContextWrapperCaches.contains(context)) {\r\n            clearContextWrapperCaches.add((ContextThemeWrapper) context);\r\n            pruneSupportContextThemeWrapper((ContextThemeWrapper) context, newAssetManager); <span class=\"comment\">// 清理Theme</span>\r\n        }\r\n    }\r\n} <span class=\"keyword\">catch</span> (Throwable ignore) {\r\n    Log.e(LOG_TAG, ignore.getMessage());\r\n}\r\n</code></pre>\r\n<p>但是这些做法还是不能解决所有问题，有时候为了实现一个产品需求，Android工程师可能会采取一些非常规写法，导致变成插件之后资源加载失败。比如在一个自己的类里面保存了Theme。这种问题不可能一个个改业务代码，那能不能让插件兼容这种写法呢？<br>我们对这种行为也做了兼容：<strong>修改字节码</strong>。</p>\r\n<p>了解虚拟机指令的同学都知道，如果要保存一个类变量，对应的虚拟机的指令是PUTFIELD/PUTSTATIC，以此为突破口，用ASM写一个MethodVisitor：</p>\r\n<pre><code class=\"java\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyMethodVisitor</span> <span class=\"keyword\">extends</span> <span class=\"title\">MethodVisitor</span> </span>{\r\n    <span class=\"keyword\">int</span> stackSize = <span class=\"number\">0</span>;\r\n\r\n    MyMethodVisitor(MethodVisitor mv) {\r\n        <span class=\"keyword\">super</span>(Opcodes.ASM5, mv);\r\n    }\r\n\r\n    <span class=\"annotation\">@Override</span>\r\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitFieldInsn</span><span class=\"params\">(<span class=\"keyword\">int</span> opcode, String owner, String name, String desc)</span> </span>{\r\n        <span class=\"keyword\">if</span> (opcode == Opcodes.PUTFIELD || opcode == Opcodes.PUTSTATIC) {\r\n            <span class=\"keyword\">if</span> (<span class=\"string\">\"Landroid/content/res/Resources$Theme;\"</span>.equals(desc)) {\r\n                stackSize = <span class=\"number\">1</span>;\r\n                visitInsn(Opcodes.DUP);\r\n                <span class=\"keyword\">super</span>.visitMethodInsn(Opcodes.INVOKESTATIC,\r\n                        <span class=\"string\">\"com/meituan/hydra/runtime/Transformer\"</span>,\r\n                        <span class=\"string\">\"collectTheme\"</span>,\r\n                        <span class=\"string\">\"(Landroid/content/res/Resources$Theme;)V\"</span>,\r\n                        <span class=\"keyword\">false</span>);\r\n            }\r\n        }\r\n        <span class=\"keyword\">super</span>.visitFieldInsn(opcode, owner, name, desc);\r\n    }\r\n\r\n    <span class=\"annotation\">@Override</span>\r\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visitMaxs</span><span class=\"params\">(<span class=\"keyword\">int</span> maxStack, <span class=\"keyword\">int</span> maxLocals)</span> </span>{\r\n        <span class=\"keyword\">super</span>.visitMaxs(maxStack + stackSize, maxLocals);\r\n        stackSize = <span class=\"number\">0</span>;\r\n    }\r\n}\r\n</code></pre>\r\n<p>这样可以保证所有被类保存的Theme都会被收集起来，在插件安装后，统一清理、重建就行了。</p>\r\n<h3 id=\"-\">插件的构建系统</h3>\r\n<p>为了实现在AAR集成方式和插件集成方式之间一键切换，并解决插件化遇到的“API陷阱”的问题，我们把大量的时间花在构建系统的建设上面，我们的构建系统除了支持常规的构建插件之外，还支持已有构建工具和未来可能存在的构建工具。<br>我们将正常构建过程分为4个阶段：</p>\r\n<ol>\r\n<li>收集依赖</li>\r\n<li>处理资源</li>\r\n<li>处理代码</li>\r\n<li>打包签名</li>\r\n</ol>\r\n<p>那么如何保证对已有Gradle插件的支持？最好的方式是不对这个构建过程做太多干涉，保证它们的正常、按顺序执行。所以我们的构建系统在不干扰这个顺序的基础上，把插件的构建过程插入进去，对应正常构建的4个阶段，主要做了如下工作。</p>\r\n<ul>\r\n<li>宿主解析依赖之后，分析插件的依赖，进行依赖仲裁和引用计数分析</li>\r\n<li>宿主处理资源之前，处理插件资源，规避了资源访问的陷阱，生成需要Merge的资源列表给宿主，开发 美团AAPT 处理插件资源</li>\r\n<li>宿主处理代码之中，规避插件API使用的陷阱，复用宿主的Proguard和Gradle插件，做到对原生构建过程的最大兼容。我们也修复了Proguard Mapping的问题，后续会有专门的博客介绍</li>\r\n<li>宿主打包签名之前，构建插件APK，计算升级兼容的Hash特征，使用V2签名加快运行时的验证</li>\r\n</ul>', '2017-10-16 14:40:36', '在Android开发行业里，插件化已经不是一门新鲜的技术了，在稍大的平台型App上早已是标配。进入2017年，Atlas、Replugin、VirtualAPK相继开源，标志着插件化技术进入了成熟阶段。', '0');
INSERT INTO `blog` VALUES ('8', '1111111111', '2222222222', '2017-10-18 15:59:13', '3333333', '0');
INSERT INTO `blog` VALUES ('9', '222222222222', '33333', '2017-10-18 16:03:24', '33344444', '0');
INSERT INTO `blog` VALUES ('10', '张顺你还好吗', '你好', '2017-10-21 16:24:28', '张顺你好', '0');
INSERT INTO `blog` VALUES ('11', '来来来，测试一篇', '来来来，测试一篇', '2017-11-06 11:17:46', '来来来，测试一篇', '0');
INSERT INTO `blog` VALUES ('12', '大圣魔方——美团点评酒旅BI报表工具平台开发实践', '<h1 id=\"-\">背景</h1>\r\n<p>当前的互联网数据仓库系统里，数据中心往往存放了大量Cube化或者半Cube化的数据。如果需要将这些数据的内在关系体现出来，需要写大量的程序和SQL来发现数据之间的内在规律，往往会造成用户做非常多的重复性工作；而且由于没有数据校验的机制，还容易出错，无法直观查看各种数据（没有可视化的UI图表）。这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。</p>\r\n<h1 id=\"-\">难点</h1>\r\n<p>一款好的BI报表工具，需要考虑并能够解决如下问题：</p>\r\n<ul>\r\n<li>统一数据源</li>\r\n<li>SQL生成</li>\r\n<li>跨数据源数据聚合</li>\r\n<li>自定义计算指标</li>\r\n<li>数据权限</li>\r\n<li>标准化UI组件，自助生成可视化报表</li>\r\n</ul>\r\n<h1 id=\"-\">解决方案——大圣魔方</h1>\r\n<h2 id=\"-\">体系架构</h2>\r\n<p><img src=\"img/dsmf/arch.png\" alt=\"arch\"><br><span style=\"margin-left:300px\"></span>图1 大圣魔方体系架构</p>\r\n<h2 id=\"-\">具体方案</h2>\r\n<h3 id=\"1-\">1. 统一数据源</h3>\r\n<p>提供多数据源查询服务，需要解决的问题主要是两个：</p>\r\n<ol>\r\n<li>以什么样的统一方式从数据源获取数据。</li>\r\n<li>不是所有的数据源引擎都能提供OLAP服务和数据聚合的能力，我们需要从上层考虑，去实现数据的聚合、上卷、下钻、切割、自定义计算等功能。</li>\r\n</ol>\r\n<p><img src=\"img/dsmf/multiple_datasource.png\" alt=\"data source\"><br><span style=\"margin-left:150px\"></span>图2 大圣魔方多数据源</p>\r\n<p>大圣魔方上对能够通过SQL查询的数据源，例如MySQL和Kylin都通过统一SQL查询来获取数据；对于ES（Elasticsearch）采用ES提供的API来查询；对于普通文本格式的数据采用自定义API从数据源获取数据。</p>\r\n<p>如图2所示，大圣魔方只是从数据源里面获取基础的数据，之后通过实现自己的计算引擎对数据进行聚合、切割等操作，对此，魔方中设置了四个引擎，用于实现不同的功能。</p>\r\n<h3 id=\"2-sql-\">2. SQL生成</h3>\r\n<p>对于SQL的生成也存在两个问题：</p>\r\n<ol>\r\n<li>不是所有的支持SQL的数据源，都支持标准的SQL，同时，支持标准SQL的数据源也会支持带有自身特征的SQL。</li>\r\n<li>根据用户选择的条件、维度和指标，动态生成SQL的核心内容。</li>\r\n</ol>\r\n<p>针对第一个问题，我们对SQL模板进行了定义，当选择不同的数据源时，根据数据源的Dialect选择不同的SQL模板，而这就决定了SQL的组成部分（骨架）。</p>\r\n<p>为了解决第二个问题，我们在SQL模板的基础之上做了内容填充和替换操作，选择具体的维度、指标和筛选项的值，再填充到SQL模板的不同地方，最终就会生成能够被数据源执行的SQL。</p>\r\n<p>在SQL生成的时候也考虑过其它的框架，如Apache Calcite Avatica、Alibaba的Druid，但是最终都放弃了，原因也是基于两个方面：</p>\r\n<ol>\r\n<li>这些框架庞大且功能多，适用于我们场景的SQL生成的部分API使用起来过于复杂。</li>\r\n<li>大都是基于标准的ANSI SQL-92，很难个性化地生成我们所需要的SQL。</li>\r\n</ol>\r\n<p>最终，我们采用了SQL模板和字符串填充替换操作来完成。为此我们在Java的正则表达式基础之上做了一个功能很多的字符串操作类库。</p>\r\n<h3 id=\"3-\">3. 跨数据源数据聚合</h3>\r\n<p>一般情况下，同一个数据源的大部分数据源引擎都能够支持多表的join操作，但是也存在不支持的，例如老版本的Kylin就不支持多Cube的join操作，还有一个更重要的问题是数据源引擎无法解决跨数据源的数据聚合问题，必须要自己实现数据的聚合操作，一般的情况下需要自己去实现inner join、left outer join和full outer join的逻辑。</p>\r\n<p>大圣魔方实现了inner join和left outer join两个逻辑，因为full outer join的需求场景不是很多，所以没有实现。下面是大圣魔方的实现代码：</p>\r\n<h4 id=\"inner-join-\">inner join核心代码</h4>\r\n<pre><code class=\"java\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">join</span><span class=\"params\">(List&lt;Map&lt;String,String&gt;&gt;[] contents,List&lt;Project&gt; sharedList,<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span>[] rowsStatus,LinkedList&lt;MatchRow&gt; result)</span></span>{\r\n        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.cubeJoin==<span class=\"number\">1</span>){\r\n            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> java.lang.IllegalArgumentException(<span class=\"string\">\"left join call leftJoin method,not call join method\"</span>);\r\n        }\r\n\r\n        <span class=\"keyword\">if</span>(n&lt;contents.length){\r\n            List&lt;Map&lt;String,String&gt;&gt; list = contents[n];\r\n            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;list.size();k++) {\r\n                <span class=\"keyword\">boolean</span> equal = <span class=\"keyword\">true</span>;\r\n                <span class=\"keyword\">if</span>(n!=<span class=\"number\">0</span>) {\r\n                    Map&lt;String, String&gt; prev = contents[n - <span class=\"number\">1</span>].get(rowsStatus[n - <span class=\"number\">1</span>]);\r\n                    Map&lt;String, String&gt; cur = list.get(k);\r\n\r\n                    <span class=\"keyword\">for</span> (Project proj : sharedList) {\r\n                        String key = proj.fieldName.toUpperCase();\r\n                        <span class=\"keyword\">if</span> (key.matches(<span class=\"string\">\"^\\\\d+$\"</span>) || key.equals(<span class=\"string\">\"*\"</span>)) {\r\n                            key = <span class=\"string\">\"_\"</span>;\r\n                        }\r\n                        key = proj.isCompanion() ? key + proj.getFactId() : key;\r\n                        String prevValue = prev.get(key);\r\n                        String curValue = cur.get(key);\r\n                        <span class=\"keyword\">if</span> (prevValue == curValue) {\r\n                            <span class=\"keyword\">continue</span>;\r\n                        }\r\n\r\n                        <span class=\"keyword\">if</span> (prevValue == <span class=\"keyword\">null</span> || curValue == <span class=\"keyword\">null</span> || !prevValue.equals(curValue)) {\r\n                            equal = <span class=\"keyword\">false</span>;\r\n                            <span class=\"keyword\">break</span>;\r\n                        }\r\n                    }\r\n                }\r\n                <span class=\"keyword\">if</span> (equal) {\r\n                    rowsStatus[n] = k;\r\n                    <span class=\"keyword\">if</span>(n==contents.length-<span class=\"number\">1</span>){<span class=\"comment\">//last dataset match</span>\r\n                        MatchRow mr = <span class=\"keyword\">new</span> MatchRow();\r\n\r\n                        List&lt;MatchRow.DatasetRow&gt; tmp = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();\r\n                        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;rowsStatus.length;i++){\r\n                            MatchRow.DatasetRow dr = <span class=\"keyword\">new</span> MatchRow.DatasetRow();\r\n                            dr.setDatasetIndex(i);\r\n                            dr.setRowIndex(rowsStatus[i]);\r\n                            tmp.add(dr);\r\n                        }\r\n\r\n                        mr.addMatchRow(tmp);\r\n                        result.add(mr);\r\n                    }<span class=\"keyword\">else</span>{\r\n                        join(contents,sharedList,n+<span class=\"number\">1</span>,rowsStatus,result);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</code></pre>\r\n<p>上述代码就是通过回溯算法实现inner join的核心逻辑，具体解析如下：</p>\r\n<ul>\r\n<li>contents参数表示每个数据源里面的结果集。</li>\r\n<li>sharedList表示关联的字段。</li>\r\n<li>n和rowsStatus是回溯算法记录状态用的。</li>\r\n<li>result里面包含的是符合join条件的记录。</li>\r\n<li>MatchRow里面记录的是一个数据源里面的某一行与其余的数据源里面的那一行是相等的，记录的是下标号。</li>\r\n</ul>\r\n<p>只有当sharedList里面的每个字段都相等的时候，两条记录才满足inner join的条件。这个算法是一个通用算法，因为是通过回溯算法实现的，所以要join的数据源理论上可以有无限个。</p>\r\n<h4 id=\"left-outer-join-\">left outer join核心代码</h4>\r\n<pre><code class=\"java\">\r\n<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">leftJoin</span><span class=\"params\">(List&lt;Map&lt;String,String&gt;&gt;[] contents,List&lt;Project&gt; sharedList,<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span>[] rowsStatus,LinkedList&lt;MatchRow&gt; result)</span></span>{\r\n        <span class=\"keyword\">boolean</span> leftJoinMatch = <span class=\"keyword\">false</span>;\r\n        <span class=\"keyword\">if</span>(n&lt;contents.length){\r\n            List&lt;Map&lt;String,String&gt;&gt; list = contents[n];\r\n\r\n            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;list.size();k++) {\r\n                <span class=\"keyword\">boolean</span> equal = <span class=\"keyword\">true</span>;\r\n                <span class=\"keyword\">if</span>(n!=<span class=\"number\">0</span>) {\r\n                    <span class=\"comment\">//in left join,compare with the first dataset.</span>\r\n                    Map&lt;String, String&gt; prev = contents[<span class=\"number\">0</span>].get(rowsStatus[<span class=\"number\">0</span>]);\r\n                    Map&lt;String, String&gt; cur = list.get(k);\r\n\r\n                    <span class=\"keyword\">for</span> (Project proj : sharedList) {\r\n                        String key = proj.fieldName.toUpperCase();\r\n                        <span class=\"keyword\">if</span> (key.matches(<span class=\"string\">\"^\\\\d+$\"</span>) || key.equals(<span class=\"string\">\"*\"</span>)) {\r\n                            key = <span class=\"string\">\"_\"</span>;\r\n                        }\r\n                        key = proj.isCompanion() ? key + proj.getFactId() : key;\r\n                        String prevValue = prev.get(key);\r\n                        String curValue = cur.get(key);\r\n                        <span class=\"keyword\">if</span> (prevValue == curValue) {\r\n                            <span class=\"keyword\">continue</span>;\r\n                        }\r\n\r\n                        <span class=\"keyword\">if</span> (prevValue == <span class=\"keyword\">null</span> || curValue == <span class=\"keyword\">null</span> || !prevValue.equals(curValue)) {\r\n                            equal = <span class=\"keyword\">false</span>;\r\n                            <span class=\"keyword\">break</span>;\r\n                        }\r\n                    }\r\n                }\r\n                <span class=\"keyword\">if</span> (equal) {\r\n                    leftJoinMatch = <span class=\"keyword\">true</span>;\r\n                    rowsStatus[n] = k;\r\n                    <span class=\"keyword\">if</span>(n==contents.length-<span class=\"number\">1</span>){<span class=\"comment\">//last dataset match</span>\r\n                        MatchRow mr = <span class=\"keyword\">new</span> MatchRow();\r\n\r\n                        List&lt;MatchRow.DatasetRow&gt; tmp = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();\r\n                        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;rowsStatus.length;i++){\r\n                            MatchRow.DatasetRow dr = <span class=\"keyword\">new</span> MatchRow.DatasetRow();\r\n                            dr.setDatasetIndex(i);\r\n                            dr.setRowIndex(rowsStatus[i]);\r\n                            tmp.add(dr);\r\n                        }\r\n                        mr.addMatchRow(tmp);\r\n                        result.add(mr);\r\n                    }<span class=\"keyword\">else</span>{\r\n                        <span class=\"comment\">//if next dataset is not match,use the next\'s next...</span>\r\n                        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> loopFlag=n+<span class=\"number\">1</span>;loopFlag&lt;rowsStatus.length;loopFlag++){\r\n                            <span class=\"keyword\">boolean</span> match = leftJoin(contents,sharedList,loopFlag,rowsStatus,result);\r\n                            <span class=\"keyword\">if</span>(match){\r\n                                <span class=\"keyword\">break</span>;\r\n                            }\r\n                            rowsStatus[loopFlag]=-<span class=\"number\">1</span>;\r\n                            <span class=\"keyword\">if</span>(loopFlag==contents.length-<span class=\"number\">1</span>){\r\n                                MatchRow mr = <span class=\"keyword\">new</span> MatchRow();\r\n\r\n                                List&lt;MatchRow.DatasetRow&gt; tmp = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();\r\n                                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;rowsStatus.length;i++){\r\n                                    MatchRow.DatasetRow dr = <span class=\"keyword\">new</span> MatchRow.DatasetRow();\r\n                                    dr.setDatasetIndex(i);\r\n                                    dr.setRowIndex(rowsStatus[i]);\r\n                                    tmp.add(dr);\r\n                                }\r\n                                mr.addMatchRow(tmp);\r\n                                result.add(mr);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        <span class=\"keyword\">return</span> leftJoinMatch;\r\n    }\r\n</code></pre>\r\n<p>上面的代码是left outer join的实现逻辑，同样也是用的回溯算法，它与inner join有2个不同之处：</p>\r\n<ol>\r\n<li>left outer join的数据源匹配逻辑是当第一个数据源与第二个数据源没有匹配的时候，会继续与第三个数据源进行匹配操作，原因是数据源的顺序导致了不匹配，继续往下匹配就可以避免这个问题。</li>\r\n<li>行与行做相等操作的时候，右边没有匹配行的时候，左边的行继续保留，这个是left outer join的逻辑决定的。</li>\r\n</ol>\r\n<h3 id=\"4-\">4. 自定义计算指标</h3>\r\n<p>使用自定义计算的原因，主要是基于下面的两个方面：</p>\r\n<ol>\r\n<li>数据源引擎不支持数据的混合运算或有特殊逻辑的数据处理。</li>\r\n<li>结果数据跨数据源。</li>\r\n</ol>\r\n<p>对此，我们对大圣魔方做了如下操作：</p>\r\n<ol>\r\n<li>通过Java里面的ScriptEngine进行封装来实现数据列的混合运算，不需要自己再去写编译程序解析。对于特殊的数据处理，例如同环比这样的特殊指标，需要单独定义接口，让实现类继承改特定接口，实现类是一个特殊的指标，它需要进行多次数据查询，将最终的结果通过ScriptEngine进行运算。</li>\r\n<li>第二个问题是在上文中“跨数据源数据聚合”的基础上实现的，数据聚合后通过ScriptEngine做最后的处理。</li>\r\n</ol>\r\n<h3 id=\"5-\">5. 数据权限的问题</h3>\r\n<p>只要是有数据展示，数据权限问题就无法避免，权限主要是分为报表的可查看权限和维度、指标权限。权限遇到的最主要的问题是构成权限矩阵的数据量太大，参与者有用户和组织，权限的实体有维度和指标，这样大的数据维护起来的成本很高；其次是权限数据配置会占用很多的人力。</p>\r\n<p>对此，我们做了如下操作：</p>\r\n<ol>\r\n<li>使用UPM控制报表的可查看权限。公司推荐使用UPM来控制权限，不过UPM也具有一定的局限性，即只能够判断用户或者组织是否满足某个权限，而不能满足获取部分权限数据的需求，例如某个用户对某个权限只拥有一部分权限，那他就无法提供具体数据。但是UPM可以提供是否的权限，所以报表的可查看权限可以使用UPM来控制，这样可以节约大量的工作。</li>\r\n<li>使用默认任何人都有权限的机制。通过使用默认有权限的这个机制可以大大减少权限数据。需要鉴权的那些维度和指标采用默认无权限的机制，这样两种方案结合，可以最大限度地减少权限数据。</li>\r\n<li>通过走审批流机制自助申请。通过审批流机制可以让用户走自助申请，大大节约权限数据的维护人力成本。</li>\r\n</ol>\r\n<h3 id=\"6-ui-\">6. 标准化UI组件，自助生成可视化报表</h3>\r\n<p>报表上展示数据需要有各种各样的图表，没法为用户只做一个统一的报表，这个时候需要用户能够创建自己想要的报表，这时需要提供一个标准的组件库、布局库和一些常用的模板。用户选择好想要的模板，然后选择布局对报表页面进行布局，接着在每个布局里面填充不同的组件，这样就可以构建一张报表了，也就是我们常说的所见即所得的方式。</p>\r\n<p>大圣魔方就是采用上述的机制提供了一套可视化报表编辑工具。使用它可以快速地创建一个报表，管理人员只需要维护对应的组件、布局和模板就行了。</p>\r\n<h1 id=\"-\">总结</h1>\r\n<p>上述几点就是大圣魔方的一个总纲，其中大部分功能已经实现了，还有一小部分处于开发之中（标准化UI组件、自助生成可视化报表）。目前大圣魔方已经上线将近一年了，支持了内部众多业务，后续我们还会在UI易用性、星型模型、配置简化、元数据同步等方面做一些提高。</p>', '2017-11-06 13:58:03', '讲述酒旅的数据报表平台大圣魔方的设计及实现，希望为大家在数据建模规范化、数据权限统一化以及数据展现多样化上提供一些经验。', '0');
INSERT INTO `blog` VALUES ('13', '互联网企业安全之端口监控', '<h1 id=\"-\">背景</h1>\r\n<p>外网端口监控系统是整个安全体系中非常重要的一环，它就像眼睛一样，时刻监控外网端口开放情况，并且在发现高危端口时能够及时提醒安全、运维人员做出相应处理。</p>\r\n<p>对安全人员来说，互联网公司在快速发展壮大的过程中，外网边界的管控容易出现照顾不全的现象。最初我们用Python+Nmap开发的外网端口监控系统，在公司边界扩大的过程中已经无法满足要求了，所以出现过一例因为运维人员误操作将高危端口曝露至外网导致的入侵事件，<strong>为了避免再次出现类似由高危端口开放而不知情导致的入侵问题</strong>，我们开始重做外网端口监控系统。</p>\r\n<h1 id=\"-\">意义</h1>\r\n<p>要理解端口监控的意义，首先需要知道什么是 <strong>端口扫描</strong> ，根据Wikipedia的定义：</p>\r\n<blockquote>\r\n<p>端口扫描的定义是客户端向一定范围的服务器端口发送对应请求，以此确认可使用的端口。虽然其本身并不是恶意的网络活动，但也是网络攻击者探测目标主机服务，以利用该服务的已知漏洞的重要手段。</p>\r\n</blockquote>\r\n<p>对于攻击者来说，端口扫描往往是他们从外网发起攻击的第一步。而对于企业安全人员来说，<strong>端口监控则是我们预防攻击者从外部直接入侵的一条重要防线</strong>，它可以帮助我们：</p>\r\n<ul>\r\n<li>以攻击者视角了解企业外网端口的开放情况，看我们是否存在容易被利用导致入侵的点</li>\r\n<li>赶在攻击者发现外网新开放的高危端口之前发现并修补漏洞，降低系统被从外部直接入侵的概率</li>\r\n</ul>\r\n<h1 id=\"-\">方法</h1>\r\n<p>对企业的外网开放端口进行监控不外乎两种方法，一种是类似于黑盒审计的<strong>外网端口扫描</strong>，另一种是类似于白盒审计的<strong>流量分析</strong>。从原理上来说流量分析的方式肯定是最准确的，但这对软硬件都有一定要求，一般的公司不一定有能力做好；外网端口扫描的方式比较直接，虽然也有一些环境上的依赖，比如网络带宽，但总体上来说要比流量分析的要求小得多，大部分公司都能满足。这里我们主要介绍一下外网端口扫描的方法，另一种流量分析的方法，以后请具体负责同学给大家分享。</p>\r\n<h2 id=\"-1-\">方法1：外网端口扫描</h2>\r\n<p>在这里我们先简单介绍一下端口扫描的原理，以帮助各位对这块不太了解的同学有个基本的认识。</p>\r\n<h3 id=\"-\">端口状态</h3>\r\n<p>下面以最知名的端口扫描器Nmap对端口状态的划分进行一个说明：</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>状态</th>\r\n<th style=\"text-align:center\">说明</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><strong>open</strong></td>\r\n<td style=\"text-align:center\">有一个应用程序在监听这个端口，可以被访问</td>\r\n</tr>\r\n<tr>\r\n<td><strong>closed</strong></td>\r\n<td style=\"text-align:center\">没有应用程序在监听这个端口，但它是可达的</td>\r\n</tr>\r\n<tr>\r\n<td><strong>filtered</strong></td>\r\n<td style=\"text-align:center\">在扫描器和端口之间有网络障碍，扫描器无法到达该端口，所以无法判断端口是开放还是关闭的</td>\r\n</tr>\r\n<tr>\r\n<td>unfiltered</td>\r\n<td style=\"text-align:center\">端口可达，但是扫描器无法准确判断</td>\r\n</tr>\r\n<tr>\r\n<td>open或filtered</td>\r\n<td style=\"text-align:center\">扫描器无法准确判断端口到底是open还是filtered</td>\r\n</tr>\r\n<tr>\r\n<td>closed或filtered</td>\r\n<td style=\"text-align:center\">扫描器无法准确判断端口到底是closed还是filtered</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>但一般情况下我们不用分的这么细，这里为了方便起见，将一个端口的状态粗略分为3种：开放、限制性开放、关闭。其中「<strong>限制性开放</strong>」指的就是做了访问控制，只有指定白名单列表中的主机才能访问，其它的都无法访问，可以简单认为是上面的<strong>filtered</strong>状态。</p>\r\n<h3 id=\"-\">扫描方式</h3>\r\n<p><strong>TCP SYN扫描</strong></p>\r\n<p>我们选择TCP SYN扫描的理由：</p>\r\n<ul>\r\n<li><strong>执行得很快</strong>，在一个没有防火墙限制的快速网络中，每秒钟可以扫描几千个端口；</li>\r\n<li><strong>相对来说比较隐蔽</strong>，不易被注意到，因为它从来不完成TCP连接；</li>\r\n<li><strong>兼容性好</strong>，不像Fin/Null/Xmas/Maimon和Idle扫描依赖于特定平台，而可以应对任何兼容的TCP协议栈；</li>\r\n<li><strong>明确可靠</strong>地区分open（开放的），closed（关闭的）和filtered（被过滤的）状态。</li>\r\n</ul>\r\n<h3 id=\"-\">扫描原理</h3>\r\n<p>对于学过计算机网络的同学来说，TCP/IP建立连接的3次握手过程想必应该不算陌生，大体流程如下：<br>  <img src=\"img/security_port_monitor/tcpip_open.png\" alt=\"\"></p>\r\n<p>我们这里使用的TCP SYN扫描就是通过先主动发送一个SYN报文给指定端口（<strong>之后并不回复任何报文，不完成TCP连接</strong>），然后根据端口的返回信息做出判断，判断结论分为以下3种：</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>结论</th>\r\n<th style=\"text-align:center\">原因</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td><strong>open</strong></td>\r\n<td style=\"text-align:center\">返回 SYN/ACK</td>\r\n</tr>\r\n<tr>\r\n<td><strong>closed</strong></td>\r\n<td style=\"text-align:center\">返回 RST</td>\r\n</tr>\r\n<tr>\r\n<td><strong>filtered</strong></td>\r\n<td style=\"text-align:center\">数次重发后仍没响应；或者收到ICMP不可到达错误</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>图例如下：<br>  <img src=\"img/security_port_monitor/tcp_scan.png\" alt=\"\"></p>\r\n<h2 id=\"-2-\">方法2：流量分析</h2>\r\n<blockquote>\r\n<p>源码面前，了无秘密。</p>\r\n</blockquote>\r\n<p>技术同学估计对侯捷老师的这句话不会陌生，这里我想将这一句话改一改以适应我们这里的情景：</p>\r\n<blockquote>\r\n<p>流量面前，了无秘密。</p>\r\n</blockquote>\r\n<p>通过流量分析，我们可以及时知道有哪些端口对外开放了，然后通过解包分析的方式获取它使用的协议以及提供的服务，对于无法准确判断的，我们可以再用外网扫描的方式进行补充判断。</p>\r\n<h1 id=\"-\">演进过程</h1>\r\n<h2 id=\"nmap\">Nmap</h2>\r\n<p>早期我们就是通过Python调用Nmap进行的扫描，但随着公司规模的不断扩大，网段的不断增加，Nmap扫描的弊端就逐渐凸现且无法弥补了——大网段全端口扫描周期太长，无法及时出结果（一个扫描周期可能长达2周），也就根本达不到外网端口监控的目的了。直到后来出现了Masscan。</p>\r\n<h2 id=\"masscan\">Masscan</h2>\r\n<p>大体架构如下：<br>  <img src=\"img/security_port_monitor/arch1.png\" alt=\"\"></p>\r\n<p>Masscan是大网段全端口扫描神器！！！<br>就扫描速度来说应该是现有端口扫描器中最快的，同时准确性也比较高。在确定使用Masscan之前我们拿它和Zmap、Nmap一起做了对比测试，限于篇幅，具体的测试过程就不发出来了，这里只说测试结论：用TCP SYN扫描方式，对一个小型IP段进行全端口扫描，Masscan速度最快，准确性较高，可以满足需要。</p>\r\n<h4 id=\"-\">经验分享</h4>\r\n<ol>\r\n<li>扫描服务器的带宽是关键；</li>\r\n<li>扫描最好避开业务高峰期；</li>\r\n<li>扫描选项需要根据具体带宽、机器配置、扫描范围、扫描速度要求进行调优；</li>\r\n<li>只要是远程检测的方法，就存在一定的不确定性，检测结果的准确性只能接近100%，无法达到100%，所以不要完全依赖外网扫描的结果；</li>\r\n<li>实际情况中单IP的开放端口数是有限的，如果你发现扫描结果中有单个IP开放了大量端口，你就要注意该IP对应的设备是不是在「欺骗」你了；</li>\r\n<li>前期对扫描结果做一个完整的梳理，后期只需要处理新增的高危端口就行。</li>\r\n</ol>\r\n<h2 id=\"masscan-nmap\">Masscan+Nmap</h2>\r\n<p>在Masscan版本上线了之后，全端口扫描的速度得到了大幅提升，外网端口的开放情况也了解的比较清楚了，但是对于Banner的获取以及具体服务的识别还达不到要求，而这也不是Masscan的强项，所以这时候我们就需要借助Nmap丰富的服务指纹库来提高我们监控数据的准确性了。<br>和之前相比，就是在Masscan全量扫描环节之后增加了一个只针对判断为开放的端口用Nmap进行增量扫描的环节，然后将结果更新至数据库方便展示、分析。大体架构如下：<br>  <img src=\"img/security_port_monitor/arch2.png\" alt=\"\"></p>\r\n<h2 id=\"masscan-nmap-dpdk-storm-nmap\">Masscan+Nmap &amp; DPDK+Storm+Nmap</h2>\r\n<p>外网的扫描有它的优势——以攻击者视角获取当前外网安全状态，但是因为Masscan全端口扫描再快他也是需要时间的，特别是在网段较大、带宽有限的情况下。所以单独的周期性外网扫描就存在一个天然的真空期，如果在这段真空期内，内部员工因为大意将测试端口对外，且忘了关闭的情况下，就可能会被攻击者进行利用，为了应对这种情况（即便可能性比较小），我们决定从实时流量中进行分析，实时找出对外开放的新增/异常端口，然后调用Nmap进行扫描，以解决单独外网扫描存在的真空期问题。大体架构如下：<br>  <img src=\"img/security_port_monitor/arch3.png\" alt=\"\"></p>\r\n<h4 id=\"-\">经验分享</h4>\r\n<ol>\r\n<li>联合相关兄弟团队全面梳理IP、设备资产信息，同时资产变更系统化（避免手工操作）势在必行；</li>\r\n<li>扫描范围最好（一定）通过API拉取，避免出现因为资产变动而导致漏扫的情况；</li>\r\n<li>这种情况下安全监控信息的时效性要高于准确性，但准确性也很重要（所以要先拿Masscan缩小范围，再拿Nmap获取细节）；</li>\r\n<li>发现典型高危案例要记得抄送双方老板，在有可能的情况下看能不能升级至更高层面，因为制度或政策的确立由高往低会比较好推动。</li>\r\n</ol>\r\n<h1 id=\"-\">延伸扩展</h1>\r\n<p>端口监控系统除了可以起到监控外网开放的新增高危端口的作用之外，还可以考虑从以下几个方面扩展一下它的功能和效果，以实现效用的最大化：</p>\r\n<h2 id=\"1-\">1. 系统漏洞扫描器联动</h2>\r\n<p>对于非安全的同学来说，他们会很难理解一个外网开放端口能造成多大的危害，所以经常会出现当安全人员找到他们的时候，他们不认为这是一个安全问题，因此沟通起来会有点麻烦。<br>虽然问题最终都会得到解决，但如果能有一个直观的演示给到他们的话，他们也会更愿意配合我们去修复以及避免这类问题。所以和系统漏洞扫描器的联动对于推动问题的处理和漏洞的修复是有帮助的。<br>注意事项：<strong>避免高风险性扫描操作</strong>；<strong>需要人工确认后主动触发</strong>。</p>\r\n<h2 id=\"2-web-\">2. Web漏洞扫描器联动</h2>\r\n<p>通常情况下我们会认为，新增Web端口对外是可以接受的，但这是建立在对应的Web系统通过了完整的内部安全测试的前提下。当碰到类似于为了方便起见将Zabbix的Web系统对外，且为弱口令时，情况就不那么乐观了，这时就可以通过调用Web漏洞扫描器自动对暴露在外的Web系统进行扫描，并将结果及时通报，以减少这类问题带来的危害。</p>\r\n<h2 id=\"3-\">3. 内部漏洞管理系统联动</h2>\r\n<p>可以获得的好处有：</p>\r\n<ul>\r\n<li>自动录入，由漏洞管理系统流程进行自动跟进，效率提升；</li>\r\n<li>结果在漏洞管理系统中进行展示，风格统一。</li>\r\n</ul>\r\n<h1 id=\"-\">补充</h1>\r\n<h2 id=\"udp-\">UDP 高危端口监控</h2>\r\n<p>上面介绍了常规服务器的TCP端口监控，意在提醒大家注意一下服务器的安全；但还有一类UDP端口安全的问题上面没有介绍，也容易被忽略——防火墙、交换机等网络设备的安全。在2016年8月份的时候The Shadow Brokers公布了一款针对思科Adaptive Security Appliance（ASA，实际涵盖了防火墙和路由器设备，PIX也在其列）产品的漏洞利用工具ExtraBacon，虽然漏洞利用有一定条件限制，但是一旦漏洞利用成功，攻击者就可在无需输入身份凭证的情况下建立起SSH或telnet连接。就是不需要输入有效用户名或密码，就能闯进ASA，危害巨大。</p>\r\n<p>针对这方面的问题，有以下几点建议：</p>\r\n<ul>\r\n<li>快速监控部分高危UDP端口的状态；</li>\r\n<li>如无必要，关闭服务/对外访问；</li>\r\n<li>如有需要，尽早升级且限制访问IP来源。</li>\r\n</ul>\r\n<h1 id=\"-\">结语</h1>\r\n<p>本文主要介绍美团点评安全团队对外网端口监控系统的开发演进过程，整理总结了其中的一些实践经验以及前景展望。欢迎大家批评指正，有好的建议也希望能提出来帮助我们改进。我们后续将不断优化，也将继续与大家保持讨论。耐心看到这里的读者，表示十二万分的感谢！</p>\r\n<h1 id=\"-\">作者简介</h1>\r\n<p>光宗，2015年加入美团点评安全团队，先后从事过生产网主机、软件安全防护的工作，目前主要负责美团点评集团内部安全审计系统相关的开发工作。</p>\r\n<p>最后打个小广告，美团点评集团安全部正在招Web&amp;二进制攻防、后台&amp;系统开发、机器学习&amp;算法等各路小伙伴，我们想做的事情：构建一套基于海量 IDC 环境下的，横跨网络层、虚拟化层、Server 软件层（内核态/用户态）、语言执行虚拟机层(JVM/Zend/JavaScript V8)、Web应用层、数据访问层(DAL)的基于大数据+机器学习的全自动安全事件感知系统，规模上对应美团点评全线业务的服务器，技术栈覆盖了几乎大多数云环境下的互联网应用，数据规模也将是很大的挑战。此外我们还关注 Google Facebook Amazon 这类公司在企业安全建设方面的实践，努力构建类似于Google的内置式安全架构和纵深防御体系，对在安全和工程技术领域有所追求的同学来说应该是一个很好的机会。如果您想加入我们，欢迎简历请发至邮箱zhaoyan17#meituan.com。</p>\r\n<p>详情请点击：<a href=\"http://www.freebuf.com/jobs/150061.html\">美团点评集团安全部招聘安全人才</a>。</p>', '2017-11-06 14:10:40', '本文主要介绍美团点评安全部门在外网开放端口监控过程中面临的挑战及其解决方案，总结了其中的一些实践经验以及前景展望。', '0');

-- ----------------------------
-- Table structure for `blog_comment`
-- ----------------------------
DROP TABLE IF EXISTS `blog_comment`;
CREATE TABLE `blog_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(255) NOT NULL,
  `create_time` datetime NOT NULL,
  `u_id` int(11) DEFAULT NULL,
  `b_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `u_id` (`u_id`),
  KEY `b_id` (`b_id`),
  CONSTRAINT `blog_comment_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`),
  CONSTRAINT `blog_comment_ibfk_2` FOREIGN KEY (`b_id`) REFERENCES `blog` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_comment
-- ----------------------------
INSERT INTO `blog_comment` VALUES ('1', '最近由于为了业务独立和风险规避，需要将比较重要和比较独立的模块从原项目中拆分出来搭建到其他服务器上，然后就需要搭建项目框架，但每次搭建框架都是特别麻烦，于是就想做一个这样的东西：一个将基本的东西全都创建好的项目原型，这样每次启动项目时直接拷贝过来稍微修改就能直接使用，这样就非常效率，好了，废话不多说。', '2017-10-19 15:39:31', '1', '9');
INSERT INTO `blog_comment` VALUES ('2', '测试一下', '2017-10-19 17:20:17', '1', '9');
INSERT INTO `blog_comment` VALUES ('3', '试一下', '2017-10-19 17:25:37', null, '9');
INSERT INTO `blog_comment` VALUES ('4', '看看', '2017-10-19 17:29:38', null, '9');
INSERT INTO `blog_comment` VALUES ('5', '111111', '2017-10-19 17:30:45', null, '9');
INSERT INTO `blog_comment` VALUES ('6', '大时代', '2017-10-19 17:31:59', null, '9');
INSERT INTO `blog_comment` VALUES ('7', '爱的达到多', '2017-10-19 17:32:56', null, '9');
INSERT INTO `blog_comment` VALUES ('8', '1111111', '2017-10-19 17:33:05', null, '9');
INSERT INTO `blog_comment` VALUES ('9', '检查', '2017-10-19 17:34:00', null, '9');
INSERT INTO `blog_comment` VALUES ('10', '终于', '2017-10-19 17:34:18', null, '9');
INSERT INTO `blog_comment` VALUES ('11', '22222', '2017-10-19 17:35:09', null, '9');
INSERT INTO `blog_comment` VALUES ('12', '你好', '2017-10-19 20:34:28', null, '9');
INSERT INTO `blog_comment` VALUES ('13', '测试评论', '2017-10-19 20:34:51', null, '5');
INSERT INTO `blog_comment` VALUES ('14', '使用登录用户测试评论', '2017-10-19 20:51:09', null, '5');
INSERT INTO `blog_comment` VALUES ('15', '使用登录用户测试评论', '2017-10-19 20:51:26', null, '5');
INSERT INTO `blog_comment` VALUES ('16', '111111111111', '2017-10-19 20:51:56', null, '8');
INSERT INTO `blog_comment` VALUES ('17', '222222222222', '2017-10-19 20:54:27', null, '3');
INSERT INTO `blog_comment` VALUES ('18', '说一下', '2017-10-19 21:01:22', '1', '3');
INSERT INTO `blog_comment` VALUES ('19', '哈罗', '2017-10-19 21:01:52', '2', '3');
INSERT INTO `blog_comment` VALUES ('20', '试一下', '2017-10-20 09:07:05', '1', '9');
INSERT INTO `blog_comment` VALUES ('21', '使用登录用户测试评论', '2017-10-20 15:58:48', '1', '5');
INSERT INTO `blog_comment` VALUES ('22', '测试一下', '2017-10-27 17:57:40', '5', '10');
INSERT INTO `blog_comment` VALUES ('23', '<font color=\'red\'>测试红色字体</font>', '2017-11-06 11:15:09', '3', '5');
INSERT INTO `blog_comment` VALUES ('24', '222222222222', '2017-11-06 13:13:12', '3', '11');

-- ----------------------------
-- Table structure for `blog_list`
-- ----------------------------
DROP TABLE IF EXISTS `blog_list`;
CREATE TABLE `blog_list` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `create_time` datetime NOT NULL,
  `bl_order` int(11) NOT NULL,
  `u_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `u_id` (`u_id`),
  CONSTRAINT `blog_list_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_list
-- ----------------------------
INSERT INTO `blog_list` VALUES ('1', '测试', '2017-10-14 17:43:16', '1', '1');
INSERT INTO `blog_list` VALUES ('2', '随笔', '2017-10-17 17:23:51', '2', '1');
INSERT INTO `blog_list` VALUES ('3', '成功日记', '2017-10-17 17:24:14', '3', '1');
INSERT INTO `blog_list` VALUES ('4', '设计思想', '2017-10-17 17:24:25', '4', '1');
INSERT INTO `blog_list` VALUES ('5', 'java web', '2017-10-18 17:01:34', '5', '2');
INSERT INTO `blog_list` VALUES ('6', '分类1', '2017-11-06 11:17:18', '1', '3');
INSERT INTO `blog_list` VALUES ('7', '转发', '2017-11-06 13:36:18', '1', '4');

-- ----------------------------
-- Table structure for `blog_list_rel`
-- ----------------------------
DROP TABLE IF EXISTS `blog_list_rel`;
CREATE TABLE `blog_list_rel` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `bl_id` int(11) DEFAULT NULL,
  `b_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `bl_id` (`bl_id`),
  KEY `b_id` (`b_id`),
  CONSTRAINT `blog_list_rel_ibfk_1` FOREIGN KEY (`bl_id`) REFERENCES `blog_list` (`id`),
  CONSTRAINT `blog_list_rel_ibfk_2` FOREIGN KEY (`b_id`) REFERENCES `blog` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog_list_rel
-- ----------------------------
INSERT INTO `blog_list_rel` VALUES ('1', '1', '8');
INSERT INTO `blog_list_rel` VALUES ('2', '2', '8');
INSERT INTO `blog_list_rel` VALUES ('3', '3', '8');
INSERT INTO `blog_list_rel` VALUES ('4', '2', '9');
INSERT INTO `blog_list_rel` VALUES ('5', '3', '9');
INSERT INTO `blog_list_rel` VALUES ('7', '1', '3');
INSERT INTO `blog_list_rel` VALUES ('8', '1', '2');
INSERT INTO `blog_list_rel` VALUES ('9', '1', '1');
INSERT INTO `blog_list_rel` VALUES ('10', '1', '4');
INSERT INTO `blog_list_rel` VALUES ('22', '1', '5');
INSERT INTO `blog_list_rel` VALUES ('23', '4', '5');
INSERT INTO `blog_list_rel` VALUES ('24', '2', '10');
INSERT INTO `blog_list_rel` VALUES ('25', '3', '10');
INSERT INTO `blog_list_rel` VALUES ('26', '4', '10');
INSERT INTO `blog_list_rel` VALUES ('27', '6', '11');
INSERT INTO `blog_list_rel` VALUES ('30', '7', '12');
INSERT INTO `blog_list_rel` VALUES ('31', '7', '13');

-- ----------------------------
-- Table structure for `permission`
-- ----------------------------
DROP TABLE IF EXISTS `permission`;
CREATE TABLE `permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  `method` varchar(255) NOT NULL,
  `type` varchar(255) NOT NULL,
  `flag` varchar(255) DEFAULT NULL,
  `menu_img` varchar(255) DEFAULT NULL,
  `menu_order` int(11) DEFAULT NULL,
  `menu_parent_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `url` (`url`,`method`),
  KEY `menu_parent_id` (`menu_parent_id`),
  CONSTRAINT `permission_ibfk_1` FOREIGN KEY (`menu_parent_id`) REFERENCES `permission` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of permission
-- ----------------------------
INSERT INTO `permission` VALUES ('1', '写博客', '/zsblogs/menu/blogList/blog/user/edit', 'GET', 'menu', '博客', null, '1', null);
INSERT INTO `permission` VALUES ('2', '博客栏目', '/zsblogs/menu/user/blogList', 'GET', 'menu', '博客', null, '2', null);
INSERT INTO `permission` VALUES ('3', '最新博客', '/zsblogs/menu/blogList/blog', 'GET', 'menu', '博客', null, '3', null);
INSERT INTO `permission` VALUES ('4', '查看博客', '/zsblogs/menu/blogList/blog/one', 'GET', 'menu', '博客', null, '4', null);
INSERT INTO `permission` VALUES ('5', '博客栏目分页查询', '/zsblogs/api/blogList/list', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('6', '博客栏目单条查询', '/zsblogs/api/blogList/one', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('7', '博客栏目单条添加', '/zsblogs/api/blogList', 'POST', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('8', '博客栏目单条修改', '/zsblogs/api/blogList', 'PUT', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('9', '博客栏目单条删除', '/zsblogs/api/blogList/one', 'DELETE', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('10', '查询自己所有的博客栏目', '/zsblogs/api/blogList/user/all', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('11', '博客分页查询', '/zsblogs/api/blog/list', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('12', '博客单条查询', '/zsblogs/api/blog/one', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('13', '博客单条添加', '/zsblogs/api/blog', 'POST', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('14', '博客单条修改', '/zsblogs/api/blog', 'PUT', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('15', '博客单条删除', '/zsblogs/api/blog/one', 'DELETE', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('16', '博客评论分页查询', '/zsblogs/api/blogComment/list', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('17', '博客评论单条查询', '/zsblogs/api/blogComment/one', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('18', '博客评论添加', '/zsblogs/api/blogComment', 'POST', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('19', '博客评论单条修改', '/zsblogs/api/blogComment', 'PUT', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('20', '博客评论单条删除', '/zsblogs/api/blogComment/one', 'DELETE', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('21', '我的博客', '/zsblogs/menu/user/blog', 'GET', 'menu', '博客', null, '5', null);
INSERT INTO `permission` VALUES ('22', '我的信息', '/zsblogs/menu/system/users/own', 'GET', 'menu', '系统', null, '6', null);
INSERT INTO `permission` VALUES ('23', '用户信息分页查询', '/zsblogs/api/users/list', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('24', '用户信息单条查询', '/zsblogs/api/users/one', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('25', '用户信息单条添加', '/zsblogs/api/users', 'POST', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('26', '用户信息单条修改', '/zsblogs/api/users', 'PUT', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('27', '用户信息单条删除', '/zsblogs/api/users/one', 'DELETE', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('28', '注册账号', '/zsblogs/menu/system/users/logup', 'GET', 'menu', '系统', null, null, null);
INSERT INTO `permission` VALUES ('29', '注册账号', '/zsblogs/api/login/logup', 'POST', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('30', '查看博客阅读信息', '/zsblogs/menu/blogList/blog/read', 'GET', 'menu', '博客', null, null, null);
INSERT INTO `permission` VALUES ('31', '阅读信息分页查看', '/zsblogs/api/read/list', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('32', '阅读信息单条查看', '/zsblogs/api/read/one', 'GET', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('33', '阅读信息单条添加', '/zsblogs/api/read', 'POST', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('34', '阅读信息单条修改', '/zsblogs/api/read', 'PUT', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('35', '阅读信息单条删除', '/zsblogs/api/read/one', 'DELETE', 'api', '博客', null, null, null);
INSERT INTO `permission` VALUES ('36', '用户管理', '/zsblogs/menu/system/users', 'GET', 'menu', '系统', null, null, null);
INSERT INTO `permission` VALUES ('37', '角色管理', '/zsblogs/menu/system/role', 'GET', 'menu', '系统', null, null, null);
INSERT INTO `permission` VALUES ('38', '角色信息分页查询', '/zsblogs/api/role/list', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('39', '角色信息单条查询', '/zsblogs/api/role/one', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('40', '角色信息查询所有', '/zsblogs/api/role/all', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('41', '角色信息单条添加', '/zsblogs/api/role', 'POST', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('42', '角色信息单条修改', '/zsblogs/api/role', 'PUT', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('43', '角色信息单条删除', '/zsblogs/api/role/one', 'DELETE', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('44', '权限管理', '/zsblogs/menu/system/permission', 'GET', 'menu', '系统', null, null, null);
INSERT INTO `permission` VALUES ('45', '权限管理分页查询', '/zsblogs/api/permission/list', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('46', '权限管理查看所有', '/zsblogs/api/permission/all', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('47', '权限管理单条查看', '/zsblogs/api/permission/one', 'GET', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('48', '权限管理单条添加', '/zsblogs/api/permission', 'POST', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('49', '权限管理单条修改', '/zsblogs/api/permission', 'PUT', 'api', '系统', null, null, null);
INSERT INTO `permission` VALUES ('50', '权限管理单条删除', '/zsblogs/api/permission/one', 'DELETE', 'api', '系统', null, null, null);

-- ----------------------------
-- Table structure for `read`
-- ----------------------------
DROP TABLE IF EXISTS `read`;
CREATE TABLE `read` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `u_id` int(11) DEFAULT NULL,
  `b_id` int(11) NOT NULL,
  `create_time` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `u_id` (`u_id`),
  KEY `b_id` (`b_id`),
  CONSTRAINT `read_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`),
  CONSTRAINT `read_ibfk_2` FOREIGN KEY (`b_id`) REFERENCES `blog` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=140 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of read
-- ----------------------------
INSERT INTO `read` VALUES ('1', '1', '8', '2017-10-21 17:14:50');
INSERT INTO `read` VALUES ('2', '1', '8', '2017-10-21 17:14:52');
INSERT INTO `read` VALUES ('3', '1', '9', '2017-10-21 17:14:55');
INSERT INTO `read` VALUES ('4', '1', '8', '2017-10-21 17:15:01');
INSERT INTO `read` VALUES ('5', '1', '10', '2017-10-21 17:15:07');
INSERT INTO `read` VALUES ('6', '1', '10', '2017-10-21 17:15:16');
INSERT INTO `read` VALUES ('7', '1', '10', '2017-10-21 17:15:32');
INSERT INTO `read` VALUES ('8', '1', '10', '2017-10-21 17:17:41');
INSERT INTO `read` VALUES ('9', '1', '10', '2017-10-21 17:18:42');
INSERT INTO `read` VALUES ('10', '1', '10', '2017-10-21 17:19:34');
INSERT INTO `read` VALUES ('11', '1', '10', '2017-10-21 17:20:01');
INSERT INTO `read` VALUES ('12', '1', '10', '2017-10-21 17:20:06');
INSERT INTO `read` VALUES ('13', '1', '10', '2017-10-21 17:20:08');
INSERT INTO `read` VALUES ('14', '1', '10', '2017-10-21 17:20:08');
INSERT INTO `read` VALUES ('15', '1', '10', '2017-10-21 17:20:11');
INSERT INTO `read` VALUES ('16', '1', '10', '2017-10-21 17:20:12');
INSERT INTO `read` VALUES ('17', '1', '10', '2017-10-21 17:20:13');
INSERT INTO `read` VALUES ('18', '1', '10', '2017-10-21 17:20:13');
INSERT INTO `read` VALUES ('19', '1', '10', '2017-10-21 17:20:14');
INSERT INTO `read` VALUES ('20', '1', '10', '2017-10-21 17:20:15');
INSERT INTO `read` VALUES ('21', '1', '10', '2017-10-21 17:20:15');
INSERT INTO `read` VALUES ('22', '1', '10', '2017-10-21 17:20:16');
INSERT INTO `read` VALUES ('23', '1', '10', '2017-10-21 17:20:20');
INSERT INTO `read` VALUES ('24', '1', '10', '2017-10-21 17:20:21');
INSERT INTO `read` VALUES ('25', '1', '10', '2017-10-21 17:20:22');
INSERT INTO `read` VALUES ('26', '1', '10', '2017-10-21 17:20:23');
INSERT INTO `read` VALUES ('27', '1', '10', '2017-10-21 17:20:25');
INSERT INTO `read` VALUES ('28', '1', '10', '2017-10-21 17:20:26');
INSERT INTO `read` VALUES ('29', '1', '10', '2017-10-21 17:20:26');
INSERT INTO `read` VALUES ('30', '1', '10', '2017-10-21 17:20:27');
INSERT INTO `read` VALUES ('31', '1', '10', '2017-10-21 17:20:27');
INSERT INTO `read` VALUES ('32', '1', '10', '2017-10-21 17:20:28');
INSERT INTO `read` VALUES ('33', '1', '10', '2017-10-21 17:20:28');
INSERT INTO `read` VALUES ('34', '1', '10', '2017-10-21 17:20:29');
INSERT INTO `read` VALUES ('35', '1', '10', '2017-10-21 17:20:29');
INSERT INTO `read` VALUES ('36', '1', '10', '2017-10-21 17:20:30');
INSERT INTO `read` VALUES ('37', '1', '10', '2017-10-21 17:20:31');
INSERT INTO `read` VALUES ('38', '1', '10', '2017-10-21 17:20:31');
INSERT INTO `read` VALUES ('39', '1', '10', '2017-10-21 17:20:32');
INSERT INTO `read` VALUES ('40', '1', '10', '2017-10-21 17:20:52');
INSERT INTO `read` VALUES ('41', '1', '10', '2017-10-21 17:20:53');
INSERT INTO `read` VALUES ('42', '1', '10', '2017-10-21 17:20:54');
INSERT INTO `read` VALUES ('43', '1', '10', '2017-10-21 17:20:55');
INSERT INTO `read` VALUES ('44', '1', '5', '2017-10-21 17:21:05');
INSERT INTO `read` VALUES ('45', '1', '5', '2017-10-21 17:21:09');
INSERT INTO `read` VALUES ('46', '1', '5', '2017-10-21 17:21:13');
INSERT INTO `read` VALUES ('47', '1', '5', '2017-10-21 17:21:17');
INSERT INTO `read` VALUES ('48', '1', '5', '2017-10-21 17:22:33');
INSERT INTO `read` VALUES ('49', '1', '2', '2017-10-21 17:24:55');
INSERT INTO `read` VALUES ('50', '1', '10', '2017-10-21 17:52:16');
INSERT INTO `read` VALUES ('51', '1', '10', '2017-10-21 17:52:35');
INSERT INTO `read` VALUES ('52', '1', '10', '2017-10-21 17:53:07');
INSERT INTO `read` VALUES ('53', '1', '10', '2017-10-21 17:53:24');
INSERT INTO `read` VALUES ('54', '2', '10', '2017-10-24 21:33:53');
INSERT INTO `read` VALUES ('55', '2', '5', '2017-10-24 21:33:59');
INSERT INTO `read` VALUES ('56', '2', '9', '2017-10-24 21:34:06');
INSERT INTO `read` VALUES ('57', '2', '9', '2017-10-24 21:34:20');
INSERT INTO `read` VALUES ('58', '2', '9', '2017-10-24 21:43:48');
INSERT INTO `read` VALUES ('59', '2', '10', '2017-10-24 21:43:51');
INSERT INTO `read` VALUES ('60', '2', '9', '2017-10-24 21:43:54');
INSERT INTO `read` VALUES ('61', '2', '5', '2017-10-24 21:44:00');
INSERT INTO `read` VALUES ('62', '1', '10', '2017-10-24 22:03:37');
INSERT INTO `read` VALUES ('63', '1', '9', '2017-10-24 22:03:41');
INSERT INTO `read` VALUES ('64', '5', '10', '2017-10-27 17:57:36');
INSERT INTO `read` VALUES ('65', '5', '10', '2017-10-27 17:57:40');
INSERT INTO `read` VALUES ('66', '5', '5', '2017-10-27 17:57:48');
INSERT INTO `read` VALUES ('67', '5', '10', '2017-10-27 17:57:59');
INSERT INTO `read` VALUES ('68', null, '10', '2017-11-02 16:15:28');
INSERT INTO `read` VALUES ('69', null, '10', '2017-11-02 16:43:38');
INSERT INTO `read` VALUES ('70', '1', '10', '2017-11-02 16:43:50');
INSERT INTO `read` VALUES ('71', '1', '10', '2017-11-02 16:45:43');
INSERT INTO `read` VALUES ('72', '1', '10', '2017-11-02 17:26:54');
INSERT INTO `read` VALUES ('73', '1', '10', '2017-11-05 22:16:44');
INSERT INTO `read` VALUES ('74', '3', '5', '2017-11-06 11:14:38');
INSERT INTO `read` VALUES ('75', '3', '5', '2017-11-06 11:15:09');
INSERT INTO `read` VALUES ('76', '3', '10', '2017-11-06 11:15:18');
INSERT INTO `read` VALUES ('77', null, '10', '2017-11-06 11:15:28');
INSERT INTO `read` VALUES ('78', '3', '9', '2017-11-06 11:15:36');
INSERT INTO `read` VALUES ('79', '3', '9', '2017-11-06 11:15:51');
INSERT INTO `read` VALUES ('80', '3', '11', '2017-11-06 11:17:46');
INSERT INTO `read` VALUES ('81', null, '11', '2017-11-06 11:17:57');
INSERT INTO `read` VALUES ('82', '1', '11', '2017-11-06 11:18:28');
INSERT INTO `read` VALUES ('83', null, '11', '2017-11-06 11:18:40');
INSERT INTO `read` VALUES ('84', null, '11', '2017-11-06 11:18:44');
INSERT INTO `read` VALUES ('85', '3', '11', '2017-11-06 13:13:07');
INSERT INTO `read` VALUES ('86', '3', '11', '2017-11-06 13:13:12');
INSERT INTO `read` VALUES ('87', null, '11', '2017-11-06 13:13:16');
INSERT INTO `read` VALUES ('88', '4', '12', '2017-11-06 13:58:03');
INSERT INTO `read` VALUES ('89', '4', '12', '2017-11-06 13:58:12');
INSERT INTO `read` VALUES ('90', null, '12', '2017-11-06 13:58:13');
INSERT INTO `read` VALUES ('91', '4', '12', '2017-11-06 14:07:00');
INSERT INTO `read` VALUES ('92', '4', '12', '2017-11-06 14:07:07');
INSERT INTO `read` VALUES ('93', '4', '12', '2017-11-06 14:07:18');
INSERT INTO `read` VALUES ('94', '4', '12', '2017-11-06 14:07:25');
INSERT INTO `read` VALUES ('95', '4', '12', '2017-11-06 14:08:55');
INSERT INTO `read` VALUES ('96', '4', '12', '2017-11-06 14:09:00');
INSERT INTO `read` VALUES ('97', '4', '13', '2017-11-06 14:10:40');
INSERT INTO `read` VALUES ('98', '4', '13', '2017-11-06 14:10:45');
INSERT INTO `read` VALUES ('99', '4', '5', '2017-11-06 14:11:19');
INSERT INTO `read` VALUES ('100', '4', '13', '2017-11-06 14:11:22');
INSERT INTO `read` VALUES ('101', null, '5', '2017-11-06 14:11:28');
INSERT INTO `read` VALUES ('102', '4', '5', '2017-11-06 14:11:35');
INSERT INTO `read` VALUES ('103', '4', '13', '2017-11-06 14:11:42');
INSERT INTO `read` VALUES ('104', null, '13', '2017-11-06 14:44:41');
INSERT INTO `read` VALUES ('105', null, '13', '2017-11-06 14:48:04');
INSERT INTO `read` VALUES ('106', null, '5', '2017-11-06 14:52:11');
INSERT INTO `read` VALUES ('107', null, '12', '2017-11-06 14:52:19');
INSERT INTO `read` VALUES ('108', null, '13', '2017-11-06 14:52:36');
INSERT INTO `read` VALUES ('109', null, '12', '2017-11-06 14:52:40');
INSERT INTO `read` VALUES ('110', null, '12', '2017-11-06 14:54:20');
INSERT INTO `read` VALUES ('111', null, '12', '2017-11-06 14:54:24');
INSERT INTO `read` VALUES ('112', null, '12', '2017-11-06 14:54:24');
INSERT INTO `read` VALUES ('113', null, '5', '2017-11-06 14:55:08');
INSERT INTO `read` VALUES ('114', null, '13', '2017-11-06 14:55:14');
INSERT INTO `read` VALUES ('115', null, '12', '2017-11-06 15:09:56');
INSERT INTO `read` VALUES ('116', null, '12', '2017-11-06 15:10:46');
INSERT INTO `read` VALUES ('117', '1', '13', '2017-11-06 15:11:12');
INSERT INTO `read` VALUES ('118', '1', '12', '2017-11-06 15:11:21');
INSERT INTO `read` VALUES ('119', '1', '12', '2017-11-06 15:11:59');
INSERT INTO `read` VALUES ('120', '1', '12', '2017-11-06 15:12:03');
INSERT INTO `read` VALUES ('121', '1', '12', '2017-11-06 15:12:04');
INSERT INTO `read` VALUES ('122', '1', '12', '2017-11-06 15:12:09');
INSERT INTO `read` VALUES ('123', '1', '12', '2017-11-06 15:12:10');
INSERT INTO `read` VALUES ('124', '1', '12', '2017-11-06 15:12:20');
INSERT INTO `read` VALUES ('125', '1', '13', '2017-11-06 15:12:49');
INSERT INTO `read` VALUES ('126', null, '13', '2017-11-06 15:13:07');
INSERT INTO `read` VALUES ('127', null, '13', '2017-11-06 15:13:25');
INSERT INTO `read` VALUES ('128', null, '5', '2017-11-06 15:13:59');
INSERT INTO `read` VALUES ('129', null, '13', '2017-11-06 15:14:48');
INSERT INTO `read` VALUES ('130', null, '12', '2017-11-06 15:14:53');
INSERT INTO `read` VALUES ('131', null, '5', '2017-11-06 15:15:16');
INSERT INTO `read` VALUES ('132', '1', '12', '2017-11-06 15:15:42');
INSERT INTO `read` VALUES ('133', '1', '12', '2017-11-06 15:20:02');
INSERT INTO `read` VALUES ('134', '1', '12', '2017-11-06 15:20:12');
INSERT INTO `read` VALUES ('135', '1', '12', '2017-11-06 15:20:35');
INSERT INTO `read` VALUES ('136', '1', '11', '2017-11-06 15:20:42');
INSERT INTO `read` VALUES ('137', '1', '5', '2017-11-06 15:20:49');
INSERT INTO `read` VALUES ('138', '1', '13', '2017-11-06 15:21:02');
INSERT INTO `read` VALUES ('139', '1', '13', '2017-11-06 15:21:32');

-- ----------------------------
-- Table structure for `role`
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `introduction` varchar(255) DEFAULT NULL,
  `pids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES ('1', '开发者', '拥有所有权限', '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50');
INSERT INTO `role` VALUES ('2', '博客作者', '拥有写博客的权限', '1,10,2,13');
INSERT INTO `role` VALUES ('3', '普通用户', '这个角色一定不能被删除，这是注册时使用的，是程序给新用户的默认角色（其实你想删也删不掉的，不信你试试）', '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31');

-- ----------------------------
-- Table structure for `timeline`
-- ----------------------------
DROP TABLE IF EXISTS `timeline`;
CREATE TABLE `timeline` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `u_id` int(11) NOT NULL,
  `p_id` int(11) NOT NULL,
  `create_time` datetime NOT NULL,
  `info` text,
  PRIMARY KEY (`id`),
  KEY `u_id` (`u_id`),
  KEY `p_id` (`p_id`),
  CONSTRAINT `timeline_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`),
  CONSTRAINT `timeline_ibfk_2` FOREIGN KEY (`p_id`) REFERENCES `permission` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1678 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of timeline
-- ----------------------------
INSERT INTO `timeline` VALUES ('1', '1', '1', '2017-10-17 15:54:37', '{}');
INSERT INTO `timeline` VALUES ('2', '1', '1', '2017-10-17 15:54:54', '{}');
INSERT INTO `timeline` VALUES ('3', '1', '1', '2017-10-17 16:10:23', '{}');
INSERT INTO `timeline` VALUES ('4', '1', '1', '2017-10-17 16:12:07', '{}');
INSERT INTO `timeline` VALUES ('6', '1', '1', '2017-10-17 16:16:58', '{}');
INSERT INTO `timeline` VALUES ('7', '1', '10', '2017-10-17 16:16:59', '{}');
INSERT INTO `timeline` VALUES ('8', '1', '1', '2017-10-17 16:18:54', '{}');
INSERT INTO `timeline` VALUES ('9', '1', '10', '2017-10-17 16:18:54', '{}');
INSERT INTO `timeline` VALUES ('10', '1', '1', '2017-10-17 16:23:41', '{}');
INSERT INTO `timeline` VALUES ('11', '1', '10', '2017-10-17 16:23:41', '{}');
INSERT INTO `timeline` VALUES ('12', '1', '1', '2017-10-17 16:25:17', '{}');
INSERT INTO `timeline` VALUES ('13', '1', '10', '2017-10-17 16:25:17', '{}');
INSERT INTO `timeline` VALUES ('14', '1', '1', '2017-10-17 16:30:45', '{}');
INSERT INTO `timeline` VALUES ('15', '1', '10', '2017-10-17 16:30:45', '{}');
INSERT INTO `timeline` VALUES ('16', '1', '1', '2017-10-17 16:30:52', '{}');
INSERT INTO `timeline` VALUES ('17', '1', '1', '2017-10-17 16:31:14', '{}');
INSERT INTO `timeline` VALUES ('18', '1', '1', '2017-10-17 16:31:26', '{}');
INSERT INTO `timeline` VALUES ('19', '1', '1', '2017-10-17 16:31:33', '{}');
INSERT INTO `timeline` VALUES ('20', '1', '10', '2017-10-17 16:31:33', '{}');
INSERT INTO `timeline` VALUES ('21', '1', '1', '2017-10-17 16:31:34', '{}');
INSERT INTO `timeline` VALUES ('22', '1', '10', '2017-10-17 16:31:34', '{}');
INSERT INTO `timeline` VALUES ('23', '1', '1', '2017-10-17 16:31:34', '{}');
INSERT INTO `timeline` VALUES ('24', '1', '10', '2017-10-17 16:31:35', '{}');
INSERT INTO `timeline` VALUES ('25', '1', '1', '2017-10-17 16:31:35', '{}');
INSERT INTO `timeline` VALUES ('26', '1', '10', '2017-10-17 16:31:35', '{}');
INSERT INTO `timeline` VALUES ('27', '1', '1', '2017-10-17 16:32:02', '{}');
INSERT INTO `timeline` VALUES ('28', '1', '10', '2017-10-17 16:32:03', '{}');
INSERT INTO `timeline` VALUES ('29', '1', '1', '2017-10-17 16:32:11', '{}');
INSERT INTO `timeline` VALUES ('30', '1', '1', '2017-10-17 16:32:27', '{}');
INSERT INTO `timeline` VALUES ('31', '1', '1', '2017-10-17 17:19:58', '{}');
INSERT INTO `timeline` VALUES ('32', '1', '10', '2017-10-17 17:19:58', '{}');
INSERT INTO `timeline` VALUES ('33', '1', '1', '2017-10-17 17:23:31', '{}');
INSERT INTO `timeline` VALUES ('34', '1', '10', '2017-10-17 17:23:32', '{}');
INSERT INTO `timeline` VALUES ('35', '1', '1', '2017-10-17 17:24:32', '{}');
INSERT INTO `timeline` VALUES ('36', '1', '10', '2017-10-17 17:24:32', '{}');
INSERT INTO `timeline` VALUES ('37', '1', '1', '2017-10-17 17:25:05', '{}');
INSERT INTO `timeline` VALUES ('38', '1', '10', '2017-10-17 17:25:05', '{}');
INSERT INTO `timeline` VALUES ('39', '1', '1', '2017-10-17 17:25:45', '{}');
INSERT INTO `timeline` VALUES ('40', '1', '10', '2017-10-17 17:25:45', '{}');
INSERT INTO `timeline` VALUES ('41', '1', '1', '2017-10-17 17:27:07', '{}');
INSERT INTO `timeline` VALUES ('42', '1', '10', '2017-10-17 17:27:07', '{}');
INSERT INTO `timeline` VALUES ('43', '1', '1', '2017-10-17 17:28:19', '{}');
INSERT INTO `timeline` VALUES ('44', '1', '10', '2017-10-17 17:28:19', '{}');
INSERT INTO `timeline` VALUES ('45', '1', '1', '2017-10-17 17:28:31', '{}');
INSERT INTO `timeline` VALUES ('46', '1', '10', '2017-10-17 17:28:31', '{}');
INSERT INTO `timeline` VALUES ('47', '1', '1', '2017-10-17 17:29:28', '{}');
INSERT INTO `timeline` VALUES ('48', '1', '10', '2017-10-17 17:29:28', '{}');
INSERT INTO `timeline` VALUES ('49', '1', '1', '2017-10-17 17:31:23', '{}');
INSERT INTO `timeline` VALUES ('50', '1', '10', '2017-10-17 17:31:23', '{}');
INSERT INTO `timeline` VALUES ('51', '1', '1', '2017-10-17 17:32:46', '{}');
INSERT INTO `timeline` VALUES ('52', '1', '10', '2017-10-17 17:32:47', '{}');
INSERT INTO `timeline` VALUES ('53', '1', '1', '2017-10-18 10:43:35', '{}');
INSERT INTO `timeline` VALUES ('54', '1', '10', '2017-10-18 10:43:35', '{}');
INSERT INTO `timeline` VALUES ('55', '1', '2', '2017-10-18 10:43:36', '{}');
INSERT INTO `timeline` VALUES ('56', '1', '1', '2017-10-18 10:43:40', '{}');
INSERT INTO `timeline` VALUES ('57', '1', '10', '2017-10-18 10:43:40', '{}');
INSERT INTO `timeline` VALUES ('58', '1', '1', '2017-10-18 14:13:17', '{}');
INSERT INTO `timeline` VALUES ('59', '1', '10', '2017-10-18 14:13:17', '{}');
INSERT INTO `timeline` VALUES ('60', '1', '1', '2017-10-18 14:13:37', '{}');
INSERT INTO `timeline` VALUES ('61', '1', '10', '2017-10-18 14:13:37', '{}');
INSERT INTO `timeline` VALUES ('62', '1', '1', '2017-10-18 14:13:48', '{}');
INSERT INTO `timeline` VALUES ('63', '1', '10', '2017-10-18 14:13:48', '{}');
INSERT INTO `timeline` VALUES ('64', '1', '1', '2017-10-18 14:13:49', '{}');
INSERT INTO `timeline` VALUES ('65', '1', '10', '2017-10-18 14:13:49', '{}');
INSERT INTO `timeline` VALUES ('66', '1', '1', '2017-10-18 14:13:56', '{}');
INSERT INTO `timeline` VALUES ('67', '1', '10', '2017-10-18 14:13:56', '{}');
INSERT INTO `timeline` VALUES ('68', '1', '1', '2017-10-18 14:16:27', '{}');
INSERT INTO `timeline` VALUES ('69', '1', '10', '2017-10-18 14:16:28', '{}');
INSERT INTO `timeline` VALUES ('70', '1', '1', '2017-10-18 14:18:33', '{}');
INSERT INTO `timeline` VALUES ('71', '1', '10', '2017-10-18 14:18:33', '{}');
INSERT INTO `timeline` VALUES ('72', '1', '1', '2017-10-18 14:35:53', '{}');
INSERT INTO `timeline` VALUES ('73', '1', '1', '2017-10-18 14:36:34', '{}');
INSERT INTO `timeline` VALUES ('74', '1', '10', '2017-10-18 14:36:35', '{}');
INSERT INTO `timeline` VALUES ('75', '1', '1', '2017-10-18 14:37:09', '{}');
INSERT INTO `timeline` VALUES ('76', '1', '10', '2017-10-18 14:37:09', '{}');
INSERT INTO `timeline` VALUES ('77', '1', '1', '2017-10-18 14:48:58', '{}');
INSERT INTO `timeline` VALUES ('78', '1', '10', '2017-10-18 14:48:58', '{}');
INSERT INTO `timeline` VALUES ('79', '1', '1', '2017-10-18 14:49:00', '{}');
INSERT INTO `timeline` VALUES ('80', '1', '10', '2017-10-18 14:49:00', '{}');
INSERT INTO `timeline` VALUES ('81', '1', '13', '2017-10-18 14:50:03', '{\"title\":[\"先测试一篇\"],\"content\":[\"这是一篇测试的文档\"],\"summary\":[\"11111111\"],\"blIds[]\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('82', '1', '13', '2017-10-18 14:51:51', '{\"title\":[\"先测试一篇\"],\"content\":[\"这是一篇测试的文档\"],\"summary\":[\"11111111\"],\"blIds[]\":[\"1\",\"2\"]}');
INSERT INTO `timeline` VALUES ('83', '1', '13', '2017-10-18 14:59:14', '{\"title\":[\"先测试一篇\"],\"content\":[\"这是一篇测试的文档\"],\"summary\":[\"11111111\"],\"blIds[]\":[\"1\",\"2\"]}');
INSERT INTO `timeline` VALUES ('84', '1', '1', '2017-10-18 15:02:21', '{}');
INSERT INTO `timeline` VALUES ('85', '1', '10', '2017-10-18 15:02:22', '{}');
INSERT INTO `timeline` VALUES ('86', '1', '1', '2017-10-18 15:02:32', '{}');
INSERT INTO `timeline` VALUES ('87', '1', '10', '2017-10-18 15:02:32', '{}');
INSERT INTO `timeline` VALUES ('88', '1', '13', '2017-10-18 15:02:42', '{\"title\":[\"111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"33333333333\"],\"blIds[]\":[\"1\",\"2\",\"3\",\"4\"]}');
INSERT INTO `timeline` VALUES ('89', '1', '13', '2017-10-18 15:05:37', '{\"title\":[\"111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"33333333333\"],\"blIds[]\":[\"1\",\"2\",\"3\",\"4\"]}');
INSERT INTO `timeline` VALUES ('90', '1', '1', '2017-10-18 15:07:44', '{}');
INSERT INTO `timeline` VALUES ('91', '1', '10', '2017-10-18 15:07:45', '{}');
INSERT INTO `timeline` VALUES ('92', '1', '13', '2017-10-18 15:07:52', '{\"title\":[\"1111111111111\"],\"content\":[\"2222222222222\"],\"summary\":[\"33333333333\"],\"blIds[]\":[\"1\",\"2\"],\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('93', '1', '13', '2017-10-18 15:08:30', '{\"title\":[\"1111111111111\"],\"content\":[\"2222222222222\"],\"summary\":[\"33333333333\"],\"blIds[]\":[\"1\"],\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('94', '1', '1', '2017-10-18 15:09:13', '{}');
INSERT INTO `timeline` VALUES ('95', '1', '10', '2017-10-18 15:09:14', '{}');
INSERT INTO `timeline` VALUES ('96', '1', '13', '2017-10-18 15:09:18', '{\"title\":[\"1\"],\"content\":[\"11\"],\"summary\":[\"2\"],\"blIds\":[\"\"],\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('97', '1', '1', '2017-10-18 15:11:54', '{}');
INSERT INTO `timeline` VALUES ('98', '1', '10', '2017-10-18 15:11:54', '{}');
INSERT INTO `timeline` VALUES ('99', '1', '13', '2017-10-18 15:12:07', '{\"title\":[\"111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"333333333\"],\"blIds\":[\"\"],\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('100', '1', '1', '2017-10-18 15:14:30', '{}');
INSERT INTO `timeline` VALUES ('101', '1', '10', '2017-10-18 15:14:31', '{}');
INSERT INTO `timeline` VALUES ('102', '1', '13', '2017-10-18 15:14:39', '{\"title\":[\"1111111111111111\"],\"content\":[\"2222222222222\"],\"summary\":[\"3333333333333\"],\"blIds[]\":[\"2\",\"3\",\"4\"]}');
INSERT INTO `timeline` VALUES ('103', '1', '1', '2017-10-18 15:15:13', '{}');
INSERT INTO `timeline` VALUES ('104', '1', '10', '2017-10-18 15:15:13', '{}');
INSERT INTO `timeline` VALUES ('105', '1', '13', '2017-10-18 15:15:23', '{\"title\":[\"111111111\"],\"content\":[\"2222222\"],\"summary\":[\"3333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('106', '1', '13', '2017-10-18 15:24:29', '{\"title\":[\"111111111\"],\"content\":[\"2222222\"],\"summary\":[\"3333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('107', '1', '13', '2017-10-18 15:28:35', '{\"title\":[\"111111111\"],\"content\":[\"2222222\"],\"summary\":[\"3333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('108', '1', '1', '2017-10-18 15:36:40', '{}');
INSERT INTO `timeline` VALUES ('109', '1', '10', '2017-10-18 15:36:40', '{}');
INSERT INTO `timeline` VALUES ('110', '1', '13', '2017-10-18 15:36:49', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"3333333333\"],\"blIds[]\":[\"1\",\"2\",\"3\",\"4\"]}');
INSERT INTO `timeline` VALUES ('111', '1', '1', '2017-10-18 15:40:36', '{}');
INSERT INTO `timeline` VALUES ('112', '1', '10', '2017-10-18 15:40:36', '{}');
INSERT INTO `timeline` VALUES ('113', '1', '1', '2017-10-18 15:40:37', '{}');
INSERT INTO `timeline` VALUES ('114', '1', '10', '2017-10-18 15:40:37', '{}');
INSERT INTO `timeline` VALUES ('115', '1', '13', '2017-10-18 15:40:45', '{}');
INSERT INTO `timeline` VALUES ('116', '1', '1', '2017-10-18 15:41:52', '{}');
INSERT INTO `timeline` VALUES ('117', '1', '10', '2017-10-18 15:41:52', '{}');
INSERT INTO `timeline` VALUES ('118', '1', '13', '2017-10-18 15:41:59', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"333333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('119', '1', '13', '2017-10-18 15:44:19', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"333333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('120', '1', '13', '2017-10-18 15:44:57', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"333333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('121', '1', '13', '2017-10-18 15:45:08', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"333333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('122', '1', '13', '2017-10-18 15:47:04', '{\"title\":[\"1111111111\"],\"content\":[\"22222222222222\"],\"summary\":[\"333333333333\"],\"blIds[]\":[\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('123', '1', '1', '2017-10-18 15:49:35', '{}');
INSERT INTO `timeline` VALUES ('124', '1', '10', '2017-10-18 15:49:35', '{}');
INSERT INTO `timeline` VALUES ('125', '1', '13', '2017-10-18 15:49:41', '{\"title\":[\"1111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"3333333\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('126', '1', '13', '2017-10-18 15:51:25', '{\"title\":[\"1111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"3333333\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('127', '1', '13', '2017-10-18 15:57:38', '{\"title\":[\"1111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"3333333\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('128', '1', '13', '2017-10-18 15:58:15', '{\"title\":[\"1111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"3333333\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('129', '1', '13', '2017-10-18 15:59:13', '{\"title\":[\"1111111111\"],\"content\":[\"2222222222\"],\"summary\":[\"3333333\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('130', '1', '1', '2017-10-18 16:03:19', '{}');
INSERT INTO `timeline` VALUES ('131', '1', '10', '2017-10-18 16:03:19', '{}');
INSERT INTO `timeline` VALUES ('132', '1', '13', '2017-10-18 16:03:24', '{\"title\":[\"222222222222\"],\"content\":[\"33333\"],\"summary\":[\"33344444\"],\"blIds\":[\"[\\\"2\\\",\\\"3\\\"]\"]}');
INSERT INTO `timeline` VALUES ('133', '1', '2', '2017-10-18 16:07:40', '{}');
INSERT INTO `timeline` VALUES ('134', '1', '2', '2017-10-18 16:08:49', '{}');
INSERT INTO `timeline` VALUES ('135', '1', '5', '2017-10-18 16:08:50', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('136', '1', '2', '2017-10-18 16:09:31', '{}');
INSERT INTO `timeline` VALUES ('137', '1', '5', '2017-10-18 16:09:33', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('138', '1', '2', '2017-10-18 16:12:28', '{}');
INSERT INTO `timeline` VALUES ('139', '1', '5', '2017-10-18 16:12:30', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('140', '1', '2', '2017-10-18 16:12:48', '{}');
INSERT INTO `timeline` VALUES ('141', '1', '5', '2017-10-18 16:12:50', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('142', '1', '5', '2017-10-18 16:12:52', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"blOrder\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('143', '1', '5', '2017-10-18 16:12:53', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"blOrder\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('144', '1', '5', '2017-10-18 16:12:54', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"blOrder\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('145', '1', '2', '2017-10-18 16:15:11', '{}');
INSERT INTO `timeline` VALUES ('146', '1', '2', '2017-10-18 16:15:13', '{}');
INSERT INTO `timeline` VALUES ('147', '1', '5', '2017-10-18 16:15:14', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('148', '1', '2', '2017-10-18 16:16:21', '{}');
INSERT INTO `timeline` VALUES ('149', '1', '2', '2017-10-18 16:16:32', '{}');
INSERT INTO `timeline` VALUES ('150', '1', '2', '2017-10-18 16:16:33', '{}');
INSERT INTO `timeline` VALUES ('151', '1', '2', '2017-10-18 16:16:45', '{}');
INSERT INTO `timeline` VALUES ('152', '1', '2', '2017-10-18 16:17:28', '{}');
INSERT INTO `timeline` VALUES ('153', '1', '5', '2017-10-18 16:17:37', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('154', '1', '2', '2017-10-18 16:50:33', '{}');
INSERT INTO `timeline` VALUES ('155', '1', '5', '2017-10-18 16:50:34', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('156', '1', '5', '2017-10-18 16:50:38', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"name\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('157', '1', '5', '2017-10-18 16:50:40', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"name\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('158', '1', '5', '2017-10-18 16:50:40', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"id\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('159', '1', '5', '2017-10-18 16:50:41', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"id\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('160', '1', '2', '2017-10-18 16:52:51', '{}');
INSERT INTO `timeline` VALUES ('161', '1', '5', '2017-10-18 16:52:53', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('162', '1', '2', '2017-10-18 16:53:14', '{}');
INSERT INTO `timeline` VALUES ('163', '1', '5', '2017-10-18 16:55:17', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('164', '1', '2', '2017-10-18 16:55:24', '{}');
INSERT INTO `timeline` VALUES ('165', '1', '1', '2017-10-18 16:55:25', '{}');
INSERT INTO `timeline` VALUES ('166', '1', '10', '2017-10-18 16:55:25', '{}');
INSERT INTO `timeline` VALUES ('167', '1', '2', '2017-10-18 17:01:18', '{}');
INSERT INTO `timeline` VALUES ('168', '1', '5', '2017-10-18 17:01:20', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('169', '1', '7', '2017-10-18 17:01:33', '{\"_method\":[\"post\"],\"_token\":[\"181650253275604\"],\"name\":[\"java web\"],\"blOrder\":[\"5\"]}');
INSERT INTO `timeline` VALUES ('170', '1', '5', '2017-10-18 17:01:34', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('171', '1', '5', '2017-10-18 17:03:22', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('172', '1', '8', '2017-10-18 17:03:52', '{\"_method\":[\"put\"],\"_token\":[\"181650253275604\"],\"name\":[\"java web\"],\"blOrder\":[\"6\"]}');
INSERT INTO `timeline` VALUES ('173', '1', '5', '2017-10-18 17:03:52', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('174', '1', '8', '2017-10-18 17:04:10', '{\"_method\":[\"put\"],\"_token\":[\"181650253275604\"],\"name\":[\"java web\"],\"blOrder\":[\"6\"]}');
INSERT INTO `timeline` VALUES ('175', '1', '5', '2017-10-18 17:04:10', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('176', '1', '2', '2017-10-18 17:05:40', '{}');
INSERT INTO `timeline` VALUES ('177', '1', '5', '2017-10-18 17:05:43', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('178', '1', '8', '2017-10-18 17:05:49', '{\"_method\":[\"put\"],\"_token\":[\"181650253275604\"],\"id\":[\"5\"],\"name\":[\"java web\"],\"blOrder\":[\"6\"]}');
INSERT INTO `timeline` VALUES ('179', '1', '5', '2017-10-18 17:05:49', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('180', '1', '8', '2017-10-18 17:05:55', '{\"_method\":[\"put\"],\"_token\":[\"181650253275604\"],\"id\":[\"5\"],\"name\":[\"java web1\"],\"blOrder\":[\"6\"]}');
INSERT INTO `timeline` VALUES ('181', '1', '5', '2017-10-18 17:05:55', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('182', '1', '8', '2017-10-18 17:06:01', '{\"_method\":[\"put\"],\"_token\":[\"181650253275604\"],\"id\":[\"5\"],\"name\":[\"java web\"],\"blOrder\":[\"5\"]}');
INSERT INTO `timeline` VALUES ('183', '1', '5', '2017-10-18 17:06:02', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('184', '1', '2', '2017-10-18 17:30:10', '{}');
INSERT INTO `timeline` VALUES ('185', '1', '5', '2017-10-18 17:30:12', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('186', '1', '2', '2017-10-18 17:31:30', '{}');
INSERT INTO `timeline` VALUES ('187', '1', '5', '2017-10-18 17:31:32', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('188', '1', '2', '2017-10-18 17:35:45', '{}');
INSERT INTO `timeline` VALUES ('189', '1', '5', '2017-10-18 17:35:46', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('190', '2', '2', '2017-10-18 17:36:00', '{}');
INSERT INTO `timeline` VALUES ('191', '2', '5', '2017-10-18 17:36:01', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('192', '1', '2', '2017-10-18 17:36:12', '{}');
INSERT INTO `timeline` VALUES ('193', '1', '5', '2017-10-18 17:36:13', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('194', '1', '1', '2017-10-18 17:36:33', '{}');
INSERT INTO `timeline` VALUES ('195', '1', '10', '2017-10-18 17:36:33', '{}');
INSERT INTO `timeline` VALUES ('196', '2', '1', '2017-10-18 17:36:46', '{}');
INSERT INTO `timeline` VALUES ('197', '2', '10', '2017-10-18 17:36:47', '{}');
INSERT INTO `timeline` VALUES ('198', '2', '2', '2017-10-18 17:39:47', '{}');
INSERT INTO `timeline` VALUES ('199', '2', '2', '2017-10-18 17:39:49', '{}');
INSERT INTO `timeline` VALUES ('200', '2', '2', '2017-10-18 17:56:14', '{}');
INSERT INTO `timeline` VALUES ('201', '2', '2', '2017-10-18 18:02:10', '{}');
INSERT INTO `timeline` VALUES ('202', '2', '5', '2017-10-18 18:02:12', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('203', '2', '2', '2017-10-19 11:30:22', '{}');
INSERT INTO `timeline` VALUES ('204', '2', '5', '2017-10-19 11:30:23', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('205', '2', '1', '2017-10-19 14:30:04', '{}');
INSERT INTO `timeline` VALUES ('206', '2', '10', '2017-10-19 14:30:04', '{}');
INSERT INTO `timeline` VALUES ('207', '2', '2', '2017-10-19 14:30:05', '{}');
INSERT INTO `timeline` VALUES ('208', '2', '5', '2017-10-19 14:30:06', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('209', '2', '1', '2017-10-19 14:30:11', '{}');
INSERT INTO `timeline` VALUES ('210', '2', '10', '2017-10-19 14:30:12', '{}');
INSERT INTO `timeline` VALUES ('211', '2', '16', '2017-10-19 15:38:59', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('212', '2', '16', '2017-10-19 15:39:55', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('213', '2', '16', '2017-10-19 16:13:29', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('214', '2', '16', '2017-10-19 16:15:24', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('215', '2', '12', '2017-10-19 16:26:42', '{}');
INSERT INTO `timeline` VALUES ('216', '2', '16', '2017-10-19 16:28:47', '{}');
INSERT INTO `timeline` VALUES ('217', '2', '16', '2017-10-19 16:31:06', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('218', '2', '16', '2017-10-19 16:35:42', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('219', '2', '2', '2017-10-19 16:36:04', '{}');
INSERT INTO `timeline` VALUES ('220', '2', '5', '2017-10-19 16:36:06', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('221', '1', '2', '2017-10-19 16:36:14', '{}');
INSERT INTO `timeline` VALUES ('222', '1', '5', '2017-10-19 16:36:15', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('223', '1', '12', '2017-10-19 16:36:52', '{}');
INSERT INTO `timeline` VALUES ('224', '1', '16', '2017-10-19 16:39:02', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('225', '1', '16', '2017-10-19 16:39:09', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('226', '1', '16', '2017-10-19 16:39:10', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('227', '1', '16', '2017-10-19 16:39:12', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('228', '1', '16', '2017-10-19 16:39:13', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('229', '1', '2', '2017-10-19 16:39:17', '{}');
INSERT INTO `timeline` VALUES ('230', '1', '5', '2017-10-19 16:39:18', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('231', '1', '16', '2017-10-19 16:39:22', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('232', '1', '16', '2017-10-19 16:43:07', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('233', '1', '16', '2017-10-19 16:43:41', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('234', '1', '16', '2017-10-19 16:47:44', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('235', '1', '16', '2017-10-19 17:10:26', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('236', '1', '16', '2017-10-19 17:12:03', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('237', '1', '16', '2017-10-19 17:12:20', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('238', '1', '16', '2017-10-19 17:13:26', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('239', '1', '16', '2017-10-19 17:13:38', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('240', '1', '16', '2017-10-19 17:13:46', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('241', '1', '16', '2017-10-19 17:20:10', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('242', '1', '18', '2017-10-19 17:20:17', '{\"content\":[\"测试一下\"],\"bId\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('243', '1', '16', '2017-10-19 17:20:47', '{\"page\":[\"1\"],\"rows\":[\"20\"],\"int1\":[\"9\"]}');
INSERT INTO `timeline` VALUES ('244', '1', '2', '2017-10-19 20:35:02', '{}');
INSERT INTO `timeline` VALUES ('245', '1', '5', '2017-10-19 20:35:04', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('246', '1', '1', '2017-10-19 20:45:14', '{}');
INSERT INTO `timeline` VALUES ('247', '1', '10', '2017-10-19 20:45:14', '{}');
INSERT INTO `timeline` VALUES ('248', '1', '2', '2017-10-19 20:45:36', '{}');
INSERT INTO `timeline` VALUES ('249', '1', '5', '2017-10-19 20:45:37', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('250', '1', '2', '2017-10-19 20:46:27', '{}');
INSERT INTO `timeline` VALUES ('251', '1', '5', '2017-10-19 20:48:32', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('252', '1', '5', '2017-10-19 20:48:38', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"uId\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('253', '1', '5', '2017-10-19 20:48:38', '{\"page\":[\"1\"],\"rows\":[\"25\"],\"sort\":[\"uId\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('254', '1', '2', '2017-10-19 20:49:06', '{}');
INSERT INTO `timeline` VALUES ('255', '1', '5', '2017-10-19 20:49:07', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('256', '1', '2', '2017-10-20 09:07:59', '{}');
INSERT INTO `timeline` VALUES ('257', '1', '5', '2017-10-20 09:08:00', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('258', '1', '2', '2017-10-20 09:09:04', '{}');
INSERT INTO `timeline` VALUES ('259', '1', '2', '2017-10-20 09:11:26', '{}');
INSERT INTO `timeline` VALUES ('260', '1', '5', '2017-10-20 09:11:28', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('261', '1', '5', '2017-10-20 09:11:30', '{\"int2\":[\"1\"],\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('262', '1', '5', '2017-10-20 09:11:33', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('263', '1', '5', '2017-10-20 09:11:41', '{\"str1\":[\"设计\"],\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('264', '1', '5', '2017-10-20 09:11:44', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('265', '1', '2', '2017-10-20 09:12:57', '{}');
INSERT INTO `timeline` VALUES ('266', '1', '5', '2017-10-20 09:13:05', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('267', '1', '5', '2017-10-20 09:13:18', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('268', '1', '7', '2017-10-20 09:14:44', '{\"_method\":[\"post\"],\"_token\":[\"20911198383563\"],\"id\":[\"\"],\"name\":[\"11111\"],\"blOrder\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('269', '1', '5', '2017-10-20 09:14:45', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('270', '1', '9', '2017-10-20 09:14:48', '{\"id\":[\"undefined\"]}');
INSERT INTO `timeline` VALUES ('271', '1', '2', '2017-10-20 09:14:52', '{}');
INSERT INTO `timeline` VALUES ('272', '1', '5', '2017-10-20 09:14:54', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('273', '1', '9', '2017-10-20 09:14:56', '{\"id\":[\"6\"]}');
INSERT INTO `timeline` VALUES ('274', '1', '5', '2017-10-20 09:14:56', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('275', '1', '21', '2017-10-20 11:04:00', '{}');
INSERT INTO `timeline` VALUES ('276', '1', '21', '2017-10-20 11:04:09', '{}');
INSERT INTO `timeline` VALUES ('277', '1', '21', '2017-10-20 11:06:19', '{}');
INSERT INTO `timeline` VALUES ('278', '1', '21', '2017-10-20 11:06:27', '{}');
INSERT INTO `timeline` VALUES ('279', '1', '21', '2017-10-20 11:09:03', '{}');
INSERT INTO `timeline` VALUES ('280', '1', '2', '2017-10-20 11:09:33', '{}');
INSERT INTO `timeline` VALUES ('281', '1', '2', '2017-10-20 11:09:35', '{}');
INSERT INTO `timeline` VALUES ('282', '1', '2', '2017-10-20 11:10:25', '{}');
INSERT INTO `timeline` VALUES ('283', '1', '5', '2017-10-20 11:10:26', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('284', '1', '2', '2017-10-20 11:10:51', '{}');
INSERT INTO `timeline` VALUES ('285', '1', '2', '2017-10-20 11:10:52', '{}');
INSERT INTO `timeline` VALUES ('286', '1', '5', '2017-10-20 11:10:52', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('287', '1', '5', '2017-10-20 11:11:17', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('288', '1', '2', '2017-10-20 11:11:20', '{}');
INSERT INTO `timeline` VALUES ('289', '1', '2', '2017-10-20 11:11:22', '{}');
INSERT INTO `timeline` VALUES ('290', '1', '5', '2017-10-20 11:11:23', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('291', '1', '2', '2017-10-20 11:11:37', '{}');
INSERT INTO `timeline` VALUES ('292', '1', '5', '2017-10-20 11:11:38', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('293', '1', '21', '2017-10-20 11:13:45', '{}');
INSERT INTO `timeline` VALUES ('294', '1', '2', '2017-10-20 11:14:31', '{}');
INSERT INTO `timeline` VALUES ('295', '1', '5', '2017-10-20 11:14:34', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('296', '1', '21', '2017-10-20 11:14:36', '{}');
INSERT INTO `timeline` VALUES ('297', '1', '2', '2017-10-20 11:14:38', '{}');
INSERT INTO `timeline` VALUES ('298', '1', '5', '2017-10-20 11:14:39', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('299', '1', '2', '2017-10-20 11:15:37', '{}');
INSERT INTO `timeline` VALUES ('300', '1', '5', '2017-10-20 11:15:38', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('301', '1', '2', '2017-10-20 11:16:12', '{}');
INSERT INTO `timeline` VALUES ('302', '1', '2', '2017-10-20 11:16:16', '{}');
INSERT INTO `timeline` VALUES ('303', '1', '2', '2017-10-20 11:16:41', '{}');
INSERT INTO `timeline` VALUES ('304', '1', '5', '2017-10-20 11:16:43', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('305', '1', '21', '2017-10-20 11:16:58', '{}');
INSERT INTO `timeline` VALUES ('306', '1', '2', '2017-10-20 11:17:06', '{}');
INSERT INTO `timeline` VALUES ('307', '1', '5', '2017-10-20 11:17:07', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('308', '1', '2', '2017-10-20 11:19:14', '{}');
INSERT INTO `timeline` VALUES ('309', '1', '5', '2017-10-20 11:19:16', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('310', '1', '2', '2017-10-20 11:20:40', '{}');
INSERT INTO `timeline` VALUES ('311', '1', '5', '2017-10-20 11:20:41', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('312', '1', '2', '2017-10-20 11:21:37', '{}');
INSERT INTO `timeline` VALUES ('313', '1', '5', '2017-10-20 11:21:40', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('314', '1', '21', '2017-10-20 11:21:41', '{\"int2\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('315', '1', '2', '2017-10-20 11:26:41', '{}');
INSERT INTO `timeline` VALUES ('316', '1', '5', '2017-10-20 11:26:44', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('317', '1', '21', '2017-10-20 11:26:46', '{\"int2\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('318', '1', '21', '2017-10-20 11:28:18', '{\"int2\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('319', '1', '21', '2017-10-20 11:29:08', '{\"int2\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('320', '1', '2', '2017-10-20 11:29:17', '{}');
INSERT INTO `timeline` VALUES ('321', '1', '5', '2017-10-20 11:29:18', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('322', '1', '21', '2017-10-20 11:29:20', '{\"int2\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('323', '1', '2', '2017-10-20 11:29:57', '{}');
INSERT INTO `timeline` VALUES ('324', '1', '5', '2017-10-20 11:29:58', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('325', '1', '21', '2017-10-20 11:29:59', '{\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('326', '1', '21', '2017-10-20 11:31:27', '{\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('327', '1', '21', '2017-10-20 11:32:48', '{\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('328', '1', '2', '2017-10-20 11:33:15', '{}');
INSERT INTO `timeline` VALUES ('329', '1', '5', '2017-10-20 11:33:16', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('330', '1', '21', '2017-10-20 11:33:46', '{}');
INSERT INTO `timeline` VALUES ('331', '1', '21', '2017-10-20 11:41:00', '{}');
INSERT INTO `timeline` VALUES ('332', '1', '21', '2017-10-20 11:45:22', '{}');
INSERT INTO `timeline` VALUES ('333', '1', '21', '2017-10-20 11:45:31', '{}');
INSERT INTO `timeline` VALUES ('334', '1', '21', '2017-10-20 11:46:08', '{}');
INSERT INTO `timeline` VALUES ('335', '1', '21', '2017-10-20 11:47:23', '{}');
INSERT INTO `timeline` VALUES ('336', '1', '21', '2017-10-20 15:32:33', '{}');
INSERT INTO `timeline` VALUES ('337', '1', '21', '2017-10-20 15:33:18', '{}');
INSERT INTO `timeline` VALUES ('338', '1', '21', '2017-10-20 15:35:12', '{}');
INSERT INTO `timeline` VALUES ('339', '1', '2', '2017-10-20 15:35:22', '{}');
INSERT INTO `timeline` VALUES ('340', '1', '2', '2017-10-20 15:35:55', '{}');
INSERT INTO `timeline` VALUES ('341', '1', '21', '2017-10-20 15:36:01', '{}');
INSERT INTO `timeline` VALUES ('342', '1', '2', '2017-10-20 15:36:03', '{}');
INSERT INTO `timeline` VALUES ('343', '1', '21', '2017-10-20 15:36:05', '{}');
INSERT INTO `timeline` VALUES ('344', '1', '2', '2017-10-20 15:36:06', '{}');
INSERT INTO `timeline` VALUES ('345', '1', '5', '2017-10-20 15:36:09', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('346', '1', '21', '2017-10-20 15:36:10', '{}');
INSERT INTO `timeline` VALUES ('347', '1', '2', '2017-10-20 15:36:13', '{}');
INSERT INTO `timeline` VALUES ('348', '1', '5', '2017-10-20 15:36:14', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('349', '1', '21', '2017-10-20 15:36:16', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('350', '1', '21', '2017-10-20 15:36:20', '{}');
INSERT INTO `timeline` VALUES ('351', '1', '2', '2017-10-20 15:36:21', '{}');
INSERT INTO `timeline` VALUES ('352', '1', '2', '2017-10-20 15:39:56', '{}');
INSERT INTO `timeline` VALUES ('353', '1', '5', '2017-10-20 15:39:57', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('354', '1', '21', '2017-10-20 15:40:02', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('355', '1', '2', '2017-10-20 15:40:06', '{}');
INSERT INTO `timeline` VALUES ('356', '1', '5', '2017-10-20 15:40:07', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('357', '1', '21', '2017-10-20 15:40:17', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('358', '1', '2', '2017-10-20 15:42:07', '{}');
INSERT INTO `timeline` VALUES ('359', '1', '5', '2017-10-20 15:42:09', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('360', '1', '21', '2017-10-20 15:42:14', '{\"int2\":[\"1\"],\"int3\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('361', '1', '2', '2017-10-20 15:54:59', '{}');
INSERT INTO `timeline` VALUES ('362', '1', '5', '2017-10-20 15:55:01', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('363', '1', '21', '2017-10-20 15:55:03', '{\"int2\":[\"1\"],\"int3\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('364', '1', '2', '2017-10-20 15:55:08', '{}');
INSERT INTO `timeline` VALUES ('365', '1', '2', '2017-10-20 15:57:38', '{}');
INSERT INTO `timeline` VALUES ('366', '1', '5', '2017-10-20 15:57:38', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('367', '1', '21', '2017-10-20 15:57:46', '{\"int2\":[\"1\"],\"int3\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('368', '1', '21', '2017-10-20 15:57:48', '{}');
INSERT INTO `timeline` VALUES ('369', '1', '2', '2017-10-20 15:57:52', '{}');
INSERT INTO `timeline` VALUES ('370', '1', '5', '2017-10-20 15:57:52', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('371', '1', '21', '2017-10-20 15:57:55', '{\"int2\":[\"1\"],\"int3\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('372', '1', '2', '2017-10-20 15:58:04', '{}');
INSERT INTO `timeline` VALUES ('373', '1', '5', '2017-10-20 15:58:04', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('374', '1', '21', '2017-10-20 15:58:07', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('375', '1', '21', '2017-10-20 15:58:10', '{}');
INSERT INTO `timeline` VALUES ('376', '1', '2', '2017-10-20 15:59:07', '{}');
INSERT INTO `timeline` VALUES ('377', '1', '5', '2017-10-20 15:59:07', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('378', '1', '21', '2017-10-20 15:59:09', '{}');
INSERT INTO `timeline` VALUES ('379', '1', '1', '2017-10-20 15:59:18', '{}');
INSERT INTO `timeline` VALUES ('380', '1', '10', '2017-10-20 15:59:18', '{}');
INSERT INTO `timeline` VALUES ('381', '1', '21', '2017-10-20 16:00:26', '{}');
INSERT INTO `timeline` VALUES ('382', '1', '2', '2017-10-20 16:00:35', '{}');
INSERT INTO `timeline` VALUES ('383', '1', '5', '2017-10-20 16:00:35', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('384', '1', '21', '2017-10-20 16:00:37', '{}');
INSERT INTO `timeline` VALUES ('385', '1', '2', '2017-10-20 16:00:39', '{}');
INSERT INTO `timeline` VALUES ('386', '1', '5', '2017-10-20 16:00:40', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('387', '1', '2', '2017-10-20 16:01:05', '{}');
INSERT INTO `timeline` VALUES ('388', '1', '5', '2017-10-20 16:01:06', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('389', '1', '2', '2017-10-21 09:39:13', '{}');
INSERT INTO `timeline` VALUES ('390', '1', '5', '2017-10-21 09:39:14', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('391', '1', '21', '2017-10-21 09:39:19', '{}');
INSERT INTO `timeline` VALUES ('392', '1', '21', '2017-10-21 09:40:50', '{}');
INSERT INTO `timeline` VALUES ('393', '1', '21', '2017-10-21 09:43:15', '{}');
INSERT INTO `timeline` VALUES ('394', '1', '21', '2017-10-21 09:46:13', '{}');
INSERT INTO `timeline` VALUES ('395', '1', '2', '2017-10-21 09:46:21', '{}');
INSERT INTO `timeline` VALUES ('396', '1', '5', '2017-10-21 09:46:21', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('397', '1', '21', '2017-10-21 09:46:35', '{}');
INSERT INTO `timeline` VALUES ('398', '1', '21', '2017-10-21 09:50:37', '{}');
INSERT INTO `timeline` VALUES ('399', '1', '21', '2017-10-21 09:50:43', '{}');
INSERT INTO `timeline` VALUES ('400', '1', '21', '2017-10-21 09:50:44', '{}');
INSERT INTO `timeline` VALUES ('401', '1', '21', '2017-10-21 09:50:51', '{}');
INSERT INTO `timeline` VALUES ('402', '1', '21', '2017-10-21 09:50:58', '{}');
INSERT INTO `timeline` VALUES ('403', '1', '2', '2017-10-21 09:51:02', '{}');
INSERT INTO `timeline` VALUES ('404', '1', '5', '2017-10-21 09:51:02', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('405', '1', '21', '2017-10-21 09:51:09', '{}');
INSERT INTO `timeline` VALUES ('406', '1', '2', '2017-10-21 09:51:13', '{}');
INSERT INTO `timeline` VALUES ('407', '1', '5', '2017-10-21 09:51:13', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('408', '1', '2', '2017-10-21 09:54:30', '{}');
INSERT INTO `timeline` VALUES ('409', '1', '5', '2017-10-21 09:54:30', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('410', '1', '21', '2017-10-21 09:54:34', '{}');
INSERT INTO `timeline` VALUES ('411', '1', '21', '2017-10-21 09:54:57', '{}');
INSERT INTO `timeline` VALUES ('412', '1', '2', '2017-10-21 09:55:03', '{}');
INSERT INTO `timeline` VALUES ('413', '1', '5', '2017-10-21 09:55:03', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('414', '1', '21', '2017-10-21 09:55:05', '{}');
INSERT INTO `timeline` VALUES ('415', '1', '2', '2017-10-21 09:55:42', '{}');
INSERT INTO `timeline` VALUES ('416', '1', '5', '2017-10-21 09:55:42', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('417', '1', '2', '2017-10-21 09:55:46', '{}');
INSERT INTO `timeline` VALUES ('418', '1', '5', '2017-10-21 09:55:46', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('419', '1', '2', '2017-10-21 10:00:45', '{}');
INSERT INTO `timeline` VALUES ('420', '1', '5', '2017-10-21 10:00:45', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('421', '1', '2', '2017-10-21 10:00:58', '{}');
INSERT INTO `timeline` VALUES ('422', '1', '5', '2017-10-21 10:00:58', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('423', '1', '21', '2017-10-21 10:01:10', '{}');
INSERT INTO `timeline` VALUES ('424', '1', '2', '2017-10-21 10:01:13', '{}');
INSERT INTO `timeline` VALUES ('425', '1', '5', '2017-10-21 10:01:14', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('426', '1', '21', '2017-10-21 10:01:21', '{}');
INSERT INTO `timeline` VALUES ('427', '1', '2', '2017-10-21 10:01:23', '{}');
INSERT INTO `timeline` VALUES ('428', '1', '5', '2017-10-21 10:01:24', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('429', '1', '2', '2017-10-21 10:01:51', '{}');
INSERT INTO `timeline` VALUES ('430', '1', '5', '2017-10-21 10:01:52', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('431', '1', '21', '2017-10-21 10:01:54', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('432', '1', '21', '2017-10-21 10:13:08', '{}');
INSERT INTO `timeline` VALUES ('433', '1', '21', '2017-10-21 10:13:21', '{}');
INSERT INTO `timeline` VALUES ('434', '1', '10', '2017-10-21 10:13:22', '{}');
INSERT INTO `timeline` VALUES ('435', '1', '10', '2017-10-21 10:13:22', '{}');
INSERT INTO `timeline` VALUES ('436', '1', '21', '2017-10-21 10:14:05', '{}');
INSERT INTO `timeline` VALUES ('437', '1', '10', '2017-10-21 10:14:05', '{}');
INSERT INTO `timeline` VALUES ('438', '1', '21', '2017-10-21 10:14:15', '{}');
INSERT INTO `timeline` VALUES ('439', '1', '10', '2017-10-21 10:14:16', '{}');
INSERT INTO `timeline` VALUES ('440', '1', '21', '2017-10-21 10:14:33', '{}');
INSERT INTO `timeline` VALUES ('441', '1', '10', '2017-10-21 10:14:33', '{}');
INSERT INTO `timeline` VALUES ('442', '1', '21', '2017-10-21 10:18:01', '{}');
INSERT INTO `timeline` VALUES ('443', '1', '10', '2017-10-21 10:18:01', '{}');
INSERT INTO `timeline` VALUES ('444', '1', '21', '2017-10-21 10:18:38', '{}');
INSERT INTO `timeline` VALUES ('445', '1', '10', '2017-10-21 10:18:38', '{}');
INSERT INTO `timeline` VALUES ('446', '1', '21', '2017-10-21 10:19:09', '{}');
INSERT INTO `timeline` VALUES ('447', '1', '10', '2017-10-21 10:19:09', '{}');
INSERT INTO `timeline` VALUES ('448', '1', '21', '2017-10-21 10:19:27', '{}');
INSERT INTO `timeline` VALUES ('449', '1', '10', '2017-10-21 10:19:28', '{}');
INSERT INTO `timeline` VALUES ('450', '1', '2', '2017-10-21 10:19:41', '{}');
INSERT INTO `timeline` VALUES ('451', '1', '5', '2017-10-21 10:19:41', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('452', '1', '21', '2017-10-21 10:19:43', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('453', '1', '10', '2017-10-21 10:19:43', '{}');
INSERT INTO `timeline` VALUES ('454', '1', '21', '2017-10-21 14:24:27', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('455', '1', '10', '2017-10-21 14:24:27', '{}');
INSERT INTO `timeline` VALUES ('456', '1', '21', '2017-10-21 14:29:16', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('457', '1', '10', '2017-10-21 14:29:16', '{}');
INSERT INTO `timeline` VALUES ('458', '1', '21', '2017-10-21 14:36:38', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('459', '1', '10', '2017-10-21 14:36:38', '{}');
INSERT INTO `timeline` VALUES ('460', '1', '21', '2017-10-21 14:39:02', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('461', '1', '10', '2017-10-21 14:39:02', '{}');
INSERT INTO `timeline` VALUES ('462', '1', '21', '2017-10-21 14:39:45', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('463', '1', '10', '2017-10-21 14:39:45', '{}');
INSERT INTO `timeline` VALUES ('464', '1', '21', '2017-10-21 14:40:19', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('465', '1', '10', '2017-10-21 14:40:19', '{}');
INSERT INTO `timeline` VALUES ('466', '1', '2', '2017-10-21 14:41:47', '{}');
INSERT INTO `timeline` VALUES ('467', '1', '5', '2017-10-21 14:41:47', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('468', '1', '21', '2017-10-21 14:42:14', '{}');
INSERT INTO `timeline` VALUES ('469', '1', '10', '2017-10-21 14:42:14', '{}');
INSERT INTO `timeline` VALUES ('470', '1', '21', '2017-10-21 14:44:41', '{}');
INSERT INTO `timeline` VALUES ('471', '1', '10', '2017-10-21 14:44:41', '{}');
INSERT INTO `timeline` VALUES ('472', '1', '21', '2017-10-21 14:45:58', '{}');
INSERT INTO `timeline` VALUES ('473', '1', '21', '2017-10-21 14:47:22', '{}');
INSERT INTO `timeline` VALUES ('474', '1', '10', '2017-10-21 14:47:22', '{}');
INSERT INTO `timeline` VALUES ('475', '1', '1', '2017-10-21 14:48:52', '{}');
INSERT INTO `timeline` VALUES ('476', '1', '10', '2017-10-21 14:48:52', '{}');
INSERT INTO `timeline` VALUES ('477', '1', '21', '2017-10-21 14:49:04', '{}');
INSERT INTO `timeline` VALUES ('478', '1', '10', '2017-10-21 14:49:04', '{}');
INSERT INTO `timeline` VALUES ('479', '1', '21', '2017-10-21 14:50:00', '{}');
INSERT INTO `timeline` VALUES ('480', '1', '10', '2017-10-21 14:50:00', '{}');
INSERT INTO `timeline` VALUES ('481', '1', '21', '2017-10-21 14:50:44', '{}');
INSERT INTO `timeline` VALUES ('482', '1', '10', '2017-10-21 14:50:44', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('483', '1', '21', '2017-10-21 14:51:54', '{}');
INSERT INTO `timeline` VALUES ('484', '1', '10', '2017-10-21 14:51:55', '{}');
INSERT INTO `timeline` VALUES ('485', '1', '1', '2017-10-21 14:53:37', '{}');
INSERT INTO `timeline` VALUES ('486', '1', '10', '2017-10-21 14:53:37', '{}');
INSERT INTO `timeline` VALUES ('487', '1', '21', '2017-10-21 14:53:57', '{}');
INSERT INTO `timeline` VALUES ('488', '1', '10', '2017-10-21 14:53:57', '{}');
INSERT INTO `timeline` VALUES ('489', '1', '21', '2017-10-21 14:56:35', '{}');
INSERT INTO `timeline` VALUES ('490', '1', '10', '2017-10-21 14:56:35', '{}');
INSERT INTO `timeline` VALUES ('491', '1', '21', '2017-10-21 14:57:31', '{}');
INSERT INTO `timeline` VALUES ('492', '1', '10', '2017-10-21 14:57:31', '{}');
INSERT INTO `timeline` VALUES ('493', '1', '21', '2017-10-21 15:01:02', '{}');
INSERT INTO `timeline` VALUES ('494', '1', '10', '2017-10-21 15:01:02', '{}');
INSERT INTO `timeline` VALUES ('495', '1', '21', '2017-10-21 15:01:35', '{}');
INSERT INTO `timeline` VALUES ('496', '1', '10', '2017-10-21 15:01:36', '{}');
INSERT INTO `timeline` VALUES ('497', '1', '21', '2017-10-21 15:04:13', '{}');
INSERT INTO `timeline` VALUES ('498', '1', '10', '2017-10-21 15:04:14', '{}');
INSERT INTO `timeline` VALUES ('499', '1', '21', '2017-10-21 15:04:41', '{}');
INSERT INTO `timeline` VALUES ('500', '1', '10', '2017-10-21 15:04:42', '{}');
INSERT INTO `timeline` VALUES ('501', '1', '2', '2017-10-21 15:05:11', '{}');
INSERT INTO `timeline` VALUES ('502', '1', '5', '2017-10-21 15:05:11', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('503', '1', '21', '2017-10-21 15:05:14', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('504', '1', '10', '2017-10-21 15:05:14', '{}');
INSERT INTO `timeline` VALUES ('505', '1', '2', '2017-10-21 15:07:17', '{}');
INSERT INTO `timeline` VALUES ('506', '1', '5', '2017-10-21 15:07:18', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('507', '1', '21', '2017-10-21 15:07:19', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('508', '1', '10', '2017-10-21 15:07:20', '{}');
INSERT INTO `timeline` VALUES ('509', '1', '21', '2017-10-21 15:07:55', '{}');
INSERT INTO `timeline` VALUES ('510', '1', '10', '2017-10-21 15:07:56', '{}');
INSERT INTO `timeline` VALUES ('511', '1', '21', '2017-10-21 15:07:57', '{}');
INSERT INTO `timeline` VALUES ('512', '1', '10', '2017-10-21 15:07:57', '{}');
INSERT INTO `timeline` VALUES ('513', '1', '2', '2017-10-21 15:07:59', '{}');
INSERT INTO `timeline` VALUES ('514', '1', '5', '2017-10-21 15:07:59', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('515', '1', '21', '2017-10-21 15:08:01', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('516', '1', '10', '2017-10-21 15:08:01', '{}');
INSERT INTO `timeline` VALUES ('517', '1', '21', '2017-10-21 15:08:04', '{}');
INSERT INTO `timeline` VALUES ('518', '1', '10', '2017-10-21 15:08:04', '{}');
INSERT INTO `timeline` VALUES ('519', '1', '2', '2017-10-21 15:08:09', '{}');
INSERT INTO `timeline` VALUES ('520', '1', '5', '2017-10-21 15:08:10', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('521', '1', '21', '2017-10-21 15:08:11', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('522', '1', '10', '2017-10-21 15:08:12', '{}');
INSERT INTO `timeline` VALUES ('523', '1', '2', '2017-10-21 15:10:49', '{}');
INSERT INTO `timeline` VALUES ('524', '1', '5', '2017-10-21 15:10:49', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('525', '1', '21', '2017-10-21 15:10:51', '{\"int2\":[\"1\"],\"int3\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('526', '1', '10', '2017-10-21 15:10:51', '{}');
INSERT INTO `timeline` VALUES ('527', '1', '21', '2017-10-21 15:14:46', '{}');
INSERT INTO `timeline` VALUES ('528', '1', '21', '2017-10-21 15:14:55', '{}');
INSERT INTO `timeline` VALUES ('529', '1', '2', '2017-10-21 15:15:18', '{}');
INSERT INTO `timeline` VALUES ('530', '1', '5', '2017-10-21 15:15:18', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('531', '1', '21', '2017-10-21 15:15:22', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('532', '1', '10', '2017-10-21 15:15:22', '{}');
INSERT INTO `timeline` VALUES ('533', '1', '21', '2017-10-21 15:18:00', '{}');
INSERT INTO `timeline` VALUES ('534', '1', '21', '2017-10-21 15:18:21', '{}');
INSERT INTO `timeline` VALUES ('535', '1', '10', '2017-10-21 15:18:22', '{}');
INSERT INTO `timeline` VALUES ('536', '1', '2', '2017-10-21 15:19:50', '{}');
INSERT INTO `timeline` VALUES ('537', '1', '5', '2017-10-21 15:19:51', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('538', '1', '21', '2017-10-21 15:19:53', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('539', '1', '10', '2017-10-21 15:19:53', '{}');
INSERT INTO `timeline` VALUES ('540', '1', '21', '2017-10-21 15:21:09', '{}');
INSERT INTO `timeline` VALUES ('541', '1', '10', '2017-10-21 15:21:09', '{}');
INSERT INTO `timeline` VALUES ('542', '1', '2', '2017-10-21 15:21:10', '{}');
INSERT INTO `timeline` VALUES ('543', '1', '5', '2017-10-21 15:21:10', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('544', '1', '21', '2017-10-21 15:21:12', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('545', '1', '10', '2017-10-21 15:21:12', '{}');
INSERT INTO `timeline` VALUES ('546', '1', '2', '2017-10-21 15:22:03', '{}');
INSERT INTO `timeline` VALUES ('547', '1', '5', '2017-10-21 15:22:04', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('548', '1', '21', '2017-10-21 15:22:05', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('549', '1', '10', '2017-10-21 15:22:06', '{}');
INSERT INTO `timeline` VALUES ('550', '1', '21', '2017-10-21 15:22:49', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('551', '1', '10', '2017-10-21 15:22:50', '{}');
INSERT INTO `timeline` VALUES ('552', '1', '2', '2017-10-21 15:22:54', '{}');
INSERT INTO `timeline` VALUES ('553', '1', '5', '2017-10-21 15:22:55', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('554', '1', '21', '2017-10-21 15:22:56', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('555', '1', '10', '2017-10-21 15:22:57', '{}');
INSERT INTO `timeline` VALUES ('556', '1', '21', '2017-10-21 15:24:24', '{}');
INSERT INTO `timeline` VALUES ('557', '1', '10', '2017-10-21 15:24:25', '{}');
INSERT INTO `timeline` VALUES ('558', '1', '2', '2017-10-21 15:24:30', '{}');
INSERT INTO `timeline` VALUES ('559', '1', '5', '2017-10-21 15:24:30', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('560', '1', '21', '2017-10-21 15:24:32', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('561', '1', '10', '2017-10-21 15:24:32', '{}');
INSERT INTO `timeline` VALUES ('562', '1', '21', '2017-10-21 15:24:55', '{}');
INSERT INTO `timeline` VALUES ('563', '1', '10', '2017-10-21 15:24:56', '{}');
INSERT INTO `timeline` VALUES ('564', '1', '21', '2017-10-21 15:26:34', '{}');
INSERT INTO `timeline` VALUES ('565', '1', '10', '2017-10-21 15:26:34', '{}');
INSERT INTO `timeline` VALUES ('566', '1', '2', '2017-10-21 15:26:40', '{}');
INSERT INTO `timeline` VALUES ('567', '1', '5', '2017-10-21 15:26:41', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('568', '1', '21', '2017-10-21 15:26:43', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('569', '1', '10', '2017-10-21 15:26:43', '{}');
INSERT INTO `timeline` VALUES ('570', '1', '21', '2017-10-21 15:27:12', '{}');
INSERT INTO `timeline` VALUES ('571', '1', '10', '2017-10-21 15:27:12', '{}');
INSERT INTO `timeline` VALUES ('572', '1', '2', '2017-10-21 15:27:20', '{}');
INSERT INTO `timeline` VALUES ('573', '1', '5', '2017-10-21 15:27:20', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('574', '1', '21', '2017-10-21 15:27:22', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('575', '1', '10', '2017-10-21 15:27:22', '{}');
INSERT INTO `timeline` VALUES ('576', '1', '2', '2017-10-21 15:27:50', '{}');
INSERT INTO `timeline` VALUES ('577', '1', '5', '2017-10-21 15:27:51', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('578', '1', '21', '2017-10-21 15:27:53', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('579', '1', '10', '2017-10-21 15:27:53', '{}');
INSERT INTO `timeline` VALUES ('580', '1', '2', '2017-10-21 15:27:56', '{}');
INSERT INTO `timeline` VALUES ('581', '1', '5', '2017-10-21 15:27:57', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('582', '1', '21', '2017-10-21 15:27:58', '{\"int2\":[\"1\"],\"int3\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('583', '1', '10', '2017-10-21 15:27:58', '{}');
INSERT INTO `timeline` VALUES ('584', '1', '2', '2017-10-21 15:27:59', '{}');
INSERT INTO `timeline` VALUES ('585', '1', '5', '2017-10-21 15:27:59', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('586', '1', '21', '2017-10-21 15:28:01', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('587', '1', '10', '2017-10-21 15:28:01', '{}');
INSERT INTO `timeline` VALUES ('588', '1', '2', '2017-10-21 15:28:02', '{}');
INSERT INTO `timeline` VALUES ('589', '1', '5', '2017-10-21 15:28:02', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('590', '1', '21', '2017-10-21 15:28:04', '{\"int2\":[\"1\"],\"int3\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('591', '1', '10', '2017-10-21 15:28:04', '{}');
INSERT INTO `timeline` VALUES ('592', '1', '21', '2017-10-21 15:28:29', '{}');
INSERT INTO `timeline` VALUES ('593', '1', '10', '2017-10-21 15:28:29', '{}');
INSERT INTO `timeline` VALUES ('594', '1', '2', '2017-10-21 15:28:31', '{}');
INSERT INTO `timeline` VALUES ('595', '1', '5', '2017-10-21 15:28:31', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('596', '1', '21', '2017-10-21 15:28:32', '{\"int2\":[\"1\"],\"int3\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('597', '1', '10', '2017-10-21 15:28:33', '{}');
INSERT INTO `timeline` VALUES ('598', '1', '21', '2017-10-21 15:28:34', '{}');
INSERT INTO `timeline` VALUES ('599', '1', '10', '2017-10-21 15:28:35', '{}');
INSERT INTO `timeline` VALUES ('600', '1', '2', '2017-10-21 15:28:36', '{}');
INSERT INTO `timeline` VALUES ('601', '1', '5', '2017-10-21 15:28:37', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('602', '1', '21', '2017-10-21 15:28:39', '{\"int2\":[\"1\"],\"int3\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('603', '1', '10', '2017-10-21 15:28:39', '{}');
INSERT INTO `timeline` VALUES ('604', '1', '1', '2017-10-21 15:30:43', '{}');
INSERT INTO `timeline` VALUES ('605', '1', '10', '2017-10-21 15:30:43', '{}');
INSERT INTO `timeline` VALUES ('606', '1', '1', '2017-10-21 15:39:41', '{}');
INSERT INTO `timeline` VALUES ('607', '1', '1', '2017-10-21 15:40:56', '{}');
INSERT INTO `timeline` VALUES ('608', '1', '1', '2017-10-21 15:42:15', '{}');
INSERT INTO `timeline` VALUES ('609', '1', '1', '2017-10-21 15:42:59', '{}');
INSERT INTO `timeline` VALUES ('610', '1', '10', '2017-10-21 15:42:59', '{}');
INSERT INTO `timeline` VALUES ('611', '1', '1', '2017-10-21 15:43:07', '{}');
INSERT INTO `timeline` VALUES ('612', '1', '10', '2017-10-21 15:43:07', '{}');
INSERT INTO `timeline` VALUES ('613', '1', '1', '2017-10-21 15:43:16', '{}');
INSERT INTO `timeline` VALUES ('614', '1', '10', '2017-10-21 15:43:16', '{}');
INSERT INTO `timeline` VALUES ('615', '1', '1', '2017-10-21 15:43:18', '{}');
INSERT INTO `timeline` VALUES ('616', '1', '10', '2017-10-21 15:43:18', '{}');
INSERT INTO `timeline` VALUES ('617', '1', '1', '2017-10-21 15:44:09', '{}');
INSERT INTO `timeline` VALUES ('618', '1', '10', '2017-10-21 15:44:10', '{}');
INSERT INTO `timeline` VALUES ('619', '1', '1', '2017-10-21 15:44:56', '{}');
INSERT INTO `timeline` VALUES ('620', '1', '10', '2017-10-21 15:44:56', '{}');
INSERT INTO `timeline` VALUES ('621', '1', '1', '2017-10-21 15:47:12', '{}');
INSERT INTO `timeline` VALUES ('622', '1', '10', '2017-10-21 15:47:12', '{}');
INSERT INTO `timeline` VALUES ('623', '1', '1', '2017-10-21 15:47:20', '{}');
INSERT INTO `timeline` VALUES ('624', '1', '10', '2017-10-21 15:47:20', '{}');
INSERT INTO `timeline` VALUES ('625', '1', '1', '2017-10-21 15:47:51', '{}');
INSERT INTO `timeline` VALUES ('626', '1', '10', '2017-10-21 15:47:52', '{}');
INSERT INTO `timeline` VALUES ('627', '1', '21', '2017-10-21 15:48:42', '{}');
INSERT INTO `timeline` VALUES ('628', '1', '10', '2017-10-21 15:48:42', '{}');
INSERT INTO `timeline` VALUES ('629', '1', '1', '2017-10-21 15:49:05', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('630', '1', '1', '2017-10-21 15:49:32', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('631', '1', '10', '2017-10-21 15:49:32', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('632', '1', '1', '2017-10-21 15:49:41', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('633', '1', '10', '2017-10-21 15:49:41', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('634', '1', '1', '2017-10-21 15:49:44', '{\"id\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('635', '1', '21', '2017-10-21 15:49:56', '{}');
INSERT INTO `timeline` VALUES ('636', '1', '10', '2017-10-21 15:49:57', '{}');
INSERT INTO `timeline` VALUES ('637', '1', '1', '2017-10-21 15:49:59', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('638', '1', '10', '2017-10-21 15:49:59', '{}');
INSERT INTO `timeline` VALUES ('639', '1', '1', '2017-10-21 15:50:55', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('640', '1', '1', '2017-10-21 15:53:52', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('641', '1', '10', '2017-10-21 15:53:53', '{}');
INSERT INTO `timeline` VALUES ('642', '1', '1', '2017-10-21 15:54:44', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('643', '1', '21', '2017-10-21 15:54:48', '{}');
INSERT INTO `timeline` VALUES ('644', '1', '10', '2017-10-21 15:54:48', '{}');
INSERT INTO `timeline` VALUES ('645', '1', '1', '2017-10-21 15:54:51', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('646', '1', '1', '2017-10-21 15:56:25', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('647', '1', '21', '2017-10-21 15:56:28', '{}');
INSERT INTO `timeline` VALUES ('648', '1', '10', '2017-10-21 15:56:28', '{}');
INSERT INTO `timeline` VALUES ('649', '1', '1', '2017-10-21 15:56:31', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('650', '1', '1', '2017-10-21 15:57:13', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('651', '1', '1', '2017-10-21 16:02:15', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('652', '1', '1', '2017-10-21 16:02:45', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('653', '1', '1', '2017-10-21 16:03:22', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('654', '1', '1', '2017-10-21 16:07:03', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('655', '1', '1', '2017-10-21 16:07:21', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('656', '1', '1', '2017-10-21 16:07:37', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('657', '1', '1', '2017-10-21 16:08:49', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('658', '1', '10', '2017-10-21 16:08:49', '{}');
INSERT INTO `timeline` VALUES ('659', '1', '1', '2017-10-21 16:09:14', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('660', '1', '1', '2017-10-21 16:14:30', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('661', '1', '1', '2017-10-21 16:14:34', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('662', '1', '10', '2017-10-21 16:14:35', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('663', '1', '1', '2017-10-21 16:14:44', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('664', '1', '1', '2017-10-21 16:14:46', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('665', '1', '14', '2017-10-21 16:14:51', '{}');
INSERT INTO `timeline` VALUES ('666', '1', '1', '2017-10-21 16:16:41', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('667', '1', '10', '2017-10-21 16:16:41', '{}');
INSERT INTO `timeline` VALUES ('668', '1', '1', '2017-10-21 16:16:51', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('669', '1', '14', '2017-10-21 16:16:53', '{}');
INSERT INTO `timeline` VALUES ('670', '1', '1', '2017-10-21 16:20:38', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('671', '1', '10', '2017-10-21 16:20:38', '{}');
INSERT INTO `timeline` VALUES ('672', '1', '10', '2017-10-21 16:20:38', '{}');
INSERT INTO `timeline` VALUES ('673', '1', '1', '2017-10-21 16:20:52', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('674', '1', '14', '2017-10-21 16:20:57', '{}');
INSERT INTO `timeline` VALUES ('675', '1', '1', '2017-10-21 16:23:31', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('676', '1', '14', '2017-10-21 16:23:35', '{\"title\":[\"sssssss张顺\"],\"content\":[\"ada大\"],\"summary\":[\"aa\"],\"blIds\":[\"[\\\"1\\\"]\"],\"ishide\":[\"1\"],\"id\":[\"4\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('677', '1', '21', '2017-10-21 16:23:44', '{}');
INSERT INTO `timeline` VALUES ('678', '1', '10', '2017-10-21 16:23:44', '{}');
INSERT INTO `timeline` VALUES ('679', '1', '1', '2017-10-21 16:23:49', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('680', '1', '14', '2017-10-21 16:23:52', '{\"title\":[\"sssssss张顺\"],\"content\":[\"ada大\"],\"summary\":[\"aa\"],\"blIds\":[\"[\\\"1\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"4\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('681', '1', '21', '2017-10-21 16:23:54', '{}');
INSERT INTO `timeline` VALUES ('682', '1', '10', '2017-10-21 16:23:54', '{}');
INSERT INTO `timeline` VALUES ('683', '1', '21', '2017-10-21 16:24:03', '{}');
INSERT INTO `timeline` VALUES ('684', '1', '10', '2017-10-21 16:24:03', '{}');
INSERT INTO `timeline` VALUES ('685', '1', '1', '2017-10-21 16:24:06', '{}');
INSERT INTO `timeline` VALUES ('686', '1', '10', '2017-10-21 16:24:06', '{}');
INSERT INTO `timeline` VALUES ('687', '1', '13', '2017-10-21 16:24:28', '{\"title\":[\"张顺你还好吗\"],\"content\":[\"你好\"],\"summary\":[\"张顺你好\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\"]\"],\"ishide\":[\"0\"]}');
INSERT INTO `timeline` VALUES ('688', '1', '21', '2017-10-21 16:24:30', '{}');
INSERT INTO `timeline` VALUES ('689', '1', '10', '2017-10-21 16:24:30', '{}');
INSERT INTO `timeline` VALUES ('690', '1', '21', '2017-10-21 16:24:35', '{}');
INSERT INTO `timeline` VALUES ('691', '1', '10', '2017-10-21 16:24:35', '{}');
INSERT INTO `timeline` VALUES ('692', '1', '1', '2017-10-21 16:24:47', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('693', '1', '14', '2017-10-21 16:24:49', '{\"title\":[\"张顺你还好吗\"],\"content\":[\"你好\"],\"summary\":[\"张顺你好\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"10\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('694', '1', '21', '2017-10-21 16:24:50', '{}');
INSERT INTO `timeline` VALUES ('695', '1', '10', '2017-10-21 16:24:50', '{}');
INSERT INTO `timeline` VALUES ('696', '1', '2', '2017-10-21 16:24:57', '{}');
INSERT INTO `timeline` VALUES ('697', '1', '5', '2017-10-21 16:24:57', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('698', '1', '21', '2017-10-21 16:25:00', '{\"int2\":[\"1\"],\"int3\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('699', '1', '10', '2017-10-21 16:25:00', '{}');
INSERT INTO `timeline` VALUES ('700', '1', '21', '2017-10-21 16:25:02', '{}');
INSERT INTO `timeline` VALUES ('701', '1', '10', '2017-10-21 16:25:02', '{}');
INSERT INTO `timeline` VALUES ('702', '1', '21', '2017-10-21 16:25:07', '{}');
INSERT INTO `timeline` VALUES ('703', '1', '10', '2017-10-21 16:25:08', '{}');
INSERT INTO `timeline` VALUES ('704', '1', '21', '2017-10-21 16:30:25', '{}');
INSERT INTO `timeline` VALUES ('705', '1', '10', '2017-10-21 16:30:25', '{}');
INSERT INTO `timeline` VALUES ('706', '1', '1', '2017-10-21 16:30:27', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('707', '1', '14', '2017-10-21 16:30:30', '{\"title\":[\"张顺你还好吗\"],\"content\":[\"你好\"],\"summary\":[\"张顺你好\"],\"blIds\":[\"[\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\"]\"],\"ishide\":[\"1\"],\"id\":[\"10\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('708', '1', '21', '2017-10-21 16:30:33', '{}');
INSERT INTO `timeline` VALUES ('709', '1', '10', '2017-10-21 16:30:33', '{}');
INSERT INTO `timeline` VALUES ('710', '1', '1', '2017-10-21 16:30:36', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('711', '1', '14', '2017-10-21 16:30:39', '{\"title\":[\"张顺你还好吗\"],\"content\":[\"你好\"],\"summary\":[\"张顺你好\"],\"blIds\":[\"[\\\"2\\\",\\\"3\\\",\\\"4\\\"]\"],\"ishide\":[\"1\"],\"id\":[\"10\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('712', '1', '21', '2017-10-21 16:30:41', '{}');
INSERT INTO `timeline` VALUES ('713', '1', '10', '2017-10-21 16:30:41', '{}');
INSERT INTO `timeline` VALUES ('714', '1', '21', '2017-10-21 16:30:55', '{}');
INSERT INTO `timeline` VALUES ('715', '1', '10', '2017-10-21 16:30:55', '{}');
INSERT INTO `timeline` VALUES ('716', '1', '21', '2017-10-21 16:30:57', '{}');
INSERT INTO `timeline` VALUES ('717', '1', '10', '2017-10-21 16:30:57', '{}');
INSERT INTO `timeline` VALUES ('718', '1', '1', '2017-10-21 16:30:57', '{}');
INSERT INTO `timeline` VALUES ('719', '1', '10', '2017-10-21 16:30:58', '{}');
INSERT INTO `timeline` VALUES ('720', '1', '21', '2017-10-21 16:31:10', '{}');
INSERT INTO `timeline` VALUES ('721', '1', '10', '2017-10-21 16:31:11', '{}');
INSERT INTO `timeline` VALUES ('722', '1', '1', '2017-10-21 16:31:14', '{\"id\":[\"5\"]}');
INSERT INTO `timeline` VALUES ('723', '1', '14', '2017-10-21 16:31:44', '{\"title\":[\"美团App 插件化实践\"],\"content\":[\"\\u003ch3 id\\u003d\\\"-\\\"\\u003e背景\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e在Android开发行业里，插件化已经不是一门新鲜的技术了，在稍大的平台型App上早已是标配。进入2017年，Atlas、Replugin、VirtualAPK相继开源，标志着插件化技术进入了成熟阶段。但纵观各大插件框架，都是基于自身App的业务来开发的，目标或多或少都有区别，所以很难有一个插件框架能一统江湖解决所有问题。最后就是绕不开的兼容性问题，Android每次版本升级都会给各个插件化框架带来不少冲击，都要费劲心思适配一番，更别提国内各个厂商对在ROM上做的定制了，正如VirtualAPK的作者任玉刚所说：完成一个插件化框架的 Demo 并不是多难的事儿，然而要开发一款完善的插件化框架却并非易事。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e早在2014年美团移动技术团队就开始关注插件化技术了，并且意识到插件化架构是美团这种平台型App最好的集成形式。但由于业务增长、迭代、演化太快，受限于业务耦合和架构问题，插件化一直无法落地。到了2016年底，经过一系列的代码架构调整、技术调研，我们终于能腾出手来让插件化技术落地了。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e美团平台（与点评平台一起）目前承载了美团点评所有事业群近20条业务线的业务。其中有相对成熟的业务，比如外卖、餐饮，他们对插件的要求是稳定性高，不能因为上了插件导致业务出问题；也有迭代变化很快的业务，如交通、跑腿、金融等，他们要求能快速迭代上线；此外，由于美团App采用的二进制AAR依赖方式集成已经运转了两年，各种基础设施都很成熟了，我们不希望换成插件形式的接入之后还要改变开发模式。所以，美团平台对插件的诉求主要集中在兼容性和不影响开发模式这两个点上。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e美团插件化框架的原理和特点\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e插件框架的兼容性体现在多个方面，由于Android机制的问题，有些写法在插件化之前运行的很正常，但是接入插件化之后就变得不再有效。如果不解决兼容性问题，插件化的口碑和推广都会很大阻碍。兼容性不仅仅指的是对Android系统、Android碎片化的兼容，还要对已有基础库和构建工具的兼容。特别是后者，我们经常看到Github上开源的插件化框架里面有大量Crash的Issue，就是这个方面原因导致的。每个App的基础库和既有构建工具都不太一样，所以为自己的App选择合适的方案显得尤为重要。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e为了保证插件的兼容性，并能无缝兼容当前AAR开发模式，美团的插件化框架方案主要做了以下几点：：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e插件的Dex加载使用类似MultiDex方案，保证对反射的兼容\\u003c/li\\u003e\\r\\n\\u003cli\\u003e替换所有的AssetManager，保证对资源访问的兼容\\u003c/li\\u003e\\r\\n\\u003cli\\u003e四大组件预埋，代理新增Activity\\u003c/li\\u003e\\r\\n\\u003cli\\u003e让构建系统来抹平AAR开发模式和插件化开发模式的差异\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cp\\u003eMultiDex和组件代理这里不细说，网上有很多这方面的博客可以参考。下面重点说一下美团插件化框架对资源的处理和支持AAR、插件一键切换的构建系统。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e资源处理\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e了解插件化的读者都知道：如果希望访问插件的资源，需要使用AssetManager把插件的路径加入进去。但这样做是远远不够的。这是因为如果希望这个AssetManager生效，就得把它放到具体的Resources或ResourcesImpl里面，大部分插件化框架的做法是封装一个包含插件路径AssetManager的Resources，然后插件中只使用这一个Resources。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e这样的做法大多数情况是有效的，但是有至少3个问题：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e如果在插件中使用了宿主Resources，如：\\u003ccode\\u003egetApplicationContext().getResources()\\u003c/code\\u003e。 这个Resources就无法访问插件的资源了\\u003c/li\\u003e\\r\\n\\u003cli\\u003e插件外的Resources 并不唯一，需要全局查找和替换\\u003c/li\\u003e\\r\\n\\u003cli\\u003eResoureces在使用的过程中有很多中间产物，例如Theme、TypedArray等等。这些都需要清理才能正常使用\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e要完全解决这些问题，我们另辟蹊径，做了一个全局的资源处理方式：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e新建或者使用已有AssetManger，加载插件资源\\u003c/li\\u003e\\r\\n\\u003cli\\u003e查找所有的Resources/Theme，替换其中的AssetManger\\u003c/li\\u003e\\r\\n\\u003cli\\u003e清理Resources缓存，重建Theme\\u003c/li\\u003e\\r\\n\\u003cli\\u003eAssetManager的重建保护，防止丢失插件路径\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cp\\u003e这个方案和InstantRun有点类似，但是原生InstantRun有太多的问题：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e清理顺序错误，应该先清理Applicaiton后清理Activity\\u003c/li\\u003e\\r\\n\\u003cli\\u003eResources/Theme找不全，没有极端情况应对机制\\u003c/li\\u003e\\r\\n\\u003cli\\u003eTheme光清理不重建\\u003c/li\\u003e\\r\\n\\u003cli\\u003e完全不适配 Support包里面自己埋的“雷”\\u003cbr\\u003e等等\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Activity activity : activities) {\\r\\n    ... \\u003cspan class\\u003d\\\"comment\\\"\\u003e// 省略部分代码\\u003c/span\\u003e\\r\\n    Resources.Theme theme \\u003d activity.getTheme();\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003etry\\u003c/span\\u003e {\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003etry\\u003c/span\\u003e {\\r\\n            Field ma \\u003d Resources.Theme.class.getDeclaredField(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"mAssets\\\"\\u003c/span\\u003e);\\r\\n            ma.setAccessible(\\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e);\\r\\n            ma.set(theme, newAssetManager);\\r\\n        } \\u003cspan class\\u003d\\\"keyword\\\"\\u003ecatch\\u003c/span\\u003e (NoSuchFieldException ignore) {\\r\\n            Field themeField \\u003d Resources.Theme.class.getDeclaredField(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"mThemeImpl\\\"\\u003c/span\\u003e);\\r\\n            themeField.setAccessible(\\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e);\\r\\n            Object impl \\u003d themeField.get(theme);\\r\\n            Field ma \\u003d impl.getClass().getDeclaredField(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"mAssets\\\"\\u003c/span\\u003e);\\r\\n            ma.setAccessible(\\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e);\\r\\n            ma.set(impl, newAssetManager);\\r\\n        }\\r\\n        ...\\r\\n    } \\u003cspan class\\u003d\\\"keyword\\\"\\u003ecatch\\u003c/span\\u003e (Throwable e) {\\r\\n        Log.e(LOG_TAG, \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"Failed to update existing theme for activity \\\"\\u003c/span\\u003e + activity,\\r\\n                e);\\r\\n    }\\r\\n    pruneResourceCaches(resources);\\r\\n}\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e这个思路是对的，但是远不够。例如，Google 自己的Support包里面的一个类 android.support.v7.view.ContextThemeWrapper会生成一个新的Theme保存：\\u003c/p\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003epublic\\u003c/span\\u003e \\u003cspan class\\u003d\\\"class\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eContextThemeWrapper\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eextends\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eContextWrapper\\u003c/span\\u003e \\u003c/span\\u003e{\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e mThemeResource;\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e Resources.Theme mTheme;\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e LayoutInflater mInflater;\\r\\n    ...\\r\\n    \\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003einitializeTheme\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e()\\u003c/span\\u003e \\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e first \\u003d mTheme \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e;\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (first) {\\r\\n            mTheme \\u003d getResources().newTheme();\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e Resources.Theme theme \\u003d getBaseContext().getTheme();\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (theme !\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e) {\\r\\n                mTheme.setTo(theme);\\r\\n            }\\r\\n        }\\r\\n        onApplyThemeResource(mTheme, mThemeResource, first);\\r\\n    }\\r\\n    ...\\r\\n}\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e如果没有替换了这个ContextThemeWrapper的Theme，假如配合它使用的Reources/AssetManager是新的，就会导致Crash：\\u003cbr\\u003e\\u003ccode\\u003ejava.lang.RuntimeException: Failed to resolve attribute at index 0\\u003c/code\\u003e\\u003cbr\\u003e这是大部分开源框架都存在的Issue。\\u003cbr\\u003e为了解决这个问题，我们不仅清理所有Activity的Theme，还清理了所有View的Context。\\u003c/p\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003etry\\u003c/span\\u003e {\\r\\n    List\\u0026lt;View\\u0026gt; list \\u003d getAllChildViews(activity.getWindow().getDecorView());\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (View v : list) {\\r\\n        Context context \\u003d v.getContext();\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (context \\u003cspan class\\u003d\\\"keyword\\\"\\u003einstanceof\\u003c/span\\u003e ContextThemeWrapper\\r\\n                \\u0026amp;\\u0026amp; context !\\u003d activity\\r\\n                \\u0026amp;\\u0026amp; !clearContextWrapperCaches.contains(context)) {\\r\\n            clearContextWrapperCaches.add((ContextThemeWrapper) context);\\r\\n            pruneSupportContextThemeWrapper((ContextThemeWrapper) context, newAssetManager); \\u003cspan class\\u003d\\\"comment\\\"\\u003e// 清理Theme\\u003c/span\\u003e\\r\\n        }\\r\\n    }\\r\\n} \\u003cspan class\\u003d\\\"keyword\\\"\\u003ecatch\\u003c/span\\u003e (Throwable ignore) {\\r\\n    Log.e(LOG_TAG, ignore.getMessage());\\r\\n}\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e但是这些做法还是不能解决所有问题，有时候为了实现一个产品需求，Android工程师可能会采取一些非常规写法，导致变成插件之后资源加载失败。比如在一个自己的类里面保存了Theme。这种问题不可能一个个改业务代码，那能不能让插件兼容这种写法呢？\\u003cbr\\u003e我们对这种行为也做了兼容：\\u003cstrong\\u003e修改字节码\\u003c/strong\\u003e。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e了解虚拟机指令的同学都知道，如果要保存一个类变量，对应的虚拟机的指令是PUTFIELD/PUTSTATIC，以此为突破口，用ASM写一个MethodVisitor：\\u003c/p\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003estatic\\u003c/span\\u003e \\u003cspan class\\u003d\\\"class\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eclass\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eMyMethodVisitor\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eextends\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eMethodVisitor\\u003c/span\\u003e \\u003c/span\\u003e{\\r\\n    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e stackSize \\u003d \\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;\\r\\n\\r\\n    MyMethodVisitor(MethodVisitor mv) {\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003esuper\\u003c/span\\u003e(Opcodes.ASM5, mv);\\r\\n    }\\r\\n\\r\\n    \\u003cspan class\\u003d\\\"annotation\\\"\\u003e@Override\\u003c/span\\u003e\\r\\n    \\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003epublic\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003evisitFieldInsn\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e opcode, String owner, String name, String desc)\\u003c/span\\u003e \\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (opcode \\u003d\\u003d Opcodes.PUTFIELD || opcode \\u003d\\u003d Opcodes.PUTSTATIC) {\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"Landroid/content/res/Resources$Theme;\\\"\\u003c/span\\u003e.equals(desc)) {\\r\\n                stackSize \\u003d \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;\\r\\n                visitInsn(Opcodes.DUP);\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003esuper\\u003c/span\\u003e.visitMethodInsn(Opcodes.INVOKESTATIC,\\r\\n                        \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"com/meituan/hydra/runtime/Transformer\\\"\\u003c/span\\u003e,\\r\\n                        \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"collectTheme\\\"\\u003c/span\\u003e,\\r\\n                        \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"(Landroid/content/res/Resources$Theme;)V\\\"\\u003c/span\\u003e,\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e);\\r\\n            }\\r\\n        }\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003esuper\\u003c/span\\u003e.visitFieldInsn(opcode, owner, name, desc);\\r\\n    }\\r\\n\\r\\n    \\u003cspan class\\u003d\\\"annotation\\\"\\u003e@Override\\u003c/span\\u003e\\r\\n    \\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003epublic\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003evisitMaxs\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e maxStack, \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e maxLocals)\\u003c/span\\u003e \\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003esuper\\u003c/span\\u003e.visitMaxs(maxStack + stackSize, maxLocals);\\r\\n        stackSize \\u003d \\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;\\r\\n    }\\r\\n}\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e这样可以保证所有被类保存的Theme都会被收集起来，在插件安装后，统一清理、重建就行了。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e插件的构建系统\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e为了实现在AAR集成方式和插件集成方式之间一键切换，并解决插件化遇到的“API陷阱”的问题，我们把大量的时间花在构建系统的建设上面，我们的构建系统除了支持常规的构建插件之外，还支持已有构建工具和未来可能存在的构建工具。\\u003cbr\\u003e我们将正常构建过程分为4个阶段：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e收集依赖\\u003c/li\\u003e\\r\\n\\u003cli\\u003e处理资源\\u003c/li\\u003e\\r\\n\\u003cli\\u003e处理代码\\u003c/li\\u003e\\r\\n\\u003cli\\u003e打包签名\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e那么如何保证对已有Gradle插件的支持？最好的方式是不对这个构建过程做太多干涉，保证它们的正常、按顺序执行。所以我们的构建系统在不干扰这个顺序的基础上，把插件的构建过程插入进去，对应正常构建的4个阶段，主要做了如下工作。\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e宿主解析依赖之后，分析插件的依赖，进行依赖仲裁和引用计数分析\\u003c/li\\u003e\\r\\n\\u003cli\\u003e宿主处理资源之前，处理插件资源，规避了资源访问的陷阱，生成需要Merge的资源列表给宿主，开发 美团AAPT 处理插件资源\\u003c/li\\u003e\\r\\n\\u003cli\\u003e宿主处理代码之中，规避插件API使用的陷阱，复用宿主的Proguard和Gradle插件，做到对原生构建过程的最大兼容。我们也修复了Proguard Mapping的问题，后续会有专门的博客介绍\\u003c/li\\u003e\\r\\n\\u003cli\\u003e宿主打包签名之前，构建插件APK，计算升级兼容的Hash特征，使用V2签名加快运行时的验证\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\"],\"summary\":[\"在Android开发行业里，插件化已经不是一门新鲜的技术了，在稍大的平台型App上早已是标配。进入2017年，Atlas、Replugin、VirtualAPK相继开源，标志着插件化技术进入了成熟阶段。\"],\"blIds\":[\"[\\\"1\\\",\\\"4\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"5\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('724', '1', '21', '2017-10-21 16:31:51', '{}');
INSERT INTO `timeline` VALUES ('725', '1', '10', '2017-10-21 16:31:51', '{}');
INSERT INTO `timeline` VALUES ('726', '1', '21', '2017-10-21 16:35:06', '{}');
INSERT INTO `timeline` VALUES ('727', '1', '10', '2017-10-21 16:35:06', '{}');
INSERT INTO `timeline` VALUES ('728', '1', '2', '2017-10-21 16:35:10', '{}');
INSERT INTO `timeline` VALUES ('729', '1', '5', '2017-10-21 16:35:10', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('730', '1', '2', '2017-10-21 16:37:02', '{}');
INSERT INTO `timeline` VALUES ('731', '1', '5', '2017-10-21 16:37:02', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('732', '1', '5', '2017-10-21 16:37:07', '{\"date1\":[\"2017/10/21 16:37:05\"],\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('733', '1', '5', '2017-10-21 16:37:12', '{\"date2\":[\"2017/10/21 16:37:10\"],\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('734', '1', '21', '2017-10-21 16:37:13', '{}');
INSERT INTO `timeline` VALUES ('735', '1', '10', '2017-10-21 16:37:13', '{}');
INSERT INTO `timeline` VALUES ('736', '1', '2', '2017-10-21 16:37:26', '{}');
INSERT INTO `timeline` VALUES ('737', '1', '5', '2017-10-21 16:37:26', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('738', '1', '21', '2017-10-21 16:37:30', '{}');
INSERT INTO `timeline` VALUES ('739', '1', '10', '2017-10-21 16:37:30', '{}');
INSERT INTO `timeline` VALUES ('740', '1', '2', '2017-10-21 16:37:32', '{}');
INSERT INTO `timeline` VALUES ('741', '1', '5', '2017-10-21 16:37:32', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('742', '1', '21', '2017-10-21 16:37:41', '{}');
INSERT INTO `timeline` VALUES ('743', '1', '10', '2017-10-21 16:37:41', '{}');
INSERT INTO `timeline` VALUES ('744', '1', '1', '2017-10-21 16:48:25', '{}');
INSERT INTO `timeline` VALUES ('745', '1', '10', '2017-10-21 16:48:25', '{}');
INSERT INTO `timeline` VALUES ('746', '1', '1', '2017-10-21 16:51:01', '{}');
INSERT INTO `timeline` VALUES ('747', '1', '10', '2017-10-21 16:51:01', '{}');
INSERT INTO `timeline` VALUES ('748', '1', '1', '2017-10-21 16:51:31', '{}');
INSERT INTO `timeline` VALUES ('749', '1', '10', '2017-10-21 16:51:31', '{}');
INSERT INTO `timeline` VALUES ('750', '1', '1', '2017-10-21 16:52:19', '{}');
INSERT INTO `timeline` VALUES ('751', '1', '10', '2017-10-21 16:52:19', '{}');
INSERT INTO `timeline` VALUES ('752', '1', '1', '2017-10-21 16:52:38', '{}');
INSERT INTO `timeline` VALUES ('753', '1', '10', '2017-10-21 16:52:39', '{}');
INSERT INTO `timeline` VALUES ('754', '1', '21', '2017-10-21 17:14:58', '{}');
INSERT INTO `timeline` VALUES ('755', '1', '10', '2017-10-21 17:14:58', '{}');
INSERT INTO `timeline` VALUES ('756', '1', '1', '2017-10-21 17:15:01', '{\"id\":[\"8\"]}');
INSERT INTO `timeline` VALUES ('757', '1', '21', '2017-10-21 17:15:04', '{}');
INSERT INTO `timeline` VALUES ('758', '1', '10', '2017-10-21 17:15:05', '{}');
INSERT INTO `timeline` VALUES ('759', '1', '1', '2017-10-21 17:15:07', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('760', '1', '10', '2017-10-21 17:15:07', '{}');
INSERT INTO `timeline` VALUES ('761', '1', '21', '2017-10-21 17:15:13', '{}');
INSERT INTO `timeline` VALUES ('762', '1', '10', '2017-10-21 17:15:13', '{}');
INSERT INTO `timeline` VALUES ('763', '1', '1', '2017-10-21 17:15:16', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('764', '1', '10', '2017-10-21 17:15:16', '{}');
INSERT INTO `timeline` VALUES ('765', '1', '21', '2017-10-21 17:15:28', '{}');
INSERT INTO `timeline` VALUES ('766', '1', '10', '2017-10-21 17:15:28', '{}');
INSERT INTO `timeline` VALUES ('767', '1', '1', '2017-10-21 17:15:32', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('768', '1', '21', '2017-10-21 17:17:37', '{}');
INSERT INTO `timeline` VALUES ('769', '1', '10', '2017-10-21 17:17:37', '{}');
INSERT INTO `timeline` VALUES ('770', '1', '1', '2017-10-21 17:17:41', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('771', '1', '1', '2017-10-21 17:18:42', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('772', '1', '1', '2017-10-21 17:19:34', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('773', '1', '1', '2017-10-21 17:20:01', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('774', '1', '10', '2017-10-21 17:20:01', '{}');
INSERT INTO `timeline` VALUES ('775', '1', '1', '2017-10-21 17:20:06', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('776', '1', '1', '2017-10-21 17:20:07', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('777', '1', '1', '2017-10-21 17:20:08', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('778', '1', '10', '2017-10-21 17:20:08', '{}');
INSERT INTO `timeline` VALUES ('779', '1', '1', '2017-10-21 17:20:11', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('780', '1', '1', '2017-10-21 17:20:12', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('781', '1', '1', '2017-10-21 17:20:13', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('782', '1', '1', '2017-10-21 17:20:13', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('783', '1', '10', '2017-10-21 17:20:13', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('784', '1', '1', '2017-10-21 17:20:14', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('785', '1', '1', '2017-10-21 17:20:14', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('786', '1', '1', '2017-10-21 17:20:15', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('787', '1', '1', '2017-10-21 17:20:16', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('788', '1', '10', '2017-10-21 17:20:16', '{}');
INSERT INTO `timeline` VALUES ('789', '1', '1', '2017-10-21 17:20:20', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('790', '1', '1', '2017-10-21 17:20:21', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('791', '1', '1', '2017-10-21 17:20:21', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('792', '1', '1', '2017-10-21 17:20:22', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('793', '1', '1', '2017-10-21 17:20:25', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('794', '1', '1', '2017-10-21 17:20:25', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('795', '1', '1', '2017-10-21 17:20:26', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('796', '1', '10', '2017-10-21 17:20:26', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('797', '1', '1', '2017-10-21 17:20:26', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('798', '1', '1', '2017-10-21 17:20:27', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('799', '1', '1', '2017-10-21 17:20:27', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('800', '1', '10', '2017-10-21 17:20:28', '{}');
INSERT INTO `timeline` VALUES ('801', '1', '1', '2017-10-21 17:20:28', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('802', '1', '1', '2017-10-21 17:20:29', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('803', '1', '1', '2017-10-21 17:20:29', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('804', '1', '1', '2017-10-21 17:20:30', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('805', '1', '10', '2017-10-21 17:20:30', '{}');
INSERT INTO `timeline` VALUES ('806', '1', '10', '2017-10-21 17:20:30', '{}');
INSERT INTO `timeline` VALUES ('807', '1', '1', '2017-10-21 17:20:30', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('808', '1', '1', '2017-10-21 17:20:31', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('809', '1', '10', '2017-10-21 17:20:31', '{}');
INSERT INTO `timeline` VALUES ('810', '1', '1', '2017-10-21 17:20:32', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('811', '1', '1', '2017-10-21 17:20:51', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('812', '1', '1', '2017-10-21 17:20:53', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('813', '1', '1', '2017-10-21 17:20:54', '{\"id\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('814', '1', '14', '2017-10-21 17:20:55', '{\"title\":[\"张顺你还好吗\"],\"content\":[\"你好\"],\"summary\":[\"张顺你好\"],\"blIds\":[\"[\\\"2\\\",\\\"3\\\",\\\"4\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"10\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('815', '1', '21', '2017-10-21 17:20:57', '{}');
INSERT INTO `timeline` VALUES ('816', '1', '10', '2017-10-21 17:20:58', '{}');
INSERT INTO `timeline` VALUES ('817', '1', '2', '2017-10-21 17:22:51', '{}');
INSERT INTO `timeline` VALUES ('818', '1', '5', '2017-10-21 17:22:51', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('819', '1', '21', '2017-10-21 17:24:09', '{}');
INSERT INTO `timeline` VALUES ('820', '1', '10', '2017-10-21 17:24:09', '{}');
INSERT INTO `timeline` VALUES ('821', '1', '21', '2017-10-21 17:24:51', '{}');
INSERT INTO `timeline` VALUES ('822', '1', '10', '2017-10-21 17:24:52', '{}');
INSERT INTO `timeline` VALUES ('823', '1', '1', '2017-10-21 17:24:55', '{\"id\":[\"2\"]}');
INSERT INTO `timeline` VALUES ('824', '1', '1', '2017-10-21 17:25:15', '{}');
INSERT INTO `timeline` VALUES ('825', '1', '10', '2017-10-21 17:25:15', '{}');
INSERT INTO `timeline` VALUES ('826', '1', '2', '2017-10-21 17:32:44', '{}');
INSERT INTO `timeline` VALUES ('827', '1', '5', '2017-10-21 17:32:45', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('828', '2', '1', '2017-10-24 21:34:13', '{}');
INSERT INTO `timeline` VALUES ('829', '2', '10', '2017-10-24 21:34:13', '{}');
INSERT INTO `timeline` VALUES ('830', '2', '1', '2017-10-24 21:52:17', '{}');
INSERT INTO `timeline` VALUES ('831', '2', '10', '2017-10-24 21:52:17', '{}');
INSERT INTO `timeline` VALUES ('832', '2', '1', '2017-10-24 21:52:32', '{}');
INSERT INTO `timeline` VALUES ('833', '2', '10', '2017-10-24 21:52:32', '{}');
INSERT INTO `timeline` VALUES ('834', '2', '1', '2017-10-24 21:53:14', '{}');
INSERT INTO `timeline` VALUES ('835', '2', '10', '2017-10-24 21:53:14', '{}');
INSERT INTO `timeline` VALUES ('836', '2', '22', '2017-10-24 21:53:15', '{}');
INSERT INTO `timeline` VALUES ('837', '2', '22', '2017-10-24 21:53:19', '{}');
INSERT INTO `timeline` VALUES ('838', '2', '22', '2017-10-24 21:56:31', '{}');
INSERT INTO `timeline` VALUES ('839', '2', '22', '2017-10-24 21:56:37', '{}');
INSERT INTO `timeline` VALUES ('840', '2', '22', '2017-10-24 21:56:38', '{}');
INSERT INTO `timeline` VALUES ('841', '1', '22', '2017-10-24 21:56:46', '{}');
INSERT INTO `timeline` VALUES ('842', '1', '22', '2017-10-24 21:56:56', '{}');
INSERT INTO `timeline` VALUES ('843', '1', '22', '2017-10-24 21:57:11', '{}');
INSERT INTO `timeline` VALUES ('844', '1', '22', '2017-10-24 21:57:12', '{}');
INSERT INTO `timeline` VALUES ('845', '1', '22', '2017-10-24 21:57:52', '{}');
INSERT INTO `timeline` VALUES ('846', '1', '22', '2017-10-24 21:57:57', '{}');
INSERT INTO `timeline` VALUES ('847', '1', '22', '2017-10-24 21:58:46', '{}');
INSERT INTO `timeline` VALUES ('848', '1', '22', '2017-10-24 22:00:21', '{}');
INSERT INTO `timeline` VALUES ('849', '1', '22', '2017-10-24 22:01:00', '{}');
INSERT INTO `timeline` VALUES ('850', '1', '22', '2017-10-24 22:03:30', '{}');
INSERT INTO `timeline` VALUES ('851', '1', '22', '2017-10-24 22:03:49', '{}');
INSERT INTO `timeline` VALUES ('852', '1', '22', '2017-10-24 22:04:11', '{}');
INSERT INTO `timeline` VALUES ('853', '1', '22', '2017-10-24 22:04:29', '{}');
INSERT INTO `timeline` VALUES ('854', '1', '22', '2017-10-24 22:05:41', '{}');
INSERT INTO `timeline` VALUES ('855', '1', '22', '2017-10-24 22:08:48', '{}');
INSERT INTO `timeline` VALUES ('856', '1', '22', '2017-10-24 22:09:50', '{}');
INSERT INTO `timeline` VALUES ('857', '1', '22', '2017-10-24 22:09:56', '{}');
INSERT INTO `timeline` VALUES ('858', '1', '22', '2017-10-24 22:09:57', '{}');
INSERT INTO `timeline` VALUES ('859', '1', '22', '2017-10-24 22:10:09', '{}');
INSERT INTO `timeline` VALUES ('860', '1', '22', '2017-10-24 22:29:29', '{}');
INSERT INTO `timeline` VALUES ('861', '1', '22', '2017-10-24 22:33:24', '{}');
INSERT INTO `timeline` VALUES ('862', '1', '22', '2017-10-24 22:33:43', '{}');
INSERT INTO `timeline` VALUES ('863', '1', '22', '2017-10-24 22:33:45', '{}');
INSERT INTO `timeline` VALUES ('864', '1', '22', '2017-10-24 22:33:53', '{}');
INSERT INTO `timeline` VALUES ('865', '1', '22', '2017-10-24 22:33:53', '{}');
INSERT INTO `timeline` VALUES ('866', '1', '22', '2017-10-24 22:33:54', '{}');
INSERT INTO `timeline` VALUES ('867', '1', '22', '2017-10-24 22:34:01', '{}');
INSERT INTO `timeline` VALUES ('868', '1', '22', '2017-10-24 22:34:08', '{}');
INSERT INTO `timeline` VALUES ('869', '1', '22', '2017-10-24 22:34:08', '{}');
INSERT INTO `timeline` VALUES ('870', '1', '22', '2017-10-24 22:34:31', '{}');
INSERT INTO `timeline` VALUES ('871', '1', '21', '2017-10-26 15:18:04', '{}');
INSERT INTO `timeline` VALUES ('872', '1', '10', '2017-10-26 15:18:05', '{}');
INSERT INTO `timeline` VALUES ('873', '1', '2', '2017-10-26 15:18:12', '{}');
INSERT INTO `timeline` VALUES ('874', '1', '5', '2017-10-26 15:18:12', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('875', '1', '9', '2017-10-26 15:18:16', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('876', '1', '2', '2017-10-26 15:30:16', '{}');
INSERT INTO `timeline` VALUES ('877', '1', '5', '2017-10-26 15:30:17', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('878', '1', '28', '2017-10-26 16:03:09', '{}');
INSERT INTO `timeline` VALUES ('879', '1', '28', '2017-10-26 16:05:18', '{}');
INSERT INTO `timeline` VALUES ('880', '1', '28', '2017-10-26 16:05:42', '{}');
INSERT INTO `timeline` VALUES ('881', '1', '28', '2017-10-26 16:08:09', '{}');
INSERT INTO `timeline` VALUES ('882', '1', '28', '2017-10-26 16:09:03', '{}');
INSERT INTO `timeline` VALUES ('883', '1', '28', '2017-10-26 16:11:36', '{}');
INSERT INTO `timeline` VALUES ('884', '1', '28', '2017-10-26 16:11:40', '{}');
INSERT INTO `timeline` VALUES ('885', '1', '28', '2017-10-26 16:11:41', '{}');
INSERT INTO `timeline` VALUES ('886', '1', '28', '2017-10-26 16:11:41', '{}');
INSERT INTO `timeline` VALUES ('887', '1', '28', '2017-10-26 16:11:42', '{}');
INSERT INTO `timeline` VALUES ('888', '1', '28', '2017-10-26 16:11:46', '{}');
INSERT INTO `timeline` VALUES ('889', '1', '28', '2017-10-26 16:12:09', '{}');
INSERT INTO `timeline` VALUES ('890', '1', '28', '2017-10-26 16:12:19', '{}');
INSERT INTO `timeline` VALUES ('891', '1', '28', '2017-10-26 16:12:29', '{}');
INSERT INTO `timeline` VALUES ('892', '1', '28', '2017-10-26 16:12:29', '{}');
INSERT INTO `timeline` VALUES ('893', '1', '28', '2017-10-26 16:13:18', '{}');
INSERT INTO `timeline` VALUES ('894', '1', '28', '2017-10-26 16:13:21', '{}');
INSERT INTO `timeline` VALUES ('895', '1', '28', '2017-10-26 16:13:25', '{}');
INSERT INTO `timeline` VALUES ('896', '1', '28', '2017-10-26 16:13:25', '{}');
INSERT INTO `timeline` VALUES ('897', '1', '28', '2017-10-26 16:13:25', '{}');
INSERT INTO `timeline` VALUES ('898', '1', '28', '2017-10-26 16:13:41', '{}');
INSERT INTO `timeline` VALUES ('899', '1', '28', '2017-10-26 16:13:41', '{}');
INSERT INTO `timeline` VALUES ('900', '1', '28', '2017-10-26 16:13:44', '{}');
INSERT INTO `timeline` VALUES ('901', '1', '28', '2017-10-26 16:13:45', '{}');
INSERT INTO `timeline` VALUES ('902', '1', '28', '2017-10-26 16:13:45', '{}');
INSERT INTO `timeline` VALUES ('903', '1', '28', '2017-10-26 16:13:50', '{}');
INSERT INTO `timeline` VALUES ('904', '1', '28', '2017-10-26 16:13:50', '{}');
INSERT INTO `timeline` VALUES ('905', '1', '28', '2017-10-26 16:13:51', '{}');
INSERT INTO `timeline` VALUES ('906', '1', '28', '2017-10-26 16:13:51', '{}');
INSERT INTO `timeline` VALUES ('907', '1', '28', '2017-10-26 16:15:19', '{}');
INSERT INTO `timeline` VALUES ('908', '1', '28', '2017-10-26 16:16:04', '{}');
INSERT INTO `timeline` VALUES ('909', '1', '28', '2017-10-26 16:16:05', '{}');
INSERT INTO `timeline` VALUES ('910', '1', '28', '2017-10-26 16:16:05', '{}');
INSERT INTO `timeline` VALUES ('911', '1', '28', '2017-10-26 16:16:14', '{}');
INSERT INTO `timeline` VALUES ('912', '1', '28', '2017-10-26 16:16:34', '{}');
INSERT INTO `timeline` VALUES ('913', '1', '28', '2017-10-26 16:18:43', '{}');
INSERT INTO `timeline` VALUES ('914', '1', '28', '2017-10-26 16:18:54', '{}');
INSERT INTO `timeline` VALUES ('915', '1', '28', '2017-10-26 16:18:55', '{}');
INSERT INTO `timeline` VALUES ('916', '1', '28', '2017-10-26 16:18:55', '{}');
INSERT INTO `timeline` VALUES ('917', '1', '28', '2017-10-26 16:18:58', '{}');
INSERT INTO `timeline` VALUES ('918', '1', '28', '2017-10-26 16:19:00', '{}');
INSERT INTO `timeline` VALUES ('919', '1', '28', '2017-10-26 16:19:00', '{}');
INSERT INTO `timeline` VALUES ('920', '1', '28', '2017-10-26 16:19:00', '{}');
INSERT INTO `timeline` VALUES ('921', '1', '28', '2017-10-26 16:19:55', '{}');
INSERT INTO `timeline` VALUES ('922', '1', '28', '2017-10-26 16:20:29', '{}');
INSERT INTO `timeline` VALUES ('923', '1', '28', '2017-10-26 16:20:30', '{}');
INSERT INTO `timeline` VALUES ('924', '1', '28', '2017-10-26 16:20:30', '{}');
INSERT INTO `timeline` VALUES ('925', '1', '28', '2017-10-26 16:21:03', '{}');
INSERT INTO `timeline` VALUES ('926', '1', '28', '2017-10-26 16:22:40', '{}');
INSERT INTO `timeline` VALUES ('927', '1', '28', '2017-10-26 16:22:57', '{}');
INSERT INTO `timeline` VALUES ('928', '1', '28', '2017-10-26 16:22:58', '{}');
INSERT INTO `timeline` VALUES ('929', '1', '28', '2017-10-26 16:22:58', '{}');
INSERT INTO `timeline` VALUES ('930', '1', '28', '2017-10-26 16:23:10', '{}');
INSERT INTO `timeline` VALUES ('931', '1', '28', '2017-10-26 16:24:23', '{}');
INSERT INTO `timeline` VALUES ('932', '1', '28', '2017-10-26 16:24:32', '{}');
INSERT INTO `timeline` VALUES ('933', '1', '28', '2017-10-26 16:24:42', '{}');
INSERT INTO `timeline` VALUES ('934', '1', '28', '2017-10-26 16:24:43', '{}');
INSERT INTO `timeline` VALUES ('935', '1', '28', '2017-10-26 16:33:31', '{}');
INSERT INTO `timeline` VALUES ('936', '1', '28', '2017-10-26 16:33:34', '{}');
INSERT INTO `timeline` VALUES ('937', '1', '28', '2017-10-26 16:34:16', '{}');
INSERT INTO `timeline` VALUES ('938', '1', '28', '2017-10-26 16:35:45', '{}');
INSERT INTO `timeline` VALUES ('939', '1', '28', '2017-10-26 16:36:50', '{}');
INSERT INTO `timeline` VALUES ('940', '1', '28', '2017-10-26 16:37:23', '{}');
INSERT INTO `timeline` VALUES ('941', '1', '28', '2017-10-26 16:37:52', '{}');
INSERT INTO `timeline` VALUES ('942', '1', '28', '2017-10-26 16:39:25', '{}');
INSERT INTO `timeline` VALUES ('943', '1', '1', '2017-10-26 16:40:26', '{}');
INSERT INTO `timeline` VALUES ('944', '1', '10', '2017-10-26 16:40:26', '{}');
INSERT INTO `timeline` VALUES ('945', '1', '28', '2017-10-26 16:40:31', '{}');
INSERT INTO `timeline` VALUES ('946', '1', '28', '2017-10-26 16:51:33', '{}');
INSERT INTO `timeline` VALUES ('947', '1', '22', '2017-10-27 17:54:52', '{}');
INSERT INTO `timeline` VALUES ('948', '4', '22', '2017-10-27 17:56:53', '{}');
INSERT INTO `timeline` VALUES ('949', '5', '22', '2017-10-27 17:57:31', '{}');
INSERT INTO `timeline` VALUES ('950', '5', '2', '2017-10-27 17:57:44', '{}');
INSERT INTO `timeline` VALUES ('951', '5', '5', '2017-10-27 17:57:44', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('952', '5', '1', '2017-10-27 17:58:17', '{}');
INSERT INTO `timeline` VALUES ('953', '5', '10', '2017-10-27 17:58:17', '{}');
INSERT INTO `timeline` VALUES ('954', '5', '1', '2017-10-27 18:00:17', '{}');
INSERT INTO `timeline` VALUES ('955', '5', '10', '2017-10-27 18:00:17', '{}');
INSERT INTO `timeline` VALUES ('956', '5', '1', '2017-10-27 18:00:47', '{}');
INSERT INTO `timeline` VALUES ('957', '5', '10', '2017-10-27 18:00:47', '{}');
INSERT INTO `timeline` VALUES ('958', '5', '1', '2017-10-27 18:01:30', '{}');
INSERT INTO `timeline` VALUES ('959', '5', '10', '2017-10-27 18:01:30', '{}');
INSERT INTO `timeline` VALUES ('960', '5', '1', '2017-10-27 18:02:22', '{}');
INSERT INTO `timeline` VALUES ('961', '5', '10', '2017-10-27 18:02:22', '{}');
INSERT INTO `timeline` VALUES ('962', '1', '22', '2017-10-27 18:11:37', '{}');
INSERT INTO `timeline` VALUES ('963', '1', '2', '2017-11-02 14:55:56', '{}');
INSERT INTO `timeline` VALUES ('964', '1', '5', '2017-11-02 14:55:57', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('965', '1', '21', '2017-11-02 14:56:01', '{}');
INSERT INTO `timeline` VALUES ('966', '1', '21', '2017-11-02 14:57:54', '{}');
INSERT INTO `timeline` VALUES ('967', '1', '10', '2017-11-02 14:57:54', '{}');
INSERT INTO `timeline` VALUES ('968', '1', '22', '2017-11-02 14:58:12', '{}');
INSERT INTO `timeline` VALUES ('969', '1', '21', '2017-11-02 15:02:04', '{}');
INSERT INTO `timeline` VALUES ('970', '1', '10', '2017-11-02 15:02:05', '{}');
INSERT INTO `timeline` VALUES ('971', '1', '21', '2017-11-02 15:02:11', '{}');
INSERT INTO `timeline` VALUES ('972', '1', '2', '2017-11-02 15:02:16', '{}');
INSERT INTO `timeline` VALUES ('973', '1', '5', '2017-11-02 15:02:16', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('974', '1', '22', '2017-11-02 15:02:23', '{}');
INSERT INTO `timeline` VALUES ('975', '1', '22', '2017-11-02 15:05:29', '{}');
INSERT INTO `timeline` VALUES ('976', '1', '2', '2017-11-02 16:43:47', '{}');
INSERT INTO `timeline` VALUES ('977', '1', '5', '2017-11-02 16:43:48', '{\"page\":[\"1\"],\"rows\":[\"25\"]}');
INSERT INTO `timeline` VALUES ('978', '1', '30', '2017-11-02 16:47:33', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('979', '1', '30', '2017-11-02 16:53:21', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('980', '1', '30', '2017-11-02 16:53:30', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('981', '1', '30', '2017-11-02 16:59:41', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('982', '1', '31', '2017-11-02 16:59:41', '{\"int1\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('983', '1', '30', '2017-11-02 17:00:40', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('984', '1', '31', '2017-11-02 17:00:40', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('985', '1', '30', '2017-11-02 17:26:40', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('986', '1', '22', '2017-11-02 17:26:49', '{}');
INSERT INTO `timeline` VALUES ('987', '1', '30', '2017-11-02 17:26:55', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('988', '1', '30', '2017-11-02 17:27:36', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('989', '1', '31', '2017-11-02 17:27:36', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('990', '1', '30', '2017-11-02 17:28:19', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('991', '1', '31', '2017-11-02 17:28:20', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('992', '1', '30', '2017-11-02 17:29:09', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('993', '1', '31', '2017-11-02 17:29:09', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('994', '1', '30', '2017-11-02 17:30:13', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('995', '1', '31', '2017-11-02 17:30:13', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('996', '1', '30', '2017-11-02 17:31:22', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('997', '1', '31', '2017-11-02 17:31:22', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('998', '1', '30', '2017-11-02 17:32:04', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('999', '1', '31', '2017-11-02 17:32:04', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1000', '1', '30', '2017-11-02 17:32:14', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1001', '1', '31', '2017-11-02 17:32:14', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1002', '1', '30', '2017-11-02 17:32:59', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1003', '1', '31', '2017-11-02 17:32:59', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1004', '1', '30', '2017-11-02 17:35:38', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1005', '1', '31', '2017-11-02 17:35:38', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1006', '1', '31', '2017-11-02 17:35:50', '{\"page\":[\"2\"],\"rows\":[\"100\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1007', '1', '30', '2017-11-02 17:36:18', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1008', '1', '31', '2017-11-02 17:36:18', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1009', '1', '30', '2017-11-02 17:37:48', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1010', '1', '31', '2017-11-02 17:37:48', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1011', '1', '30', '2017-11-02 17:38:18', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1012', '1', '31', '2017-11-02 17:38:18', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1013', '1', '30', '2017-11-02 17:38:23', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1014', '1', '31', '2017-11-02 17:38:24', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1015', '1', '30', '2017-11-02 17:38:24', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1016', '1', '31', '2017-11-02 17:38:25', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1017', '1', '30', '2017-11-02 17:38:37', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1018', '1', '31', '2017-11-02 17:38:38', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1019', '1', '30', '2017-11-02 17:38:54', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1020', '1', '31', '2017-11-02 17:38:54', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1021', '1', '30', '2017-11-02 17:39:01', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1022', '1', '31', '2017-11-02 17:39:01', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1023', '1', '30', '2017-11-02 17:39:04', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1024', '1', '31', '2017-11-02 17:39:04', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1025', '1', '30', '2017-11-02 17:39:04', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1026', '1', '31', '2017-11-02 17:39:04', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1027', '1', '31', '2017-11-02 17:39:07', '{\"page\":[\"2\"],\"rows\":[\"100\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1028', '1', '30', '2017-11-02 17:39:20', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1029', '1', '31', '2017-11-02 17:39:20', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1030', '1', '31', '2017-11-02 17:39:22', '{\"page\":[\"2\"],\"rows\":[\"10\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1031', '1', '31', '2017-11-02 17:39:24', '{\"page\":[\"3\"],\"rows\":[\"10\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1032', '1', '31', '2017-11-02 17:39:26', '{\"page\":[\"4\"],\"rows\":[\"10\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1033', '1', '31', '2017-11-02 17:39:27', '{\"page\":[\"5\"],\"rows\":[\"10\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1034', '1', '31', '2017-11-02 17:39:29', '{\"page\":[\"6\"],\"rows\":[\"10\"],\"int1\":[\"10\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1035', '1', '30', '2017-11-02 17:45:59', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1036', '1', '31', '2017-11-02 17:45:59', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1037', '1', '30', '2017-11-02 17:46:02', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1038', '1', '31', '2017-11-02 17:46:02', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1039', '1', '30', '2017-11-02 17:46:05', '{\"bId\":[\"10\"]}');
INSERT INTO `timeline` VALUES ('1040', '1', '31', '2017-11-02 17:46:05', '{\"int1\":[\"10\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1041', '1', '36', '2017-11-03 16:34:12', '{}');
INSERT INTO `timeline` VALUES ('1042', '1', '36', '2017-11-03 16:34:29', '{}');
INSERT INTO `timeline` VALUES ('1043', '1', '2', '2017-11-03 16:34:52', '{}');
INSERT INTO `timeline` VALUES ('1044', '1', '5', '2017-11-03 16:34:53', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1045', '1', '36', '2017-11-03 16:34:54', '{}');
INSERT INTO `timeline` VALUES ('1046', '1', '2', '2017-11-03 16:34:57', '{}');
INSERT INTO `timeline` VALUES ('1047', '1', '5', '2017-11-03 16:34:57', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1048', '1', '36', '2017-11-03 16:34:59', '{}');
INSERT INTO `timeline` VALUES ('1049', '1', '36', '2017-11-03 16:37:25', '{}');
INSERT INTO `timeline` VALUES ('1050', '1', '23', '2017-11-03 16:37:25', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1051', '1', '36', '2017-11-03 17:33:34', '{}');
INSERT INTO `timeline` VALUES ('1052', '1', '23', '2017-11-03 17:33:35', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1053', '1', '36', '2017-11-03 17:33:40', '{}');
INSERT INTO `timeline` VALUES ('1054', '1', '23', '2017-11-03 17:33:41', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1055', '1', '36', '2017-11-03 17:34:06', '{}');
INSERT INTO `timeline` VALUES ('1056', '1', '23', '2017-11-03 17:34:07', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1057', '1', '36', '2017-11-03 17:34:26', '{}');
INSERT INTO `timeline` VALUES ('1058', '1', '23', '2017-11-03 17:34:27', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1059', '1', '36', '2017-11-03 17:35:36', '{}');
INSERT INTO `timeline` VALUES ('1060', '1', '23', '2017-11-03 17:35:36', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1061', '1', '36', '2017-11-03 17:36:16', '{}');
INSERT INTO `timeline` VALUES ('1062', '1', '23', '2017-11-03 17:36:17', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1063', '1', '36', '2017-11-03 17:36:27', '{}');
INSERT INTO `timeline` VALUES ('1064', '1', '23', '2017-11-03 17:36:27', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1065', '1', '36', '2017-11-03 17:36:55', '{}');
INSERT INTO `timeline` VALUES ('1066', '1', '23', '2017-11-03 17:36:56', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1067', '1', '36', '2017-11-03 17:37:30', '{}');
INSERT INTO `timeline` VALUES ('1068', '1', '23', '2017-11-03 17:37:31', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1069', '1', '23', '2017-11-03 17:37:52', '{\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"usernum\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('1070', '1', '23', '2017-11-03 17:37:53', '{\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"usernum\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1071', '1', '36', '2017-11-03 17:38:42', '{}');
INSERT INTO `timeline` VALUES ('1072', '1', '23', '2017-11-03 17:38:42', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1073', '1', '36', '2017-11-03 17:39:51', '{}');
INSERT INTO `timeline` VALUES ('1074', '1', '23', '2017-11-03 17:39:51', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1075', '1', '36', '2017-11-03 17:46:10', '{}');
INSERT INTO `timeline` VALUES ('1076', '1', '23', '2017-11-03 17:46:11', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1077', '1', '23', '2017-11-03 17:46:18', '{\"srt1\":[\"11\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1078', '1', '23', '2017-11-03 17:46:22', '{\"srt1\":[\"2222\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1079', '1', '23', '2017-11-03 17:46:27', '{\"str2\":[\"1\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1080', '1', '23', '2017-11-03 17:46:31', '{\"srt1\":[\"22\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1081', '1', '36', '2017-11-03 17:46:45', '{}');
INSERT INTO `timeline` VALUES ('1082', '1', '23', '2017-11-03 17:46:45', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1083', '1', '23', '2017-11-03 17:59:44', '{\"srt1\":[\"111\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1084', '1', '23', '2017-11-03 18:00:53', '{\"date1\":[\"2017/11/03 18:00:50\"],\"srt1\":[\"111\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1085', '1', '36', '2017-11-03 18:06:39', '{}');
INSERT INTO `timeline` VALUES ('1086', '1', '23', '2017-11-03 18:06:39', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1087', '1', '23', '2017-11-03 18:06:43', '{\"date1\":[\"2017/11/03 18:06:41\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1088', '1', '36', '2017-11-05 10:19:05', '{}');
INSERT INTO `timeline` VALUES ('1089', '1', '23', '2017-11-05 10:19:07', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1090', '1', '23', '2017-11-05 10:19:08', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1091', '1', '36', '2017-11-05 10:19:33', '{}');
INSERT INTO `timeline` VALUES ('1092', '1', '36', '2017-11-05 10:20:10', '{}');
INSERT INTO `timeline` VALUES ('1093', '1', '40', '2017-11-05 10:20:10', '{}');
INSERT INTO `timeline` VALUES ('1094', '1', '40', '2017-11-05 10:20:10', '{}');
INSERT INTO `timeline` VALUES ('1095', '1', '36', '2017-11-05 10:20:35', '{}');
INSERT INTO `timeline` VALUES ('1096', '1', '40', '2017-11-05 10:20:35', '{}');
INSERT INTO `timeline` VALUES ('1097', '1', '40', '2017-11-05 10:20:35', '{}');
INSERT INTO `timeline` VALUES ('1098', '1', '1', '2017-11-05 10:20:53', '{}');
INSERT INTO `timeline` VALUES ('1099', '1', '10', '2017-11-05 10:20:53', '{}');
INSERT INTO `timeline` VALUES ('1100', '1', '36', '2017-11-05 10:22:32', '{}');
INSERT INTO `timeline` VALUES ('1101', '1', '40', '2017-11-05 10:22:32', '{}');
INSERT INTO `timeline` VALUES ('1102', '1', '40', '2017-11-05 10:22:32', '{}');
INSERT INTO `timeline` VALUES ('1103', '1', '36', '2017-11-05 10:29:26', '{}');
INSERT INTO `timeline` VALUES ('1104', '1', '23', '2017-11-05 10:29:26', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1105', '1', '40', '2017-11-05 10:29:26', '{}');
INSERT INTO `timeline` VALUES ('1106', '1', '36', '2017-11-05 10:30:11', '{}');
INSERT INTO `timeline` VALUES ('1107', '1', '40', '2017-11-05 10:30:12', '{}');
INSERT INTO `timeline` VALUES ('1108', '1', '40', '2017-11-05 10:30:12', '{}');
INSERT INTO `timeline` VALUES ('1109', '1', '36', '2017-11-05 10:30:19', '{}');
INSERT INTO `timeline` VALUES ('1110', '1', '40', '2017-11-05 10:30:19', '{}');
INSERT INTO `timeline` VALUES ('1111', '1', '40', '2017-11-05 10:30:19', '{}');
INSERT INTO `timeline` VALUES ('1112', '1', '36', '2017-11-05 10:31:32', '{}');
INSERT INTO `timeline` VALUES ('1113', '1', '40', '2017-11-05 10:31:33', '{}');
INSERT INTO `timeline` VALUES ('1114', '1', '40', '2017-11-05 10:31:33', '{}');
INSERT INTO `timeline` VALUES ('1115', '1', '36', '2017-11-05 10:31:59', '{}');
INSERT INTO `timeline` VALUES ('1116', '1', '40', '2017-11-05 10:31:59', '{}');
INSERT INTO `timeline` VALUES ('1117', '1', '40', '2017-11-05 10:31:59', '{}');
INSERT INTO `timeline` VALUES ('1118', '1', '36', '2017-11-05 10:32:17', '{}');
INSERT INTO `timeline` VALUES ('1119', '1', '23', '2017-11-05 10:32:18', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1120', '1', '40', '2017-11-05 10:32:18', '{}');
INSERT INTO `timeline` VALUES ('1121', '1', '36', '2017-11-05 10:34:37', '{}');
INSERT INTO `timeline` VALUES ('1122', '1', '40', '2017-11-05 10:34:37', '{}');
INSERT INTO `timeline` VALUES ('1123', '1', '40', '2017-11-05 10:34:37', '{}');
INSERT INTO `timeline` VALUES ('1124', '1', '36', '2017-11-05 10:34:53', '{}');
INSERT INTO `timeline` VALUES ('1125', '1', '40', '2017-11-05 10:34:53', '{}');
INSERT INTO `timeline` VALUES ('1126', '1', '40', '2017-11-05 10:34:53', '{}');
INSERT INTO `timeline` VALUES ('1127', '1', '36', '2017-11-05 10:35:21', '{}');
INSERT INTO `timeline` VALUES ('1128', '1', '40', '2017-11-05 10:35:21', '{}');
INSERT INTO `timeline` VALUES ('1129', '1', '40', '2017-11-05 10:35:21', '{}');
INSERT INTO `timeline` VALUES ('1130', '1', '36', '2017-11-05 10:35:42', '{}');
INSERT INTO `timeline` VALUES ('1131', '1', '40', '2017-11-05 10:35:43', '{}');
INSERT INTO `timeline` VALUES ('1132', '1', '40', '2017-11-05 10:35:43', '{}');
INSERT INTO `timeline` VALUES ('1133', '1', '36', '2017-11-05 10:44:59', '{}');
INSERT INTO `timeline` VALUES ('1134', '1', '23', '2017-11-05 10:45:00', '{}');
INSERT INTO `timeline` VALUES ('1135', '1', '40', '2017-11-05 10:45:00', '{}');
INSERT INTO `timeline` VALUES ('1136', '1', '36', '2017-11-05 10:45:58', '{}');
INSERT INTO `timeline` VALUES ('1137', '1', '40', '2017-11-05 10:45:59', '{}');
INSERT INTO `timeline` VALUES ('1138', '1', '40', '2017-11-05 10:45:59', '{}');
INSERT INTO `timeline` VALUES ('1139', '1', '36', '2017-11-05 10:46:09', '{}');
INSERT INTO `timeline` VALUES ('1140', '1', '40', '2017-11-05 10:46:09', '{}');
INSERT INTO `timeline` VALUES ('1141', '1', '40', '2017-11-05 10:46:09', '{}');
INSERT INTO `timeline` VALUES ('1142', '1', '36', '2017-11-05 10:49:31', '{}');
INSERT INTO `timeline` VALUES ('1143', '1', '40', '2017-11-05 10:49:31', '{}');
INSERT INTO `timeline` VALUES ('1144', '1', '40', '2017-11-05 10:49:31', '{}');
INSERT INTO `timeline` VALUES ('1145', '1', '36', '2017-11-05 10:50:40', '{}');
INSERT INTO `timeline` VALUES ('1146', '1', '40', '2017-11-05 10:50:41', '{}');
INSERT INTO `timeline` VALUES ('1147', '1', '40', '2017-11-05 10:50:41', '{}');
INSERT INTO `timeline` VALUES ('1148', '1', '36', '2017-11-05 10:52:30', '{}');
INSERT INTO `timeline` VALUES ('1149', '1', '40', '2017-11-05 10:52:31', '{}');
INSERT INTO `timeline` VALUES ('1150', '1', '40', '2017-11-05 10:52:31', '{}');
INSERT INTO `timeline` VALUES ('1151', '1', '36', '2017-11-05 10:53:52', '{}');
INSERT INTO `timeline` VALUES ('1152', '1', '40', '2017-11-05 10:53:53', '{}');
INSERT INTO `timeline` VALUES ('1153', '1', '40', '2017-11-05 10:53:53', '{}');
INSERT INTO `timeline` VALUES ('1154', '1', '36', '2017-11-05 10:54:43', '{}');
INSERT INTO `timeline` VALUES ('1155', '1', '40', '2017-11-05 10:54:43', '{}');
INSERT INTO `timeline` VALUES ('1156', '1', '40', '2017-11-05 10:54:43', '{}');
INSERT INTO `timeline` VALUES ('1157', '1', '36', '2017-11-05 10:55:26', '{}');
INSERT INTO `timeline` VALUES ('1158', '1', '40', '2017-11-05 10:55:27', '{}');
INSERT INTO `timeline` VALUES ('1159', '1', '40', '2017-11-05 10:55:27', '{}');
INSERT INTO `timeline` VALUES ('1160', '1', '36', '2017-11-05 10:56:14', '{}');
INSERT INTO `timeline` VALUES ('1161', '1', '40', '2017-11-05 10:56:15', '{}');
INSERT INTO `timeline` VALUES ('1162', '1', '40', '2017-11-05 10:56:15', '{}');
INSERT INTO `timeline` VALUES ('1163', '1', '36', '2017-11-05 10:56:24', '{}');
INSERT INTO `timeline` VALUES ('1164', '1', '40', '2017-11-05 10:56:25', '{}');
INSERT INTO `timeline` VALUES ('1165', '1', '40', '2017-11-05 10:56:25', '{}');
INSERT INTO `timeline` VALUES ('1166', '1', '26', '2017-11-05 10:56:44', '{\"_method\":[\"put\"],\"_token\":[\"51054411612714\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"0\"],\"rids\":[\"1\",\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('1167', '1', '23', '2017-11-05 10:56:44', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1168', '1', '36', '2017-11-05 11:02:08', '{}');
INSERT INTO `timeline` VALUES ('1169', '1', '40', '2017-11-05 11:02:09', '{}');
INSERT INTO `timeline` VALUES ('1170', '1', '40', '2017-11-05 11:02:09', '{}');
INSERT INTO `timeline` VALUES ('1171', '1', '36', '2017-11-05 11:02:21', '{}');
INSERT INTO `timeline` VALUES ('1172', '1', '40', '2017-11-05 11:02:21', '{}');
INSERT INTO `timeline` VALUES ('1173', '1', '40', '2017-11-05 11:02:21', '{}');
INSERT INTO `timeline` VALUES ('1174', '1', '36', '2017-11-05 11:03:47', '{}');
INSERT INTO `timeline` VALUES ('1175', '1', '40', '2017-11-05 11:03:47', '{}');
INSERT INTO `timeline` VALUES ('1176', '1', '40', '2017-11-05 11:03:47', '{}');
INSERT INTO `timeline` VALUES ('1177', '1', '36', '2017-11-05 11:05:18', '{}');
INSERT INTO `timeline` VALUES ('1178', '1', '23', '2017-11-05 11:05:19', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1179', '1', '40', '2017-11-05 11:05:19', '{}');
INSERT INTO `timeline` VALUES ('1180', '1', '36', '2017-11-05 11:05:32', '{}');
INSERT INTO `timeline` VALUES ('1181', '1', '23', '2017-11-05 11:05:33', '{}');
INSERT INTO `timeline` VALUES ('1182', '1', '40', '2017-11-05 11:05:33', '{}');
INSERT INTO `timeline` VALUES ('1183', '1', '36', '2017-11-05 11:06:57', '{}');
INSERT INTO `timeline` VALUES ('1184', '1', '40', '2017-11-05 11:06:57', '{}');
INSERT INTO `timeline` VALUES ('1185', '1', '40', '2017-11-05 11:06:57', '{}');
INSERT INTO `timeline` VALUES ('1186', '1', '36', '2017-11-05 11:07:21', '{}');
INSERT INTO `timeline` VALUES ('1187', '1', '40', '2017-11-05 11:07:22', '{}');
INSERT INTO `timeline` VALUES ('1188', '1', '40', '2017-11-05 11:07:22', '{}');
INSERT INTO `timeline` VALUES ('1189', '1', '36', '2017-11-05 11:10:04', '{}');
INSERT INTO `timeline` VALUES ('1190', '1', '40', '2017-11-05 11:10:05', '{}');
INSERT INTO `timeline` VALUES ('1191', '1', '40', '2017-11-05 11:10:05', '{}');
INSERT INTO `timeline` VALUES ('1192', '1', '36', '2017-11-05 11:10:19', '{}');
INSERT INTO `timeline` VALUES ('1193', '1', '40', '2017-11-05 11:10:20', '{}');
INSERT INTO `timeline` VALUES ('1194', '1', '40', '2017-11-05 11:10:20', '{}');
INSERT INTO `timeline` VALUES ('1195', '1', '36', '2017-11-05 11:10:36', '{}');
INSERT INTO `timeline` VALUES ('1196', '1', '40', '2017-11-05 11:10:37', '{}');
INSERT INTO `timeline` VALUES ('1197', '1', '40', '2017-11-05 11:10:37', '{}');
INSERT INTO `timeline` VALUES ('1198', '1', '36', '2017-11-05 11:13:13', '{}');
INSERT INTO `timeline` VALUES ('1199', '1', '40', '2017-11-05 11:13:13', '{}');
INSERT INTO `timeline` VALUES ('1200', '1', '40', '2017-11-05 11:13:13', '{}');
INSERT INTO `timeline` VALUES ('1201', '1', '36', '2017-11-05 11:14:37', '{}');
INSERT INTO `timeline` VALUES ('1202', '1', '40', '2017-11-05 11:14:37', '{}');
INSERT INTO `timeline` VALUES ('1203', '1', '40', '2017-11-05 11:14:37', '{}');
INSERT INTO `timeline` VALUES ('1204', '1', '36', '2017-11-05 11:14:56', '{}');
INSERT INTO `timeline` VALUES ('1205', '1', '40', '2017-11-05 11:14:56', '{}');
INSERT INTO `timeline` VALUES ('1206', '1', '40', '2017-11-05 11:14:56', '{}');
INSERT INTO `timeline` VALUES ('1207', '1', '36', '2017-11-05 11:15:59', '{}');
INSERT INTO `timeline` VALUES ('1208', '1', '23', '2017-11-05 11:16:00', '{}');
INSERT INTO `timeline` VALUES ('1209', '1', '40', '2017-11-05 11:16:00', '{}');
INSERT INTO `timeline` VALUES ('1210', '1', '36', '2017-11-05 11:16:58', '{}');
INSERT INTO `timeline` VALUES ('1211', '1', '40', '2017-11-05 11:16:58', '{}');
INSERT INTO `timeline` VALUES ('1212', '1', '40', '2017-11-05 11:16:58', '{}');
INSERT INTO `timeline` VALUES ('1213', '1', '36', '2017-11-05 11:17:17', '{}');
INSERT INTO `timeline` VALUES ('1214', '1', '40', '2017-11-05 11:17:17', '{}');
INSERT INTO `timeline` VALUES ('1215', '1', '40', '2017-11-05 11:17:17', '{}');
INSERT INTO `timeline` VALUES ('1216', '1', '36', '2017-11-05 11:18:18', '{}');
INSERT INTO `timeline` VALUES ('1217', '1', '40', '2017-11-05 11:18:19', '{}');
INSERT INTO `timeline` VALUES ('1218', '1', '40', '2017-11-05 11:18:19', '{}');
INSERT INTO `timeline` VALUES ('1219', '1', '26', '2017-11-05 11:18:32', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"0\"]}');
INSERT INTO `timeline` VALUES ('1220', '1', '23', '2017-11-05 11:18:33', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1221', '1', '36', '2017-11-05 11:19:42', '{}');
INSERT INTO `timeline` VALUES ('1222', '1', '40', '2017-11-05 11:19:42', '{}');
INSERT INTO `timeline` VALUES ('1223', '1', '40', '2017-11-05 11:19:42', '{}');
INSERT INTO `timeline` VALUES ('1224', '1', '36', '2017-11-05 11:20:12', '{}');
INSERT INTO `timeline` VALUES ('1225', '1', '40', '2017-11-05 11:20:13', '{}');
INSERT INTO `timeline` VALUES ('1226', '1', '40', '2017-11-05 11:20:13', '{}');
INSERT INTO `timeline` VALUES ('1227', '1', '26', '2017-11-05 11:20:31', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"0\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1228', '1', '23', '2017-11-05 11:20:31', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1229', '1', '36', '2017-11-05 11:21:55', '{}');
INSERT INTO `timeline` VALUES ('1230', '1', '40', '2017-11-05 11:21:55', '{}');
INSERT INTO `timeline` VALUES ('1231', '1', '40', '2017-11-05 11:21:55', '{}');
INSERT INTO `timeline` VALUES ('1232', '1', '36', '2017-11-05 11:22:02', '{}');
INSERT INTO `timeline` VALUES ('1233', '1', '40', '2017-11-05 11:22:02', '{}');
INSERT INTO `timeline` VALUES ('1234', '1', '40', '2017-11-05 11:22:02', '{}');
INSERT INTO `timeline` VALUES ('1235', '1', '36', '2017-11-05 11:23:25', '{}');
INSERT INTO `timeline` VALUES ('1236', '1', '40', '2017-11-05 11:23:26', '{}');
INSERT INTO `timeline` VALUES ('1237', '1', '40', '2017-11-05 11:23:26', '{}');
INSERT INTO `timeline` VALUES ('1238', '1', '36', '2017-11-05 11:23:28', '{}');
INSERT INTO `timeline` VALUES ('1239', '1', '40', '2017-11-05 11:23:29', '{}');
INSERT INTO `timeline` VALUES ('1240', '1', '40', '2017-11-05 11:23:29', '{}');
INSERT INTO `timeline` VALUES ('1241', '1', '36', '2017-11-05 11:24:05', '{}');
INSERT INTO `timeline` VALUES ('1242', '1', '23', '2017-11-05 11:24:05', '{}');
INSERT INTO `timeline` VALUES ('1243', '1', '40', '2017-11-05 11:24:05', '{}');
INSERT INTO `timeline` VALUES ('1244', '1', '36', '2017-11-05 11:24:14', '{}');
INSERT INTO `timeline` VALUES ('1245', '1', '23', '2017-11-05 11:24:15', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1246', '1', '40', '2017-11-05 11:24:15', '{}');
INSERT INTO `timeline` VALUES ('1247', '1', '36', '2017-11-05 11:25:05', '{}');
INSERT INTO `timeline` VALUES ('1248', '1', '23', '2017-11-05 11:25:05', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1249', '1', '40', '2017-11-05 11:25:05', '{}');
INSERT INTO `timeline` VALUES ('1250', '1', '36', '2017-11-05 11:25:23', '{}');
INSERT INTO `timeline` VALUES ('1251', '1', '40', '2017-11-05 11:25:23', '{}');
INSERT INTO `timeline` VALUES ('1252', '1', '40', '2017-11-05 11:25:23', '{}');
INSERT INTO `timeline` VALUES ('1253', '1', '36', '2017-11-05 11:25:51', '{}');
INSERT INTO `timeline` VALUES ('1254', '1', '40', '2017-11-05 11:25:51', '{}');
INSERT INTO `timeline` VALUES ('1255', '1', '40', '2017-11-05 11:25:51', '{}');
INSERT INTO `timeline` VALUES ('1256', '1', '26', '2017-11-05 11:26:42', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"4\"],\"usernum\":[\"1217360619@qq.com\"],\"userpass\":[\"123456\"],\"name\":[\"张顺邮箱用户\"],\"mail\":[\"1217360619@qq.com\"],\"phone\":[\"\"],\"isdelete\":[\"1\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1257', '1', '23', '2017-11-05 11:26:43', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1258', '1', '26', '2017-11-05 11:26:50', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"1\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1259', '1', '23', '2017-11-05 11:26:50', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1260', '1', '26', '2017-11-05 11:26:54', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"4\"],\"usernum\":[\"1217360619@qq.com\"],\"userpass\":[\"123456\"],\"name\":[\"张顺邮箱用户\"],\"mail\":[\"1217360619@qq.com\"],\"phone\":[\"\"],\"isdelete\":[\"0\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1261', '1', '23', '2017-11-05 11:26:54', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1262', '1', '26', '2017-11-05 11:27:00', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"0\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1263', '1', '23', '2017-11-05 11:27:00', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1264', '1', '26', '2017-11-05 11:27:04', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"4\"],\"usernum\":[\"1217360619@qq.com\"],\"userpass\":[\"123456\"],\"name\":[\"张顺邮箱用户\"],\"mail\":[\"1217360619@qq.com\"],\"phone\":[\"\"],\"isdelete\":[\"1\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1265', '1', '23', '2017-11-05 11:27:04', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1266', '1', '26', '2017-11-05 11:27:12', '{\"_method\":[\"put\"],\"_token\":[\"51117154598679\"],\"id\":[\"4\"],\"usernum\":[\"1217360619@qq.com\"],\"userpass\":[\"123456\"],\"name\":[\"张顺邮箱用户\"],\"mail\":[\"1217360619@qq.com\"],\"phone\":[\"\"],\"isdelete\":[\"0\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1267', '1', '23', '2017-11-05 11:27:12', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1268', '1', '36', '2017-11-05 19:13:54', '{}');
INSERT INTO `timeline` VALUES ('1269', '1', '40', '2017-11-05 19:13:54', '{}');
INSERT INTO `timeline` VALUES ('1270', '1', '40', '2017-11-05 19:13:54', '{}');
INSERT INTO `timeline` VALUES ('1271', '1', '22', '2017-11-05 19:13:55', '{}');
INSERT INTO `timeline` VALUES ('1272', '1', '36', '2017-11-05 19:13:57', '{}');
INSERT INTO `timeline` VALUES ('1273', '1', '40', '2017-11-05 19:13:57', '{}');
INSERT INTO `timeline` VALUES ('1274', '1', '40', '2017-11-05 19:13:57', '{}');
INSERT INTO `timeline` VALUES ('1275', '1', '36', '2017-11-05 21:41:41', '{}');
INSERT INTO `timeline` VALUES ('1276', '1', '23', '2017-11-05 21:41:42', '{}');
INSERT INTO `timeline` VALUES ('1277', '1', '40', '2017-11-05 21:41:42', '{}');
INSERT INTO `timeline` VALUES ('1278', '1', '37', '2017-11-05 21:41:44', '{}');
INSERT INTO `timeline` VALUES ('1279', '1', '40', '2017-11-05 21:41:44', '{}');
INSERT INTO `timeline` VALUES ('1280', '1', '40', '2017-11-05 21:41:44', '{}');
INSERT INTO `timeline` VALUES ('1281', '1', '37', '2017-11-05 21:42:11', '{}');
INSERT INTO `timeline` VALUES ('1282', '1', '40', '2017-11-05 21:42:11', '{}');
INSERT INTO `timeline` VALUES ('1283', '1', '40', '2017-11-05 21:42:11', '{}');
INSERT INTO `timeline` VALUES ('1284', '1', '37', '2017-11-05 21:42:21', '{}');
INSERT INTO `timeline` VALUES ('1285', '1', '38', '2017-11-05 21:42:22', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1286', '1', '40', '2017-11-05 21:42:22', '{}');
INSERT INTO `timeline` VALUES ('1287', '1', '37', '2017-11-05 21:42:48', '{}');
INSERT INTO `timeline` VALUES ('1288', '1', '40', '2017-11-05 21:42:48', '{}');
INSERT INTO `timeline` VALUES ('1289', '1', '40', '2017-11-05 21:42:48', '{}');
INSERT INTO `timeline` VALUES ('1290', '1', '37', '2017-11-05 21:43:37', '{}');
INSERT INTO `timeline` VALUES ('1291', '1', '40', '2017-11-05 21:43:37', '{}');
INSERT INTO `timeline` VALUES ('1292', '1', '40', '2017-11-05 21:43:37', '{}');
INSERT INTO `timeline` VALUES ('1293', '1', '37', '2017-11-05 21:44:32', '{}');
INSERT INTO `timeline` VALUES ('1294', '1', '40', '2017-11-05 21:44:33', '{}');
INSERT INTO `timeline` VALUES ('1295', '1', '40', '2017-11-05 21:44:33', '{}');
INSERT INTO `timeline` VALUES ('1296', '1', '2', '2017-11-05 21:44:36', '{}');
INSERT INTO `timeline` VALUES ('1297', '1', '5', '2017-11-05 21:44:36', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1298', '1', '21', '2017-11-05 21:44:38', '{}');
INSERT INTO `timeline` VALUES ('1299', '1', '10', '2017-11-05 21:44:39', '{}');
INSERT INTO `timeline` VALUES ('1300', '1', '36', '2017-11-05 21:44:40', '{}');
INSERT INTO `timeline` VALUES ('1301', '1', '23', '2017-11-05 21:44:40', '{}');
INSERT INTO `timeline` VALUES ('1302', '1', '40', '2017-11-05 21:44:40', '{}');
INSERT INTO `timeline` VALUES ('1303', '1', '37', '2017-11-05 21:44:42', '{}');
INSERT INTO `timeline` VALUES ('1304', '1', '40', '2017-11-05 21:44:42', '{}');
INSERT INTO `timeline` VALUES ('1305', '1', '40', '2017-11-05 21:44:42', '{}');
INSERT INTO `timeline` VALUES ('1306', '1', '36', '2017-11-05 21:44:44', '{}');
INSERT INTO `timeline` VALUES ('1307', '1', '23', '2017-11-05 21:44:44', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1308', '1', '40', '2017-11-05 21:44:44', '{}');
INSERT INTO `timeline` VALUES ('1309', '1', '37', '2017-11-05 21:44:45', '{}');
INSERT INTO `timeline` VALUES ('1310', '1', '40', '2017-11-05 21:44:45', '{}');
INSERT INTO `timeline` VALUES ('1311', '1', '40', '2017-11-05 21:44:45', '{}');
INSERT INTO `timeline` VALUES ('1312', '1', '37', '2017-11-05 22:00:12', '{}');
INSERT INTO `timeline` VALUES ('1313', '1', '40', '2017-11-05 22:00:12', '{}');
INSERT INTO `timeline` VALUES ('1314', '1', '40', '2017-11-05 22:00:12', '{}');
INSERT INTO `timeline` VALUES ('1315', '1', '37', '2017-11-05 22:01:13', '{}');
INSERT INTO `timeline` VALUES ('1316', '1', '38', '2017-11-05 22:01:14', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1317', '1', '37', '2017-11-05 22:06:28', '{}');
INSERT INTO `timeline` VALUES ('1318', '1', '46', '2017-11-05 22:06:28', '{}');
INSERT INTO `timeline` VALUES ('1319', '1', '46', '2017-11-05 22:06:28', '{}');
INSERT INTO `timeline` VALUES ('1320', '1', '37', '2017-11-05 22:07:32', '{}');
INSERT INTO `timeline` VALUES ('1321', '1', '46', '2017-11-05 22:07:33', '{}');
INSERT INTO `timeline` VALUES ('1322', '1', '46', '2017-11-05 22:07:33', '{}');
INSERT INTO `timeline` VALUES ('1323', '1', '37', '2017-11-05 22:08:12', '{}');
INSERT INTO `timeline` VALUES ('1324', '1', '46', '2017-11-05 22:08:12', '{}');
INSERT INTO `timeline` VALUES ('1325', '1', '46', '2017-11-05 22:08:12', '{}');
INSERT INTO `timeline` VALUES ('1326', '1', '37', '2017-11-05 22:08:42', '{}');
INSERT INTO `timeline` VALUES ('1327', '1', '46', '2017-11-05 22:08:42', '{}');
INSERT INTO `timeline` VALUES ('1328', '1', '46', '2017-11-05 22:08:42', '{}');
INSERT INTO `timeline` VALUES ('1329', '1', '36', '2017-11-05 22:09:56', '{}');
INSERT INTO `timeline` VALUES ('1330', '1', '23', '2017-11-05 22:09:56', '{}');
INSERT INTO `timeline` VALUES ('1331', '1', '40', '2017-11-05 22:09:56', '{}');
INSERT INTO `timeline` VALUES ('1332', '1', '37', '2017-11-05 22:10:06', '{}');
INSERT INTO `timeline` VALUES ('1333', '1', '46', '2017-11-05 22:10:06', '{}');
INSERT INTO `timeline` VALUES ('1334', '1', '46', '2017-11-05 22:10:06', '{}');
INSERT INTO `timeline` VALUES ('1335', '1', '37', '2017-11-05 22:10:32', '{}');
INSERT INTO `timeline` VALUES ('1336', '1', '38', '2017-11-05 22:10:32', '{}');
INSERT INTO `timeline` VALUES ('1337', '1', '46', '2017-11-05 22:10:32', '{}');
INSERT INTO `timeline` VALUES ('1338', '1', '41', '2017-11-05 22:10:48', '{\"_method\":[\"post\"],\"_token\":[\"5226247047060\"],\"id\":[\"\"],\"name\":[\"测试角色\"],\"introduction\":[\"测试用\"],\"pids\":[\"1\",\"3\"]}');
INSERT INTO `timeline` VALUES ('1339', '1', '38', '2017-11-05 22:10:48', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1340', '1', '42', '2017-11-05 22:10:59', '{\"_method\":[\"put\"],\"_token\":[\"5226247047060\"],\"id\":[\"4\"],\"name\":[\"测试角色\"],\"introduction\":[\"测试用\"],\"pids\":[\"1\",\"3\",\"5\",\"6\",\"7\"]}');
INSERT INTO `timeline` VALUES ('1341', '1', '38', '2017-11-05 22:10:59', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1342', '1', '37', '2017-11-05 22:14:15', '{}');
INSERT INTO `timeline` VALUES ('1343', '1', '46', '2017-11-05 22:14:15', '{}');
INSERT INTO `timeline` VALUES ('1344', '1', '46', '2017-11-05 22:14:15', '{}');
INSERT INTO `timeline` VALUES ('1345', '1', '37', '2017-11-05 22:14:32', '{}');
INSERT INTO `timeline` VALUES ('1346', '1', '46', '2017-11-05 22:14:32', '{}');
INSERT INTO `timeline` VALUES ('1347', '1', '46', '2017-11-05 22:14:32', '{}');
INSERT INTO `timeline` VALUES ('1348', '1', '37', '2017-11-05 22:15:08', '{}');
INSERT INTO `timeline` VALUES ('1349', '1', '46', '2017-11-05 22:15:09', '{}');
INSERT INTO `timeline` VALUES ('1350', '1', '46', '2017-11-05 22:15:09', '{}');
INSERT INTO `timeline` VALUES ('1351', '1', '36', '2017-11-05 22:15:14', '{}');
INSERT INTO `timeline` VALUES ('1352', '1', '40', '2017-11-05 22:15:14', '{}');
INSERT INTO `timeline` VALUES ('1353', '1', '40', '2017-11-05 22:15:14', '{}');
INSERT INTO `timeline` VALUES ('1354', '5', '22', '2017-11-05 22:15:30', '{}');
INSERT INTO `timeline` VALUES ('1355', '1', '37', '2017-11-05 22:15:42', '{}');
INSERT INTO `timeline` VALUES ('1356', '1', '46', '2017-11-05 22:15:42', '{}');
INSERT INTO `timeline` VALUES ('1357', '1', '46', '2017-11-05 22:15:42', '{}');
INSERT INTO `timeline` VALUES ('1358', '1', '36', '2017-11-05 22:15:54', '{}');
INSERT INTO `timeline` VALUES ('1359', '1', '23', '2017-11-05 22:15:54', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1360', '1', '23', '2017-11-05 22:15:54', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1361', '1', '26', '2017-11-05 22:16:02', '{\"_method\":[\"put\"],\"_token\":[\"52215392252184\"],\"id\":[\"1\"],\"usernum\":[\"yd7111\"],\"userpass\":[\"123456\"],\"name\":[\"张顺\"],\"mail\":[\"\"],\"phone\":[\"\"],\"isdelete\":[\"0\"],\"rids\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('1362', '1', '1', '2017-11-05 22:16:29', '{}');
INSERT INTO `timeline` VALUES ('1363', '1', '37', '2017-11-05 22:17:05', '{}');
INSERT INTO `timeline` VALUES ('1364', '1', '38', '2017-11-05 22:17:06', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1365', '1', '46', '2017-11-05 22:17:06', '{}');
INSERT INTO `timeline` VALUES ('1366', '1', '36', '2017-11-05 22:17:07', '{}');
INSERT INTO `timeline` VALUES ('1367', '1', '23', '2017-11-05 22:17:07', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1368', '1', '40', '2017-11-05 22:17:07', '{}');
INSERT INTO `timeline` VALUES ('1369', '1', '36', '2017-11-05 22:17:10', '{}');
INSERT INTO `timeline` VALUES ('1370', '1', '23', '2017-11-05 22:17:10', '{}');
INSERT INTO `timeline` VALUES ('1371', '1', '40', '2017-11-05 22:17:10', '{}');
INSERT INTO `timeline` VALUES ('1372', '1', '37', '2017-11-05 22:17:19', '{}');
INSERT INTO `timeline` VALUES ('1373', '1', '38', '2017-11-05 22:17:20', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1374', '1', '46', '2017-11-05 22:17:20', '{}');
INSERT INTO `timeline` VALUES ('1375', '1', '36', '2017-11-05 22:17:28', '{}');
INSERT INTO `timeline` VALUES ('1376', '1', '40', '2017-11-05 22:17:29', '{}');
INSERT INTO `timeline` VALUES ('1377', '1', '40', '2017-11-05 22:17:29', '{}');
INSERT INTO `timeline` VALUES ('1378', '1', '26', '2017-11-05 22:17:37', '{\"_method\":[\"put\"],\"_token\":[\"52215392252184\"],\"id\":[\"5\"],\"usernum\":[\"15817383352\"],\"userpass\":[\"123456\"],\"name\":[\"测试手机用户2\"],\"mail\":[\"\"],\"phone\":[\"15817383352\"],\"isdelete\":[\"0\"],\"rids\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('1379', '1', '23', '2017-11-05 22:17:37', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1380', '1', '37', '2017-11-05 22:17:42', '{}');
INSERT INTO `timeline` VALUES ('1381', '1', '46', '2017-11-05 22:17:42', '{}');
INSERT INTO `timeline` VALUES ('1382', '1', '46', '2017-11-05 22:17:42', '{}');
INSERT INTO `timeline` VALUES ('1383', '1', '43', '2017-11-05 22:17:45', '{\"id\":[\"4\"]}');
INSERT INTO `timeline` VALUES ('1384', '1', '38', '2017-11-05 22:17:45', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1385', '1', '36', '2017-11-05 22:17:47', '{}');
INSERT INTO `timeline` VALUES ('1386', '1', '40', '2017-11-05 22:17:47', '{}');
INSERT INTO `timeline` VALUES ('1387', '1', '40', '2017-11-05 22:17:47', '{}');
INSERT INTO `timeline` VALUES ('1388', '1', '36', '2017-11-05 22:18:57', '{}');
INSERT INTO `timeline` VALUES ('1389', '1', '40', '2017-11-05 22:18:58', '{}');
INSERT INTO `timeline` VALUES ('1390', '1', '40', '2017-11-05 22:18:58', '{}');
INSERT INTO `timeline` VALUES ('1391', '1', '36', '2017-11-05 22:19:26', '{}');
INSERT INTO `timeline` VALUES ('1392', '1', '40', '2017-11-05 22:19:27', '{}');
INSERT INTO `timeline` VALUES ('1393', '1', '40', '2017-11-05 22:19:27', '{}');
INSERT INTO `timeline` VALUES ('1394', '1', '36', '2017-11-05 22:19:37', '{}');
INSERT INTO `timeline` VALUES ('1395', '1', '40', '2017-11-05 22:19:37', '{}');
INSERT INTO `timeline` VALUES ('1396', '1', '40', '2017-11-05 22:19:37', '{}');
INSERT INTO `timeline` VALUES ('1397', '1', '36', '2017-11-05 22:19:38', '{}');
INSERT INTO `timeline` VALUES ('1398', '1', '40', '2017-11-05 22:19:38', '{}');
INSERT INTO `timeline` VALUES ('1399', '1', '40', '2017-11-05 22:19:38', '{}');
INSERT INTO `timeline` VALUES ('1400', '1', '36', '2017-11-05 22:20:07', '{}');
INSERT INTO `timeline` VALUES ('1401', '1', '40', '2017-11-05 22:20:07', '{}');
INSERT INTO `timeline` VALUES ('1402', '1', '40', '2017-11-05 22:20:07', '{}');
INSERT INTO `timeline` VALUES ('1403', '1', '36', '2017-11-05 22:20:16', '{}');
INSERT INTO `timeline` VALUES ('1404', '1', '40', '2017-11-05 22:20:16', '{}');
INSERT INTO `timeline` VALUES ('1405', '1', '40', '2017-11-05 22:20:16', '{}');
INSERT INTO `timeline` VALUES ('1406', '1', '37', '2017-11-05 22:20:24', '{}');
INSERT INTO `timeline` VALUES ('1407', '1', '46', '2017-11-05 22:20:24', '{}');
INSERT INTO `timeline` VALUES ('1408', '1', '46', '2017-11-05 22:20:24', '{}');
INSERT INTO `timeline` VALUES ('1409', '1', '36', '2017-11-05 22:20:26', '{}');
INSERT INTO `timeline` VALUES ('1410', '1', '40', '2017-11-05 22:20:26', '{}');
INSERT INTO `timeline` VALUES ('1411', '1', '40', '2017-11-05 22:20:26', '{}');
INSERT INTO `timeline` VALUES ('1412', '1', '36', '2017-11-05 22:20:49', '{}');
INSERT INTO `timeline` VALUES ('1413', '1', '40', '2017-11-05 22:20:50', '{}');
INSERT INTO `timeline` VALUES ('1414', '1', '40', '2017-11-05 22:20:50', '{}');
INSERT INTO `timeline` VALUES ('1415', '1', '37', '2017-11-05 22:20:51', '{}');
INSERT INTO `timeline` VALUES ('1416', '1', '46', '2017-11-05 22:20:51', '{}');
INSERT INTO `timeline` VALUES ('1417', '1', '46', '2017-11-05 22:20:51', '{}');
INSERT INTO `timeline` VALUES ('1418', '1', '21', '2017-11-05 22:21:11', '{}');
INSERT INTO `timeline` VALUES ('1419', '1', '10', '2017-11-05 22:21:11', '{}');
INSERT INTO `timeline` VALUES ('1420', '1', '37', '2017-11-05 22:23:36', '{}');
INSERT INTO `timeline` VALUES ('1421', '1', '46', '2017-11-05 22:23:36', '{}');
INSERT INTO `timeline` VALUES ('1422', '1', '46', '2017-11-05 22:23:36', '{}');
INSERT INTO `timeline` VALUES ('1423', '1', '37', '2017-11-05 22:23:41', '{}');
INSERT INTO `timeline` VALUES ('1424', '1', '46', '2017-11-05 22:23:41', '{}');
INSERT INTO `timeline` VALUES ('1425', '1', '46', '2017-11-05 22:23:41', '{}');
INSERT INTO `timeline` VALUES ('1426', '1', '37', '2017-11-05 22:23:50', '{}');
INSERT INTO `timeline` VALUES ('1427', '1', '46', '2017-11-05 22:23:50', '{}');
INSERT INTO `timeline` VALUES ('1428', '1', '46', '2017-11-05 22:23:50', '{}');
INSERT INTO `timeline` VALUES ('1429', '1', '37', '2017-11-05 22:23:50', '{}');
INSERT INTO `timeline` VALUES ('1430', '1', '46', '2017-11-05 22:23:51', '{}');
INSERT INTO `timeline` VALUES ('1431', '1', '46', '2017-11-05 22:23:51', '{}');
INSERT INTO `timeline` VALUES ('1432', '1', '42', '2017-11-05 22:24:32', '{\"_method\":[\"put\"],\"_token\":[\"52220481559663\"],\"id\":[\"3\"],\"name\":[\"普通用户\"],\"introduction\":[\"这个角色一定不能被删除，这是注册时使用的，是程序给新用户的默认角色（其实你想删也删不掉的，不信你试试）\"],\"pids\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\"]}');
INSERT INTO `timeline` VALUES ('1433', '1', '38', '2017-11-05 22:24:32', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1434', '1', '37', '2017-11-05 22:24:49', '{}');
INSERT INTO `timeline` VALUES ('1435', '1', '46', '2017-11-05 22:24:49', '{}');
INSERT INTO `timeline` VALUES ('1436', '1', '46', '2017-11-05 22:24:49', '{}');
INSERT INTO `timeline` VALUES ('1437', '1', '42', '2017-11-05 22:25:35', '{\"_method\":[\"put\"],\"_token\":[\"52220481559663\"],\"id\":[\"1\"],\"name\":[\"开发者\"],\"introduction\":[\"拥有所有权限\"],\"pids\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"]}');
INSERT INTO `timeline` VALUES ('1438', '1', '38', '2017-11-05 22:25:36', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1439', '1', '37', '2017-11-05 22:27:08', '{}');
INSERT INTO `timeline` VALUES ('1440', '1', '46', '2017-11-05 22:27:08', '{}');
INSERT INTO `timeline` VALUES ('1441', '1', '46', '2017-11-05 22:27:08', '{}');
INSERT INTO `timeline` VALUES ('1442', '1', '37', '2017-11-05 22:27:20', '{}');
INSERT INTO `timeline` VALUES ('1443', '1', '46', '2017-11-05 22:27:20', '{}');
INSERT INTO `timeline` VALUES ('1444', '1', '46', '2017-11-05 22:27:20', '{}');
INSERT INTO `timeline` VALUES ('1445', '1', '43', '2017-11-05 22:27:22', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1446', '1', '37', '2017-11-05 22:29:34', '{}');
INSERT INTO `timeline` VALUES ('1447', '1', '46', '2017-11-05 22:29:34', '{}');
INSERT INTO `timeline` VALUES ('1448', '1', '46', '2017-11-05 22:29:34', '{}');
INSERT INTO `timeline` VALUES ('1449', '1', '37', '2017-11-05 22:29:44', '{}');
INSERT INTO `timeline` VALUES ('1450', '1', '46', '2017-11-05 22:29:44', '{}');
INSERT INTO `timeline` VALUES ('1451', '1', '46', '2017-11-05 22:29:44', '{}');
INSERT INTO `timeline` VALUES ('1452', '1', '43', '2017-11-05 22:29:47', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1453', '1', '43', '2017-11-05 22:30:09', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1454', '1', '37', '2017-11-05 22:30:23', '{}');
INSERT INTO `timeline` VALUES ('1455', '1', '46', '2017-11-05 22:30:23', '{}');
INSERT INTO `timeline` VALUES ('1456', '1', '46', '2017-11-05 22:30:23', '{}');
INSERT INTO `timeline` VALUES ('1457', '1', '36', '2017-11-05 22:30:23', '{}');
INSERT INTO `timeline` VALUES ('1458', '1', '40', '2017-11-05 22:30:24', '{}');
INSERT INTO `timeline` VALUES ('1459', '1', '40', '2017-11-05 22:30:24', '{}');
INSERT INTO `timeline` VALUES ('1460', '1', '37', '2017-11-05 22:30:25', '{}');
INSERT INTO `timeline` VALUES ('1461', '1', '46', '2017-11-05 22:30:26', '{}');
INSERT INTO `timeline` VALUES ('1462', '1', '46', '2017-11-05 22:30:26', '{}');
INSERT INTO `timeline` VALUES ('1463', '1', '36', '2017-11-05 22:30:27', '{}');
INSERT INTO `timeline` VALUES ('1464', '1', '40', '2017-11-05 22:30:27', '{}');
INSERT INTO `timeline` VALUES ('1465', '1', '40', '2017-11-05 22:30:27', '{}');
INSERT INTO `timeline` VALUES ('1466', '1', '37', '2017-11-05 22:30:27', '{}');
INSERT INTO `timeline` VALUES ('1467', '1', '46', '2017-11-05 22:30:28', '{}');
INSERT INTO `timeline` VALUES ('1468', '1', '46', '2017-11-05 22:30:28', '{}');
INSERT INTO `timeline` VALUES ('1469', '1', '36', '2017-11-05 22:30:28', '{}');
INSERT INTO `timeline` VALUES ('1470', '1', '23', '2017-11-05 22:30:28', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1471', '1', '40', '2017-11-05 22:30:28', '{}');
INSERT INTO `timeline` VALUES ('1472', '1', '37', '2017-11-05 22:30:30', '{}');
INSERT INTO `timeline` VALUES ('1473', '1', '46', '2017-11-05 22:30:30', '{}');
INSERT INTO `timeline` VALUES ('1474', '1', '46', '2017-11-05 22:30:30', '{}');
INSERT INTO `timeline` VALUES ('1475', '1', '37', '2017-11-05 22:30:35', '{}');
INSERT INTO `timeline` VALUES ('1476', '1', '46', '2017-11-05 22:30:36', '{}');
INSERT INTO `timeline` VALUES ('1477', '1', '46', '2017-11-05 22:30:36', '{}');
INSERT INTO `timeline` VALUES ('1478', '1', '37', '2017-11-05 22:35:38', '{}');
INSERT INTO `timeline` VALUES ('1479', '1', '46', '2017-11-05 22:35:38', '{}');
INSERT INTO `timeline` VALUES ('1480', '1', '46', '2017-11-05 22:35:38', '{}');
INSERT INTO `timeline` VALUES ('1481', '1', '44', '2017-11-05 22:35:39', '{}');
INSERT INTO `timeline` VALUES ('1482', '1', '46', '2017-11-05 22:35:39', '{}');
INSERT INTO `timeline` VALUES ('1483', '1', '46', '2017-11-05 22:35:39', '{}');
INSERT INTO `timeline` VALUES ('1484', '1', '44', '2017-11-05 22:36:21', '{}');
INSERT INTO `timeline` VALUES ('1485', '1', '46', '2017-11-05 22:36:21', '{}');
INSERT INTO `timeline` VALUES ('1486', '1', '46', '2017-11-05 22:36:21', '{}');
INSERT INTO `timeline` VALUES ('1487', '1', '37', '2017-11-05 22:37:01', '{}');
INSERT INTO `timeline` VALUES ('1488', '1', '46', '2017-11-05 22:37:02', '{}');
INSERT INTO `timeline` VALUES ('1489', '1', '46', '2017-11-05 22:37:02', '{}');
INSERT INTO `timeline` VALUES ('1490', '1', '38', '2017-11-05 22:38:47', '{\"str1\":[\"1\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1491', '1', '38', '2017-11-05 22:38:47', '{\"str1\":[\"1\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1492', '1', '46', '2017-11-05 22:38:49', '{}');
INSERT INTO `timeline` VALUES ('1493', '1', '46', '2017-11-05 22:38:49', '{}');
INSERT INTO `timeline` VALUES ('1494', '1', '38', '2017-11-05 22:38:56', '{\"str1\":[\"1\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1495', '1', '38', '2017-11-05 22:38:59', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1496', '1', '38', '2017-11-05 22:39:04', '{\"str1\":[\"开\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1497', '1', '38', '2017-11-05 22:39:07', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1498', '1', '38', '2017-11-05 22:39:12', '{\"str2\":[\"又有\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1499', '1', '38', '2017-11-05 22:39:15', '{\"str2\":[\"拥有\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1500', '1', '38', '2017-11-05 22:39:18', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1501', '1', '44', '2017-11-05 22:39:20', '{}');
INSERT INTO `timeline` VALUES ('1502', '1', '46', '2017-11-05 22:39:21', '{}');
INSERT INTO `timeline` VALUES ('1503', '1', '46', '2017-11-05 22:39:21', '{}');
INSERT INTO `timeline` VALUES ('1504', '1', '44', '2017-11-05 22:40:41', '{}');
INSERT INTO `timeline` VALUES ('1505', '1', '46', '2017-11-05 22:40:41', '{}');
INSERT INTO `timeline` VALUES ('1506', '1', '46', '2017-11-05 22:40:41', '{}');
INSERT INTO `timeline` VALUES ('1507', '1', '44', '2017-11-05 22:40:57', '{}');
INSERT INTO `timeline` VALUES ('1508', '1', '46', '2017-11-05 22:40:58', '{}');
INSERT INTO `timeline` VALUES ('1509', '1', '46', '2017-11-05 22:40:58', '{}');
INSERT INTO `timeline` VALUES ('1510', '1', '45', '2017-11-05 22:41:04', '{\"str2\":[\"role\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1511', '1', '45', '2017-11-05 22:41:18', '{\"str1\":[\"用户\"],\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1512', '1', '45', '2017-11-05 22:41:23', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1513', '1', '44', '2017-11-05 22:45:42', '{}');
INSERT INTO `timeline` VALUES ('1514', '1', '45', '2017-11-05 22:45:42', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1515', '1', '44', '2017-11-05 22:46:04', '{}');
INSERT INTO `timeline` VALUES ('1516', '1', '45', '2017-11-05 22:46:04', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1517', '1', '45', '2017-11-05 22:46:07', '{\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"menuOrder\"],\"order\":[\"asc\"]}');
INSERT INTO `timeline` VALUES ('1518', '1', '45', '2017-11-05 22:46:08', '{\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"menuOrder\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1519', '1', '44', '2017-11-05 22:46:29', '{}');
INSERT INTO `timeline` VALUES ('1520', '1', '45', '2017-11-05 22:46:29', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1521', '1', '44', '2017-11-05 22:48:56', '{}');
INSERT INTO `timeline` VALUES ('1522', '1', '45', '2017-11-05 22:48:56', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1523', '1', '44', '2017-11-05 22:50:31', '{}');
INSERT INTO `timeline` VALUES ('1524', '1', '44', '2017-11-05 22:50:46', '{}');
INSERT INTO `timeline` VALUES ('1525', '1', '45', '2017-11-05 22:50:46', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1526', '1', '44', '2017-11-05 22:51:44', '{}');
INSERT INTO `timeline` VALUES ('1527', '1', '45', '2017-11-05 22:51:45', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1528', '1', '44', '2017-11-05 22:52:09', '{}');
INSERT INTO `timeline` VALUES ('1529', '1', '45', '2017-11-05 22:52:09', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1530', '1', '44', '2017-11-05 22:53:24', '{}');
INSERT INTO `timeline` VALUES ('1531', '1', '45', '2017-11-05 22:53:25', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1532', '1', '44', '2017-11-05 22:54:51', '{}');
INSERT INTO `timeline` VALUES ('1533', '1', '45', '2017-11-05 22:54:51', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1534', '1', '48', '2017-11-05 22:55:07', '{\"_method\":[\"post\"],\"_token\":[\"52220481559663\"],\"id\":[\"\"],\"name\":[\"测试111111\"],\"url\":[\"11111111111\"],\"method\":[\"GET\"],\"type\":[\"menu\"],\"flag\":[\"\"],\"menuImg\":[\"\"],\"menuOrder\":[\"\"],\"menuParentId\":[\"\"]}');
INSERT INTO `timeline` VALUES ('1535', '1', '45', '2017-11-05 22:55:07', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1536', '1', '44', '2017-11-05 22:55:15', '{}');
INSERT INTO `timeline` VALUES ('1537', '1', '45', '2017-11-05 22:55:15', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1538', '1', '49', '2017-11-05 22:55:21', '{\"_method\":[\"put\"],\"_token\":[\"52220481559663\"],\"id\":[\"51\"],\"name\":[\"测试111111\"],\"url\":[\"11111111111\"],\"method\":[\"GET\"],\"type\":[\"api\"],\"flag\":[\"\"],\"menuImg\":[\"\"],\"menuOrder\":[\"\"],\"menuParentId\":[\"\"]}');
INSERT INTO `timeline` VALUES ('1539', '1', '45', '2017-11-05 22:55:21', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1540', '1', '37', '2017-11-05 22:55:28', '{}');
INSERT INTO `timeline` VALUES ('1541', '1', '46', '2017-11-05 22:55:28', '{}');
INSERT INTO `timeline` VALUES ('1542', '1', '46', '2017-11-05 22:55:28', '{}');
INSERT INTO `timeline` VALUES ('1543', '1', '42', '2017-11-05 22:55:32', '{\"_method\":[\"put\"],\"_token\":[\"52220481559663\"],\"id\":[\"1\"],\"name\":[\"开发者\"],\"introduction\":[\"拥有所有权限\"],\"pids\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\"]}');
INSERT INTO `timeline` VALUES ('1544', '1', '38', '2017-11-05 22:55:32', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1545', '1', '44', '2017-11-05 22:55:35', '{}');
INSERT INTO `timeline` VALUES ('1546', '1', '45', '2017-11-05 22:55:35', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1547', '1', '50', '2017-11-05 22:55:39', '{\"id\":[\"51\"]}');
INSERT INTO `timeline` VALUES ('1548', '1', '45', '2017-11-05 22:55:39', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1549', '1', '37', '2017-11-05 22:55:40', '{}');
INSERT INTO `timeline` VALUES ('1550', '1', '46', '2017-11-05 22:55:40', '{}');
INSERT INTO `timeline` VALUES ('1551', '1', '46', '2017-11-05 22:55:40', '{}');
INSERT INTO `timeline` VALUES ('1552', '1', '36', '2017-11-05 22:55:42', '{}');
INSERT INTO `timeline` VALUES ('1553', '1', '40', '2017-11-05 22:55:42', '{}');
INSERT INTO `timeline` VALUES ('1554', '1', '40', '2017-11-05 22:55:42', '{}');
INSERT INTO `timeline` VALUES ('1555', '1', '37', '2017-11-05 22:55:44', '{}');
INSERT INTO `timeline` VALUES ('1556', '1', '46', '2017-11-05 22:55:44', '{}');
INSERT INTO `timeline` VALUES ('1557', '1', '46', '2017-11-05 22:55:44', '{}');
INSERT INTO `timeline` VALUES ('1558', '1', '42', '2017-11-05 22:55:49', '{\"_method\":[\"put\"],\"_token\":[\"52220481559663\"],\"id\":[\"1\"],\"name\":[\"开发者\"],\"introduction\":[\"拥有所有权限\"],\"pids\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\"]}');
INSERT INTO `timeline` VALUES ('1559', '1', '38', '2017-11-05 22:55:49', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1560', '1', '37', '2017-11-05 22:55:50', '{}');
INSERT INTO `timeline` VALUES ('1561', '1', '46', '2017-11-05 22:55:50', '{}');
INSERT INTO `timeline` VALUES ('1562', '1', '46', '2017-11-05 22:55:50', '{}');
INSERT INTO `timeline` VALUES ('1563', '1', '43', '2017-11-05 22:56:02', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1564', '1', '44', '2017-11-05 22:56:05', '{}');
INSERT INTO `timeline` VALUES ('1565', '1', '45', '2017-11-05 22:56:05', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1566', '1', '44', '2017-11-06 11:08:13', '{}');
INSERT INTO `timeline` VALUES ('1567', '1', '45', '2017-11-06 11:08:15', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1568', '1', '36', '2017-11-06 11:08:41', '{}');
INSERT INTO `timeline` VALUES ('1569', '1', '40', '2017-11-06 11:08:42', '{}');
INSERT INTO `timeline` VALUES ('1570', '1', '40', '2017-11-06 11:08:42', '{}');
INSERT INTO `timeline` VALUES ('1571', '1', '2', '2017-11-06 11:08:47', '{}');
INSERT INTO `timeline` VALUES ('1572', '1', '5', '2017-11-06 11:08:47', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1573', '1', '21', '2017-11-06 11:08:48', '{}');
INSERT INTO `timeline` VALUES ('1574', '1', '10', '2017-11-06 11:08:48', '{}');
INSERT INTO `timeline` VALUES ('1575', '1', '22', '2017-11-06 11:08:50', '{}');
INSERT INTO `timeline` VALUES ('1576', '1', '36', '2017-11-06 11:08:51', '{}');
INSERT INTO `timeline` VALUES ('1577', '1', '40', '2017-11-06 11:08:52', '{}');
INSERT INTO `timeline` VALUES ('1578', '1', '40', '2017-11-06 11:08:52', '{}');
INSERT INTO `timeline` VALUES ('1579', '1', '36', '2017-11-06 11:08:59', '{}');
INSERT INTO `timeline` VALUES ('1580', '1', '40', '2017-11-06 11:08:59', '{}');
INSERT INTO `timeline` VALUES ('1581', '1', '40', '2017-11-06 11:08:59', '{}');
INSERT INTO `timeline` VALUES ('1582', '1', '44', '2017-11-06 11:09:57', '{}');
INSERT INTO `timeline` VALUES ('1583', '1', '45', '2017-11-06 11:09:57', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1584', '1', '44', '2017-11-06 11:12:22', '{}');
INSERT INTO `timeline` VALUES ('1585', '1', '45', '2017-11-06 11:12:22', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1586', '1', '37', '2017-11-06 11:12:32', '{}');
INSERT INTO `timeline` VALUES ('1587', '1', '38', '2017-11-06 11:12:33', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1588', '1', '38', '2017-11-06 11:12:33', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1589', '1', '43', '2017-11-06 11:12:36', '{\"id\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1590', '1', '37', '2017-11-06 11:12:40', '{}');
INSERT INTO `timeline` VALUES ('1591', '1', '46', '2017-11-06 11:12:40', '{}');
INSERT INTO `timeline` VALUES ('1592', '1', '46', '2017-11-06 11:12:40', '{}');
INSERT INTO `timeline` VALUES ('1593', '1', '36', '2017-11-06 11:12:41', '{}');
INSERT INTO `timeline` VALUES ('1594', '1', '40', '2017-11-06 11:12:41', '{}');
INSERT INTO `timeline` VALUES ('1595', '1', '40', '2017-11-06 11:12:41', '{}');
INSERT INTO `timeline` VALUES ('1596', '1', '22', '2017-11-06 11:12:48', '{}');
INSERT INTO `timeline` VALUES ('1597', '1', '36', '2017-11-06 11:12:50', '{}');
INSERT INTO `timeline` VALUES ('1598', '1', '40', '2017-11-06 11:12:50', '{}');
INSERT INTO `timeline` VALUES ('1599', '1', '40', '2017-11-06 11:12:50', '{}');
INSERT INTO `timeline` VALUES ('1600', '1', '44', '2017-11-06 11:12:52', '{}');
INSERT INTO `timeline` VALUES ('1601', '1', '45', '2017-11-06 11:12:52', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1602', '1', '44', '2017-11-06 11:12:55', '{}');
INSERT INTO `timeline` VALUES ('1603', '1', '45', '2017-11-06 11:12:56', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1604', '1', '37', '2017-11-06 11:13:46', '{}');
INSERT INTO `timeline` VALUES ('1605', '1', '46', '2017-11-06 11:13:46', '{}');
INSERT INTO `timeline` VALUES ('1606', '1', '46', '2017-11-06 11:13:46', '{}');
INSERT INTO `timeline` VALUES ('1607', '1', '44', '2017-11-06 11:14:03', '{}');
INSERT INTO `timeline` VALUES ('1608', '1', '45', '2017-11-06 11:14:03', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1609', '1', '30', '2017-11-06 11:14:19', '{\"bId\":[\"5\"]}');
INSERT INTO `timeline` VALUES ('1610', '1', '31', '2017-11-06 11:14:19', '{\"int1\":[\"5\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1611', '3', '2', '2017-11-06 11:15:21', '{}');
INSERT INTO `timeline` VALUES ('1612', '3', '5', '2017-11-06 11:15:21', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1613', '3', '2', '2017-11-06 11:15:23', '{}');
INSERT INTO `timeline` VALUES ('1614', '3', '5', '2017-11-06 11:15:23', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1615', '3', '21', '2017-11-06 11:15:25', '{}');
INSERT INTO `timeline` VALUES ('1616', '3', '10', '2017-11-06 11:15:25', '{}');
INSERT INTO `timeline` VALUES ('1617', '3', '1', '2017-11-06 11:16:02', '{}');
INSERT INTO `timeline` VALUES ('1618', '3', '10', '2017-11-06 11:16:02', '{}');
INSERT INTO `timeline` VALUES ('1619', '3', '2', '2017-11-06 11:16:31', '{}');
INSERT INTO `timeline` VALUES ('1620', '3', '5', '2017-11-06 11:16:31', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1621', '3', '7', '2017-11-06 11:17:18', '{\"_method\":[\"post\"],\"_token\":[\"61114312687090\"],\"id\":[\"\"],\"name\":[\"分类1\"],\"blOrder\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('1622', '3', '5', '2017-11-06 11:17:18', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1623', '3', '1', '2017-11-06 11:17:32', '{}');
INSERT INTO `timeline` VALUES ('1624', '3', '10', '2017-11-06 11:17:32', '{}');
INSERT INTO `timeline` VALUES ('1625', '3', '13', '2017-11-06 11:17:46', '{\"title\":[\"来来来，测试一篇\"],\"content\":[\"来来来，测试一篇\"],\"summary\":[\"来来来，测试一篇\"],\"blIds\":[\"[\\\"6\\\"]\"],\"ishide\":[\"0\"]}');
INSERT INTO `timeline` VALUES ('1626', '3', '22', '2017-11-06 11:17:52', '{}');
INSERT INTO `timeline` VALUES ('1627', '1', '36', '2017-11-06 11:18:03', '{}');
INSERT INTO `timeline` VALUES ('1628', '1', '40', '2017-11-06 11:18:03', '{}');
INSERT INTO `timeline` VALUES ('1629', '1', '40', '2017-11-06 11:18:03', '{}');
INSERT INTO `timeline` VALUES ('1630', '1', '26', '2017-11-06 11:18:17', '{\"_method\":[\"put\"],\"_token\":[\"6111803386715\"],\"id\":[\"3\"],\"usernum\":[\"15817383353\"],\"userpass\":[\"123456\"],\"name\":[\"张顺小号1\"],\"mail\":[\"\"],\"phone\":[\"15817383353\"],\"isdelete\":[\"0\"],\"rids\":[\"3\"]}');
INSERT INTO `timeline` VALUES ('1631', '1', '23', '2017-11-06 11:18:17', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1632', '1', '30', '2017-11-06 11:18:24', '{\"bId\":[\"11\"]}');
INSERT INTO `timeline` VALUES ('1633', '1', '31', '2017-11-06 11:18:24', '{\"int1\":[\"11\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1634', '1', '30', '2017-11-06 11:18:30', '{\"bId\":[\"11\"]}');
INSERT INTO `timeline` VALUES ('1635', '1', '31', '2017-11-06 11:18:30', '{\"int1\":[\"11\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1636', '1', '30', '2017-11-06 11:18:49', '{\"bId\":[\"11\"]}');
INSERT INTO `timeline` VALUES ('1637', '1', '31', '2017-11-06 11:18:49', '{\"int1\":[\"11\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1638', '3', '2', '2017-11-06 13:13:00', '{}');
INSERT INTO `timeline` VALUES ('1639', '3', '5', '2017-11-06 13:13:00', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1640', '3', '21', '2017-11-06 13:13:02', '{}');
INSERT INTO `timeline` VALUES ('1641', '3', '10', '2017-11-06 13:13:02', '{}');
INSERT INTO `timeline` VALUES ('1642', '1', '36', '2017-11-06 13:13:42', '{}');
INSERT INTO `timeline` VALUES ('1643', '1', '40', '2017-11-06 13:13:43', '{}');
INSERT INTO `timeline` VALUES ('1644', '1', '40', '2017-11-06 13:13:43', '{}');
INSERT INTO `timeline` VALUES ('1645', '1', '26', '2017-11-06 13:14:04', '{\"_method\":[\"put\"],\"_token\":[\"61313403751360\"],\"id\":[\"4\"],\"usernum\":[\"1217360619@qq.com\"],\"userpass\":[\"123456\"],\"name\":[\"张顺邮箱用户\"],\"mail\":[\"1217360619@qq.com\"],\"phone\":[\"\"],\"isdelete\":[\"0\"],\"rids\":[\"1\",\"2\",\"3\"]}');
INSERT INTO `timeline` VALUES ('1646', '1', '23', '2017-11-06 13:14:04', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1647', '4', '1', '2017-11-06 13:14:17', '{}');
INSERT INTO `timeline` VALUES ('1648', '4', '10', '2017-11-06 13:14:17', '{}');
INSERT INTO `timeline` VALUES ('1649', '4', '2', '2017-11-06 13:36:06', '{}');
INSERT INTO `timeline` VALUES ('1650', '4', '5', '2017-11-06 13:36:06', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1651', '4', '7', '2017-11-06 13:36:18', '{\"_method\":[\"post\"],\"_token\":[\"61314131823540\"],\"id\":[\"\"],\"name\":[\"转发\"],\"blOrder\":[\"1\"]}');
INSERT INTO `timeline` VALUES ('1652', '4', '5', '2017-11-06 13:36:18', '{\"page\":[\"1\"],\"rows\":[\"100\"]}');
INSERT INTO `timeline` VALUES ('1653', '4', '1', '2017-11-06 13:36:23', '{}');
INSERT INTO `timeline` VALUES ('1654', '4', '10', '2017-11-06 13:36:23', '{}');
INSERT INTO `timeline` VALUES ('1655', '4', '13', '2017-11-06 13:58:03', '{\"title\":[\"大圣魔方——美团点评酒旅BI报表工具平台开发实践\"],\"content\":[\"\\u003ch1 id\\u003d\\\"-\\\"\\u003e背景\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e当前的互联网数据仓库系统里，数据中心往往存放了大量Cube化或者半Cube化的数据。如果需要将这些数据的内在关系体现出来，需要写大量的程序和SQL来发现数据之间的内在规律，往往会造成用户做非常多的重复性工作；而且由于没有数据校验的机制，还容易出错，无法直观查看各种数据（没有可视化的UI图表）。这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e难点\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e一款好的BI报表工具，需要考虑并能够解决如下问题：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e统一数据源\\u003c/li\\u003e\\r\\n\\u003cli\\u003eSQL生成\\u003c/li\\u003e\\r\\n\\u003cli\\u003e跨数据源数据聚合\\u003c/li\\u003e\\r\\n\\u003cli\\u003e自定义计算指标\\u003c/li\\u003e\\r\\n\\u003cli\\u003e数据权限\\u003c/li\\u003e\\r\\n\\u003cli\\u003e标准化UI组件，自助生成可视化报表\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e解决方案——大圣魔方\\u003c/h1\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e体系架构\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/arch.png\\\" alt\\u003d\\\"arch\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:300px\\\"\\u003e\\u003c/span\\u003e图1 大圣魔方体系架构\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e具体方案\\u003c/h2\\u003e\\r\\n\\u003ch3 id\\u003d\\\"1-\\\"\\u003e1. 统一数据源\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e提供多数据源查询服务，需要解决的问题主要是两个：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e以什么样的统一方式从数据源获取数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e不是所有的数据源引擎都能提供OLAP服务和数据聚合的能力，我们需要从上层考虑，去实现数据的聚合、上卷、下钻、切割、自定义计算等功能。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/multiple_datasource.png\\\" alt\\u003d\\\"data source\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:150px\\\"\\u003e\\u003c/span\\u003e图2 大圣魔方多数据源\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方上对能够通过SQL查询的数据源，例如MySQL和Kylin都通过统一SQL查询来获取数据；对于ES（Elasticsearch）采用ES提供的API来查询；对于普通文本格式的数据采用自定义API从数据源获取数据。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e如图2所示，大圣魔方只是从数据源里面获取基础的数据，之后通过实现自己的计算引擎对数据进行聚合、切割等操作，对此，魔方中设置了四个引擎，用于实现不同的功能。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"2-sql-\\\"\\u003e2. SQL生成\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e对于SQL的生成也存在两个问题：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e不是所有的支持SQL的数据源，都支持标准的SQL，同时，支持标准SQL的数据源也会支持带有自身特征的SQL。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e根据用户选择的条件、维度和指标，动态生成SQL的核心内容。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e针对第一个问题，我们对SQL模板进行了定义，当选择不同的数据源时，根据数据源的Dialect选择不同的SQL模板，而这就决定了SQL的组成部分（骨架）。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e为了解决第二个问题，我们在SQL模板的基础之上做了内容填充和替换操作，选择具体的维度、指标和筛选项的值，再填充到SQL模板的不同地方，最终就会生成能够被数据源执行的SQL。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e在SQL生成的时候也考虑过其它的框架，如Apache Calcite Avatica、Alibaba的Druid，但是最终都放弃了，原因也是基于两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e这些框架庞大且功能多，适用于我们场景的SQL生成的部分API使用起来过于复杂。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e大都是基于标准的ANSI SQL-92，很难个性化地生成我们所需要的SQL。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e最终，我们采用了SQL模板和字符串填充替换操作来完成。为此我们在Java的正则表达式基础之上做了一个功能很多的字符串操作类库。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"3-\\\"\\u003e3. 跨数据源数据聚合\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e一般情况下，同一个数据源的大部分数据源引擎都能够支持多表的join操作，但是也存在不支持的，例如老版本的Kylin就不支持多Cube的join操作，还有一个更重要的问题是数据源引擎无法解决跨数据源的数据聚合问题，必须要自己实现数据的聚合操作，一般的情况下需要自己去实现inner join、left outer join和full outer join的逻辑。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方实现了inner join和left outer join两个逻辑，因为full outer join的需求场景不是很多，所以没有实现。下面是大圣魔方的实现代码：\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"inner-join-\\\"\\u003einner join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003ejoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003ethis\\u003c/span\\u003e.cubeJoin\\u003d\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ethrow\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e java.lang.IllegalArgumentException(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"left join call leftJoin method,not call join method\\\"\\u003c/span\\u003e);\\r\\n        }\\r\\n\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e].get(rowsStatus[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        join(contents,sharedList,n+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e,rowsStatus,result);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上述代码就是通过回溯算法实现inner join的核心逻辑，具体解析如下：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003econtents参数表示每个数据源里面的结果集。\\u003c/li\\u003e\\r\\n\\u003cli\\u003esharedList表示关联的字段。\\u003c/li\\u003e\\r\\n\\u003cli\\u003en和rowsStatus是回溯算法记录状态用的。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eresult里面包含的是符合join条件的记录。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eMatchRow里面记录的是一个数据源里面的某一行与其余的数据源里面的那一行是相等的，记录的是下标号。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cp\\u003e只有当sharedList里面的每个字段都相等的时候，两条记录才满足inner join的条件。这个算法是一个通用算法，因为是通过回溯算法实现的，所以要join的数据源理论上可以有无限个。\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"left-outer-join-\\\"\\u003eleft outer join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\r\\n\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eleftJoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    \\u003cspan class\\u003d\\\"comment\\\"\\u003e//in left join,compare with the first dataset.\\u003c/span\\u003e\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e].get(rowsStatus[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        \\u003cspan class\\u003d\\\"comment\\\"\\u003e//if next dataset is not match,use the next\\u0027s next...\\u003c/span\\u003e\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e loopFlag\\u003dn+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;loopFlag\\u0026lt;rowsStatus.length;loopFlag++){\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e match \\u003d leftJoin(contents,sharedList,loopFlag,rowsStatus,result);\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(match){\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                            }\\r\\n                            rowsStatus[loopFlag]\\u003d-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(loopFlag\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n                                MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                                List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                                    MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                                    dr.setDatasetIndex(i);\\r\\n                                    dr.setRowIndex(rowsStatus[i]);\\r\\n                                    tmp.add(dr);\\r\\n                                }\\r\\n                                mr.addMatchRow(tmp);\\r\\n                                result.add(mr);\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n        }\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003ereturn\\u003c/span\\u003e leftJoinMatch;\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上面的代码是left outer join的实现逻辑，同样也是用的回溯算法，它与inner join有2个不同之处：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003eleft outer join的数据源匹配逻辑是当第一个数据源与第二个数据源没有匹配的时候，会继续与第三个数据源进行匹配操作，原因是数据源的顺序导致了不匹配，继续往下匹配就可以避免这个问题。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e行与行做相等操作的时候，右边没有匹配行的时候，左边的行继续保留，这个是left outer join的逻辑决定的。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"4-\\\"\\u003e4. 自定义计算指标\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e使用自定义计算的原因，主要是基于下面的两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e数据源引擎不支持数据的混合运算或有特殊逻辑的数据处理。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e结果数据跨数据源。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e对此，我们对大圣魔方做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e通过Java里面的ScriptEngine进行封装来实现数据列的混合运算，不需要自己再去写编译程序解析。对于特殊的数据处理，例如同环比这样的特殊指标，需要单独定义接口，让实现类继承改特定接口，实现类是一个特殊的指标，它需要进行多次数据查询，将最终的结果通过ScriptEngine进行运算。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e第二个问题是在上文中“跨数据源数据聚合”的基础上实现的，数据聚合后通过ScriptEngine做最后的处理。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"5-\\\"\\u003e5. 数据权限的问题\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e只要是有数据展示，数据权限问题就无法避免，权限主要是分为报表的可查看权限和维度、指标权限。权限遇到的最主要的问题是构成权限矩阵的数据量太大，参与者有用户和组织，权限的实体有维度和指标，这样大的数据维护起来的成本很高；其次是权限数据配置会占用很多的人力。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e对此，我们做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e使用UPM控制报表的可查看权限。公司推荐使用UPM来控制权限，不过UPM也具有一定的局限性，即只能够判断用户或者组织是否满足某个权限，而不能满足获取部分权限数据的需求，例如某个用户对某个权限只拥有一部分权限，那他就无法提供具体数据。但是UPM可以提供是否的权限，所以报表的可查看权限可以使用UPM来控制，这样可以节约大量的工作。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e使用默认任何人都有权限的机制。通过使用默认有权限的这个机制可以大大减少权限数据。需要鉴权的那些维度和指标采用默认无权限的机制，这样两种方案结合，可以最大限度地减少权限数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e通过走审批流机制自助申请。通过审批流机制可以让用户走自助申请，大大节约权限数据的维护人力成本。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"6-ui-\\\"\\u003e6. 标准化UI组件，自助生成可视化报表\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e报表上展示数据需要有各种各样的图表，没法为用户只做一个统一的报表，这个时候需要用户能够创建自己想要的报表，这时需要提供一个标准的组件库、布局库和一些常用的模板。用户选择好想要的模板，然后选择布局对报表页面进行布局，接着在每个布局里面填充不同的组件，这样就可以构建一张报表了，也就是我们常说的所见即所得的方式。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方就是采用上述的机制提供了一套可视化报表编辑工具。使用它可以快速地创建一个报表，管理人员只需要维护对应的组件、布局和模板就行了。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e总结\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e上述几点就是大圣魔方的一个总纲，其中大部分功能已经实现了，还有一小部分处于开发之中（标准化UI组件、自助生成可视化报表）。目前大圣魔方已经上线将近一年了，支持了内部众多业务，后续我们还会在UI易用性、星型模型、配置简化、元数据同步等方面做一些提高。\\u003c/p\\u003e\"],\"summary\":[\"这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。\"],\"blIds\":[\"[\\\"7\\\"]\"],\"ishide\":[\"0\"]}');
INSERT INTO `timeline` VALUES ('1656', '4', '22', '2017-11-06 14:06:56', '{}');
INSERT INTO `timeline` VALUES ('1657', '4', '21', '2017-11-06 14:06:57', '{}');
INSERT INTO `timeline` VALUES ('1658', '4', '10', '2017-11-06 14:06:57', '{}');
INSERT INTO `timeline` VALUES ('1659', '4', '1', '2017-11-06 14:06:59', '{\"id\":[\"12\"]}');
INSERT INTO `timeline` VALUES ('1660', '4', '14', '2017-11-06 14:07:07', '{\"title\":[\"大圣魔方——美团点评酒旅BI报表工具平台开发实践\"],\"content\":[\"\\u003ch1 id\\u003d\\\"-\\\"\\u003e背景\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e当前的互联网数据仓库系统里，数据中心往往存放了大量Cube化或者半Cube化的数据。如果需要将这些数据的内在关系体现出来，需要写大量的程序和SQL来发现数据之间的内在规律，往往会造成用户做非常多的重复性工作；而且由于没有数据校验的机制，还容易出错，无法直观查看各种数据（没有可视化的UI图表）。这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e难点\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e一款好的BI报表工具，需要考虑并能够解决如下问题：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e统一数据源\\u003c/li\\u003e\\r\\n\\u003cli\\u003eSQL生成\\u003c/li\\u003e\\r\\n\\u003cli\\u003e跨数据源数据聚合\\u003c/li\\u003e\\r\\n\\u003cli\\u003e自定义计算指标\\u003c/li\\u003e\\r\\n\\u003cli\\u003e数据权限\\u003c/li\\u003e\\r\\n\\u003cli\\u003e标准化UI组件，自助生成可视化报表\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e解决方案——大圣魔方\\u003c/h1\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e体系架构\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/arch.png\\\" alt\\u003d\\\"arch\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:300px\\\"\\u003e\\u003c/span\\u003e图1 大圣魔方体系架构\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e具体方案\\u003c/h2\\u003e\\r\\n\\u003ch3 id\\u003d\\\"1-\\\"\\u003e1. 统一数据源\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e提供多数据源查询服务，需要解决的问题主要是两个：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e以什么样的统一方式从数据源获取数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e不是所有的数据源引擎都能提供OLAP服务和数据聚合的能力，我们需要从上层考虑，去实现数据的聚合、上卷、下钻、切割、自定义计算等功能。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/multiple_datasource.png\\\" alt\\u003d\\\"data source\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:150px\\\"\\u003e\\u003c/span\\u003e图2 大圣魔方多数据源\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方上对能够通过SQL查询的数据源，例如MySQL和Kylin都通过统一SQL查询来获取数据；对于ES（Elasticsearch）采用ES提供的API来查询；对于普通文本格式的数据采用自定义API从数据源获取数据。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e如图2所示，大圣魔方只是从数据源里面获取基础的数据，之后通过实现自己的计算引擎对数据进行聚合、切割等操作，对此，魔方中设置了四个引擎，用于实现不同的功能。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"2-sql-\\\"\\u003e2. SQL生成\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e对于SQL的生成也存在两个问题：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e不是所有的支持SQL的数据源，都支持标准的SQL，同时，支持标准SQL的数据源也会支持带有自身特征的SQL。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e根据用户选择的条件、维度和指标，动态生成SQL的核心内容。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e针对第一个问题，我们对SQL模板进行了定义，当选择不同的数据源时，根据数据源的Dialect选择不同的SQL模板，而这就决定了SQL的组成部分（骨架）。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e为了解决第二个问题，我们在SQL模板的基础之上做了内容填充和替换操作，选择具体的维度、指标和筛选项的值，再填充到SQL模板的不同地方，最终就会生成能够被数据源执行的SQL。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e在SQL生成的时候也考虑过其它的框架，如Apache Calcite Avatica、Alibaba的Druid，但是最终都放弃了，原因也是基于两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e这些框架庞大且功能多，适用于我们场景的SQL生成的部分API使用起来过于复杂。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e大都是基于标准的ANSI SQL-92，很难个性化地生成我们所需要的SQL。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e最终，我们采用了SQL模板和字符串填充替换操作来完成。为此我们在Java的正则表达式基础之上做了一个功能很多的字符串操作类库。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"3-\\\"\\u003e3. 跨数据源数据聚合\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e一般情况下，同一个数据源的大部分数据源引擎都能够支持多表的join操作，但是也存在不支持的，例如老版本的Kylin就不支持多Cube的join操作，还有一个更重要的问题是数据源引擎无法解决跨数据源的数据聚合问题，必须要自己实现数据的聚合操作，一般的情况下需要自己去实现inner join、left outer join和full outer join的逻辑。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方实现了inner join和left outer join两个逻辑，因为full outer join的需求场景不是很多，所以没有实现。下面是大圣魔方的实现代码：\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"inner-join-\\\"\\u003einner join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003ejoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003ethis\\u003c/span\\u003e.cubeJoin\\u003d\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ethrow\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e java.lang.IllegalArgumentException(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"left join call leftJoin method,not call join method\\\"\\u003c/span\\u003e);\\r\\n        }\\r\\n\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e].get(rowsStatus[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        join(contents,sharedList,n+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e,rowsStatus,result);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上述代码就是通过回溯算法实现inner join的核心逻辑，具体解析如下：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003econtents参数表示每个数据源里面的结果集。\\u003c/li\\u003e\\r\\n\\u003cli\\u003esharedList表示关联的字段。\\u003c/li\\u003e\\r\\n\\u003cli\\u003en和rowsStatus是回溯算法记录状态用的。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eresult里面包含的是符合join条件的记录。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eMatchRow里面记录的是一个数据源里面的某一行与其余的数据源里面的那一行是相等的，记录的是下标号。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cp\\u003e只有当sharedList里面的每个字段都相等的时候，两条记录才满足inner join的条件。这个算法是一个通用算法，因为是通过回溯算法实现的，所以要join的数据源理论上可以有无限个。\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"left-outer-join-\\\"\\u003eleft outer join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\r\\n\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eleftJoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    \\u003cspan class\\u003d\\\"comment\\\"\\u003e//in left join,compare with the first dataset.\\u003c/span\\u003e\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e].get(rowsStatus[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        \\u003cspan class\\u003d\\\"comment\\\"\\u003e//if next dataset is not match,use the next\\u0027s next...\\u003c/span\\u003e\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e loopFlag\\u003dn+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;loopFlag\\u0026lt;rowsStatus.length;loopFlag++){\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e match \\u003d leftJoin(contents,sharedList,loopFlag,rowsStatus,result);\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(match){\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                            }\\r\\n                            rowsStatus[loopFlag]\\u003d-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(loopFlag\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n                                MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                                List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                                    MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                                    dr.setDatasetIndex(i);\\r\\n                                    dr.setRowIndex(rowsStatus[i]);\\r\\n                                    tmp.add(dr);\\r\\n                                }\\r\\n                                mr.addMatchRow(tmp);\\r\\n                                result.add(mr);\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n        }\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003ereturn\\u003c/span\\u003e leftJoinMatch;\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上面的代码是left outer join的实现逻辑，同样也是用的回溯算法，它与inner join有2个不同之处：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003eleft outer join的数据源匹配逻辑是当第一个数据源与第二个数据源没有匹配的时候，会继续与第三个数据源进行匹配操作，原因是数据源的顺序导致了不匹配，继续往下匹配就可以避免这个问题。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e行与行做相等操作的时候，右边没有匹配行的时候，左边的行继续保留，这个是left outer join的逻辑决定的。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"4-\\\"\\u003e4. 自定义计算指标\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e使用自定义计算的原因，主要是基于下面的两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e数据源引擎不支持数据的混合运算或有特殊逻辑的数据处理。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e结果数据跨数据源。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e对此，我们对大圣魔方做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e通过Java里面的ScriptEngine进行封装来实现数据列的混合运算，不需要自己再去写编译程序解析。对于特殊的数据处理，例如同环比这样的特殊指标，需要单独定义接口，让实现类继承改特定接口，实现类是一个特殊的指标，它需要进行多次数据查询，将最终的结果通过ScriptEngine进行运算。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e第二个问题是在上文中“跨数据源数据聚合”的基础上实现的，数据聚合后通过ScriptEngine做最后的处理。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"5-\\\"\\u003e5. 数据权限的问题\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e只要是有数据展示，数据权限问题就无法避免，权限主要是分为报表的可查看权限和维度、指标权限。权限遇到的最主要的问题是构成权限矩阵的数据量太大，参与者有用户和组织，权限的实体有维度和指标，这样大的数据维护起来的成本很高；其次是权限数据配置会占用很多的人力。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e对此，我们做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e使用UPM控制报表的可查看权限。公司推荐使用UPM来控制权限，不过UPM也具有一定的局限性，即只能够判断用户或者组织是否满足某个权限，而不能满足获取部分权限数据的需求，例如某个用户对某个权限只拥有一部分权限，那他就无法提供具体数据。但是UPM可以提供是否的权限，所以报表的可查看权限可以使用UPM来控制，这样可以节约大量的工作。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e使用默认任何人都有权限的机制。通过使用默认有权限的这个机制可以大大减少权限数据。需要鉴权的那些维度和指标采用默认无权限的机制，这样两种方案结合，可以最大限度地减少权限数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e通过走审批流机制自助申请。通过审批流机制可以让用户走自助申请，大大节约权限数据的维护人力成本。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"6-ui-\\\"\\u003e6. 标准化UI组件，自助生成可视化报表\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e报表上展示数据需要有各种各样的图表，没法为用户只做一个统一的报表，这个时候需要用户能够创建自己想要的报表，这时需要提供一个标准的组件库、布局库和一些常用的模板。用户选择好想要的模板，然后选择布局对报表页面进行布局，接着在每个布局里面填充不同的组件，这样就可以构建一张报表了，也就是我们常说的所见即所得的方式。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方就是采用上述的机制提供了一套可视化报表编辑工具。使用它可以快速地创建一个报表，管理人员只需要维护对应的组件、布局和模板就行了。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e总结\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e上述几点就是大圣魔方的一个总纲，其中大部分功能已经实现了，还有一小部分处于开发之中（标准化UI组件、自助生成可视化报表）。目前大圣魔方已经上线将近一年了，支持了内部众多业务，后续我们还会在UI易用性、星型模型、配置简化、元数据同步等方面做一些提高。\\u003c/p\\u003e\"],\"summary\":[\"当前的互联网数据仓库系统里，数据中心往往存放了大量Cube化或者半Cube化的数据。如果需要将这些数据的内在关系体现出来，需要写大量的程序和SQL来发现数据之间的内在规律，往往会造成用户做非常多的重复性工作；而且由于没有数据校验的机制，还容易出错，无法直观查看各种数据（没有可视化的UI图表）。这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。\"],\"blIds\":[\"[\\\"7\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"12\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('1661', '4', '30', '2017-11-06 14:07:20', '{\"bId\":[\"12\"]}');
INSERT INTO `timeline` VALUES ('1662', '4', '31', '2017-11-06 14:07:20', '{\"int1\":[\"12\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1663', '4', '1', '2017-11-06 14:07:51', '{}');
INSERT INTO `timeline` VALUES ('1664', '4', '10', '2017-11-06 14:07:51', '{}');
INSERT INTO `timeline` VALUES ('1665', '4', '21', '2017-11-06 14:08:54', '{}');
INSERT INTO `timeline` VALUES ('1666', '4', '10', '2017-11-06 14:08:54', '{}');
INSERT INTO `timeline` VALUES ('1667', '4', '1', '2017-11-06 14:08:55', '{\"id\":[\"12\"]}');
INSERT INTO `timeline` VALUES ('1668', '4', '14', '2017-11-06 14:09:00', '{\"title\":[\"大圣魔方——美团点评酒旅BI报表工具平台开发实践\"],\"content\":[\"\\u003ch1 id\\u003d\\\"-\\\"\\u003e背景\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e当前的互联网数据仓库系统里，数据中心往往存放了大量Cube化或者半Cube化的数据。如果需要将这些数据的内在关系体现出来，需要写大量的程序和SQL来发现数据之间的内在规律，往往会造成用户做非常多的重复性工作；而且由于没有数据校验的机制，还容易出错，无法直观查看各种数据（没有可视化的UI图表）。这时就急需一款基于Cube的报表工具快速为用户提供报表服务，可以完成多维查询、上卷、下钻等各种功能。为此，美团点评酒旅技术团队开发了大圣魔方。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e难点\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e一款好的BI报表工具，需要考虑并能够解决如下问题：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e统一数据源\\u003c/li\\u003e\\r\\n\\u003cli\\u003eSQL生成\\u003c/li\\u003e\\r\\n\\u003cli\\u003e跨数据源数据聚合\\u003c/li\\u003e\\r\\n\\u003cli\\u003e自定义计算指标\\u003c/li\\u003e\\r\\n\\u003cli\\u003e数据权限\\u003c/li\\u003e\\r\\n\\u003cli\\u003e标准化UI组件，自助生成可视化报表\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e解决方案——大圣魔方\\u003c/h1\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e体系架构\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/arch.png\\\" alt\\u003d\\\"arch\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:300px\\\"\\u003e\\u003c/span\\u003e图1 大圣魔方体系架构\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-\\\"\\u003e具体方案\\u003c/h2\\u003e\\r\\n\\u003ch3 id\\u003d\\\"1-\\\"\\u003e1. 统一数据源\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e提供多数据源查询服务，需要解决的问题主要是两个：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e以什么样的统一方式从数据源获取数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e不是所有的数据源引擎都能提供OLAP服务和数据聚合的能力，我们需要从上层考虑，去实现数据的聚合、上卷、下钻、切割、自定义计算等功能。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e\\u003cimg src\\u003d\\\"img/dsmf/multiple_datasource.png\\\" alt\\u003d\\\"data source\\\"\\u003e\\u003cbr\\u003e\\u003cspan style\\u003d\\\"margin-left:150px\\\"\\u003e\\u003c/span\\u003e图2 大圣魔方多数据源\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方上对能够通过SQL查询的数据源，例如MySQL和Kylin都通过统一SQL查询来获取数据；对于ES（Elasticsearch）采用ES提供的API来查询；对于普通文本格式的数据采用自定义API从数据源获取数据。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e如图2所示，大圣魔方只是从数据源里面获取基础的数据，之后通过实现自己的计算引擎对数据进行聚合、切割等操作，对此，魔方中设置了四个引擎，用于实现不同的功能。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"2-sql-\\\"\\u003e2. SQL生成\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e对于SQL的生成也存在两个问题：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e不是所有的支持SQL的数据源，都支持标准的SQL，同时，支持标准SQL的数据源也会支持带有自身特征的SQL。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e根据用户选择的条件、维度和指标，动态生成SQL的核心内容。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e针对第一个问题，我们对SQL模板进行了定义，当选择不同的数据源时，根据数据源的Dialect选择不同的SQL模板，而这就决定了SQL的组成部分（骨架）。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e为了解决第二个问题，我们在SQL模板的基础之上做了内容填充和替换操作，选择具体的维度、指标和筛选项的值，再填充到SQL模板的不同地方，最终就会生成能够被数据源执行的SQL。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e在SQL生成的时候也考虑过其它的框架，如Apache Calcite Avatica、Alibaba的Druid，但是最终都放弃了，原因也是基于两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e这些框架庞大且功能多，适用于我们场景的SQL生成的部分API使用起来过于复杂。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e大都是基于标准的ANSI SQL-92，很难个性化地生成我们所需要的SQL。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e最终，我们采用了SQL模板和字符串填充替换操作来完成。为此我们在Java的正则表达式基础之上做了一个功能很多的字符串操作类库。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"3-\\\"\\u003e3. 跨数据源数据聚合\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e一般情况下，同一个数据源的大部分数据源引擎都能够支持多表的join操作，但是也存在不支持的，例如老版本的Kylin就不支持多Cube的join操作，还有一个更重要的问题是数据源引擎无法解决跨数据源的数据聚合问题，必须要自己实现数据的聚合操作，一般的情况下需要自己去实现inner join、left outer join和full outer join的逻辑。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方实现了inner join和left outer join两个逻辑，因为full outer join的需求场景不是很多，所以没有实现。下面是大圣魔方的实现代码：\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"inner-join-\\\"\\u003einner join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003evoid\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003ejoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003ethis\\u003c/span\\u003e.cubeJoin\\u003d\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ethrow\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e java.lang.IllegalArgumentException(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"left join call leftJoin method,not call join method\\\"\\u003c/span\\u003e);\\r\\n        }\\r\\n\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e].get(rowsStatus[n - \\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        join(contents,sharedList,n+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e,rowsStatus,result);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上述代码就是通过回溯算法实现inner join的核心逻辑，具体解析如下：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003econtents参数表示每个数据源里面的结果集。\\u003c/li\\u003e\\r\\n\\u003cli\\u003esharedList表示关联的字段。\\u003c/li\\u003e\\r\\n\\u003cli\\u003en和rowsStatus是回溯算法记录状态用的。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eresult里面包含的是符合join条件的记录。\\u003c/li\\u003e\\r\\n\\u003cli\\u003eMatchRow里面记录的是一个数据源里面的某一行与其余的数据源里面的那一行是相等的，记录的是下标号。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003cp\\u003e只有当sharedList里面的每个字段都相等的时候，两条记录才满足inner join的条件。这个算法是一个通用算法，因为是通过回溯算法实现的，所以要join的数据源理论上可以有无限个。\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"left-outer-join-\\\"\\u003eleft outer join核心代码\\u003c/h4\\u003e\\r\\n\\u003cpre\\u003e\\u003ccode class\\u003d\\\"java\\\"\\u003e\\r\\n\\u003cspan class\\u003d\\\"function\\\"\\u003e\\u003cspan class\\u003d\\\"keyword\\\"\\u003eprivate\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e \\u003cspan class\\u003d\\\"title\\\"\\u003eleftJoin\\u003c/span\\u003e\\u003cspan class\\u003d\\\"params\\\"\\u003e(List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt;[] contents,List\\u0026lt;Project\\u0026gt; sharedList,\\u003cspan class\\u003d\\\"keyword\\\"\\u003efinal\\u003c/span\\u003e \\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e n,\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e[] rowsStatus,LinkedList\\u0026lt;MatchRow\\u0026gt; result)\\u003c/span\\u003e\\u003c/span\\u003e{\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u0026lt;contents.length){\\r\\n            List\\u0026lt;Map\\u0026lt;String,String\\u0026gt;\\u0026gt; list \\u003d contents[n];\\r\\n\\r\\n            \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e k\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;k\\u0026lt;list.size();k++) {\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n!\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e) {\\r\\n                    \\u003cspan class\\u003d\\\"comment\\\"\\u003e//in left join,compare with the first dataset.\\u003c/span\\u003e\\r\\n                    Map\\u0026lt;String, String\\u0026gt; prev \\u003d contents[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e].get(rowsStatus[\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e]);\\r\\n                    Map\\u0026lt;String, String\\u0026gt; cur \\u003d list.get(k);\\r\\n\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e (Project proj : sharedList) {\\r\\n                        String key \\u003d proj.fieldName.toUpperCase();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (key.matches(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"^\\\\\\\\d+$\\\"\\u003c/span\\u003e) || key.equals(\\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"*\\\"\\u003c/span\\u003e)) {\\r\\n                            key \\u003d \\u003cspan class\\u003d\\\"string\\\"\\u003e\\\"_\\\"\\u003c/span\\u003e;\\r\\n                        }\\r\\n                        key \\u003d proj.isCompanion() ? key + proj.getFactId() : key;\\r\\n                        String prevValue \\u003d prev.get(key);\\r\\n                        String curValue \\u003d cur.get(key);\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d curValue) {\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003econtinue\\u003c/span\\u003e;\\r\\n                        }\\r\\n\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (prevValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || curValue \\u003d\\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enull\\u003c/span\\u003e || !prevValue.equals(curValue)) {\\r\\n                            equal \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003efalse\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e (equal) {\\r\\n                    leftJoinMatch \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003etrue\\u003c/span\\u003e;\\r\\n                    rowsStatus[n] \\u003d k;\\r\\n                    \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(n\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\u003cspan class\\u003d\\\"comment\\\"\\u003e//last dataset match\\u003c/span\\u003e\\r\\n                        MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                        List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                            MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                            dr.setDatasetIndex(i);\\r\\n                            dr.setRowIndex(rowsStatus[i]);\\r\\n                            tmp.add(dr);\\r\\n                        }\\r\\n                        mr.addMatchRow(tmp);\\r\\n                        result.add(mr);\\r\\n                    }\\u003cspan class\\u003d\\\"keyword\\\"\\u003eelse\\u003c/span\\u003e{\\r\\n                        \\u003cspan class\\u003d\\\"comment\\\"\\u003e//if next dataset is not match,use the next\\u0027s next...\\u003c/span\\u003e\\r\\n                        \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e loopFlag\\u003dn+\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;loopFlag\\u0026lt;rowsStatus.length;loopFlag++){\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eboolean\\u003c/span\\u003e match \\u003d leftJoin(contents,sharedList,loopFlag,rowsStatus,result);\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(match){\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003ebreak\\u003c/span\\u003e;\\r\\n                            }\\r\\n                            rowsStatus[loopFlag]\\u003d-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e;\\r\\n                            \\u003cspan class\\u003d\\\"keyword\\\"\\u003eif\\u003c/span\\u003e(loopFlag\\u003d\\u003dcontents.length-\\u003cspan class\\u003d\\\"number\\\"\\u003e1\\u003c/span\\u003e){\\r\\n                                MatchRow mr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow();\\r\\n\\r\\n                                List\\u0026lt;MatchRow.DatasetRow\\u0026gt; tmp \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e ArrayList\\u0026lt;\\u0026gt;();\\r\\n                                \\u003cspan class\\u003d\\\"keyword\\\"\\u003efor\\u003c/span\\u003e(\\u003cspan class\\u003d\\\"keyword\\\"\\u003eint\\u003c/span\\u003e i\\u003d\\u003cspan class\\u003d\\\"number\\\"\\u003e0\\u003c/span\\u003e;i\\u0026lt;rowsStatus.length;i++){\\r\\n                                    MatchRow.DatasetRow dr \\u003d \\u003cspan class\\u003d\\\"keyword\\\"\\u003enew\\u003c/span\\u003e MatchRow.DatasetRow();\\r\\n                                    dr.setDatasetIndex(i);\\r\\n                                    dr.setRowIndex(rowsStatus[i]);\\r\\n                                    tmp.add(dr);\\r\\n                                }\\r\\n                                mr.addMatchRow(tmp);\\r\\n                                result.add(mr);\\r\\n                            }\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n        }\\r\\n        \\u003cspan class\\u003d\\\"keyword\\\"\\u003ereturn\\u003c/span\\u003e leftJoinMatch;\\r\\n    }\\r\\n\\u003c/code\\u003e\\u003c/pre\\u003e\\r\\n\\u003cp\\u003e上面的代码是left outer join的实现逻辑，同样也是用的回溯算法，它与inner join有2个不同之处：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003eleft outer join的数据源匹配逻辑是当第一个数据源与第二个数据源没有匹配的时候，会继续与第三个数据源进行匹配操作，原因是数据源的顺序导致了不匹配，继续往下匹配就可以避免这个问题。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e行与行做相等操作的时候，右边没有匹配行的时候，左边的行继续保留，这个是left outer join的逻辑决定的。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"4-\\\"\\u003e4. 自定义计算指标\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e使用自定义计算的原因，主要是基于下面的两个方面：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e数据源引擎不支持数据的混合运算或有特殊逻辑的数据处理。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e结果数据跨数据源。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003cp\\u003e对此，我们对大圣魔方做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e通过Java里面的ScriptEngine进行封装来实现数据列的混合运算，不需要自己再去写编译程序解析。对于特殊的数据处理，例如同环比这样的特殊指标，需要单独定义接口，让实现类继承改特定接口，实现类是一个特殊的指标，它需要进行多次数据查询，将最终的结果通过ScriptEngine进行运算。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e第二个问题是在上文中“跨数据源数据聚合”的基础上实现的，数据聚合后通过ScriptEngine做最后的处理。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"5-\\\"\\u003e5. 数据权限的问题\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e只要是有数据展示，数据权限问题就无法避免，权限主要是分为报表的可查看权限和维度、指标权限。权限遇到的最主要的问题是构成权限矩阵的数据量太大，参与者有用户和组织，权限的实体有维度和指标，这样大的数据维护起来的成本很高；其次是权限数据配置会占用很多的人力。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e对此，我们做了如下操作：\\u003c/p\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e使用UPM控制报表的可查看权限。公司推荐使用UPM来控制权限，不过UPM也具有一定的局限性，即只能够判断用户或者组织是否满足某个权限，而不能满足获取部分权限数据的需求，例如某个用户对某个权限只拥有一部分权限，那他就无法提供具体数据。但是UPM可以提供是否的权限，所以报表的可查看权限可以使用UPM来控制，这样可以节约大量的工作。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e使用默认任何人都有权限的机制。通过使用默认有权限的这个机制可以大大减少权限数据。需要鉴权的那些维度和指标采用默认无权限的机制，这样两种方案结合，可以最大限度地减少权限数据。\\u003c/li\\u003e\\r\\n\\u003cli\\u003e通过走审批流机制自助申请。通过审批流机制可以让用户走自助申请，大大节约权限数据的维护人力成本。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch3 id\\u003d\\\"6-ui-\\\"\\u003e6. 标准化UI组件，自助生成可视化报表\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e报表上展示数据需要有各种各样的图表，没法为用户只做一个统一的报表，这个时候需要用户能够创建自己想要的报表，这时需要提供一个标准的组件库、布局库和一些常用的模板。用户选择好想要的模板，然后选择布局对报表页面进行布局，接着在每个布局里面填充不同的组件，这样就可以构建一张报表了，也就是我们常说的所见即所得的方式。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e大圣魔方就是采用上述的机制提供了一套可视化报表编辑工具。使用它可以快速地创建一个报表，管理人员只需要维护对应的组件、布局和模板就行了。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e总结\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e上述几点就是大圣魔方的一个总纲，其中大部分功能已经实现了，还有一小部分处于开发之中（标准化UI组件、自助生成可视化报表）。目前大圣魔方已经上线将近一年了，支持了内部众多业务，后续我们还会在UI易用性、星型模型、配置简化、元数据同步等方面做一些提高。\\u003c/p\\u003e\"],\"summary\":[\"讲述酒旅的数据报表平台大圣魔方的设计及实现，希望为大家在数据建模规范化、数据权限统一化以及数据展现多样化上提供一些经验。\"],\"blIds\":[\"[\\\"7\\\"]\"],\"ishide\":[\"0\"],\"id\":[\"12\"],\"_method\":[\"put\"]}');
INSERT INTO `timeline` VALUES ('1669', '4', '1', '2017-11-06 14:09:12', '{}');
INSERT INTO `timeline` VALUES ('1670', '4', '10', '2017-11-06 14:09:12', '{}');
INSERT INTO `timeline` VALUES ('1671', '4', '13', '2017-11-06 14:10:40', '{\"title\":[\"互联网企业安全之端口监控\"],\"content\":[\"\\u003ch1 id\\u003d\\\"-\\\"\\u003e背景\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e外网端口监控系统是整个安全体系中非常重要的一环，它就像眼睛一样，时刻监控外网端口开放情况，并且在发现高危端口时能够及时提醒安全、运维人员做出相应处理。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e对安全人员来说，互联网公司在快速发展壮大的过程中，外网边界的管控容易出现照顾不全的现象。最初我们用Python+Nmap开发的外网端口监控系统，在公司边界扩大的过程中已经无法满足要求了，所以出现过一例因为运维人员误操作将高危端口曝露至外网导致的入侵事件，\\u003cstrong\\u003e为了避免再次出现类似由高危端口开放而不知情导致的入侵问题\\u003c/strong\\u003e，我们开始重做外网端口监控系统。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e意义\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e要理解端口监控的意义，首先需要知道什么是 \\u003cstrong\\u003e端口扫描\\u003c/strong\\u003e ，根据Wikipedia的定义：\\u003c/p\\u003e\\r\\n\\u003cblockquote\\u003e\\r\\n\\u003cp\\u003e端口扫描的定义是客户端向一定范围的服务器端口发送对应请求，以此确认可使用的端口。虽然其本身并不是恶意的网络活动，但也是网络攻击者探测目标主机服务，以利用该服务的已知漏洞的重要手段。\\u003c/p\\u003e\\r\\n\\u003c/blockquote\\u003e\\r\\n\\u003cp\\u003e对于攻击者来说，端口扫描往往是他们从外网发起攻击的第一步。而对于企业安全人员来说，\\u003cstrong\\u003e端口监控则是我们预防攻击者从外部直接入侵的一条重要防线\\u003c/strong\\u003e，它可以帮助我们：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e以攻击者视角了解企业外网端口的开放情况，看我们是否存在容易被利用导致入侵的点\\u003c/li\\u003e\\r\\n\\u003cli\\u003e赶在攻击者发现外网新开放的高危端口之前发现并修补漏洞，降低系统被从外部直接入侵的概率\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e方法\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e对企业的外网开放端口进行监控不外乎两种方法，一种是类似于黑盒审计的\\u003cstrong\\u003e外网端口扫描\\u003c/strong\\u003e，另一种是类似于白盒审计的\\u003cstrong\\u003e流量分析\\u003c/strong\\u003e。从原理上来说流量分析的方式肯定是最准确的，但这对软硬件都有一定要求，一般的公司不一定有能力做好；外网端口扫描的方式比较直接，虽然也有一些环境上的依赖，比如网络带宽，但总体上来说要比流量分析的要求小得多，大部分公司都能满足。这里我们主要介绍一下外网端口扫描的方法，另一种流量分析的方法，以后请具体负责同学给大家分享。\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-1-\\\"\\u003e方法1：外网端口扫描\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e在这里我们先简单介绍一下端口扫描的原理，以帮助各位对这块不太了解的同学有个基本的认识。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e端口状态\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e下面以最知名的端口扫描器Nmap对端口状态的划分进行一个说明：\\u003c/p\\u003e\\r\\n\\u003ctable\\u003e\\r\\n\\u003cthead\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003cth\\u003e状态\\u003c/th\\u003e\\r\\n\\u003cth style\\u003d\\\"text-align:center\\\"\\u003e说明\\u003c/th\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003c/thead\\u003e\\r\\n\\u003ctbody\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003eopen\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e有一个应用程序在监听这个端口，可以被访问\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003eclosed\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e没有应用程序在监听这个端口，但它是可达的\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003efiltered\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e在扫描器和端口之间有网络障碍，扫描器无法到达该端口，所以无法判断端口是开放还是关闭的\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003eunfiltered\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e端口可达，但是扫描器无法准确判断\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003eopen或filtered\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e扫描器无法准确判断端口到底是open还是filtered\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003eclosed或filtered\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e扫描器无法准确判断端口到底是closed还是filtered\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003c/tbody\\u003e\\r\\n\\u003c/table\\u003e\\r\\n\\u003cp\\u003e但一般情况下我们不用分的这么细，这里为了方便起见，将一个端口的状态粗略分为3种：开放、限制性开放、关闭。其中「\\u003cstrong\\u003e限制性开放\\u003c/strong\\u003e」指的就是做了访问控制，只有指定白名单列表中的主机才能访问，其它的都无法访问，可以简单认为是上面的\\u003cstrong\\u003efiltered\\u003c/strong\\u003e状态。\\u003c/p\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e扫描方式\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e\\u003cstrong\\u003eTCP SYN扫描\\u003c/strong\\u003e\\u003c/p\\u003e\\r\\n\\u003cp\\u003e我们选择TCP SYN扫描的理由：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e\\u003cstrong\\u003e执行得很快\\u003c/strong\\u003e，在一个没有防火墙限制的快速网络中，每秒钟可以扫描几千个端口；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e\\u003cstrong\\u003e相对来说比较隐蔽\\u003c/strong\\u003e，不易被注意到，因为它从来不完成TCP连接；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e\\u003cstrong\\u003e兼容性好\\u003c/strong\\u003e，不像Fin/Null/Xmas/Maimon和Idle扫描依赖于特定平台，而可以应对任何兼容的TCP协议栈；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e\\u003cstrong\\u003e明确可靠\\u003c/strong\\u003e地区分open（开放的），closed（关闭的）和filtered（被过滤的）状态。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch3 id\\u003d\\\"-\\\"\\u003e扫描原理\\u003c/h3\\u003e\\r\\n\\u003cp\\u003e对于学过计算机网络的同学来说，TCP/IP建立连接的3次握手过程想必应该不算陌生，大体流程如下：\\u003cbr\\u003e  \\u003cimg src\\u003d\\\"img/security_port_monitor/tcpip_open.png\\\" alt\\u003d\\\"\\\"\\u003e\\u003c/p\\u003e\\r\\n\\u003cp\\u003e我们这里使用的TCP SYN扫描就是通过先主动发送一个SYN报文给指定端口（\\u003cstrong\\u003e之后并不回复任何报文，不完成TCP连接\\u003c/strong\\u003e），然后根据端口的返回信息做出判断，判断结论分为以下3种：\\u003c/p\\u003e\\r\\n\\u003ctable\\u003e\\r\\n\\u003cthead\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003cth\\u003e结论\\u003c/th\\u003e\\r\\n\\u003cth style\\u003d\\\"text-align:center\\\"\\u003e原因\\u003c/th\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003c/thead\\u003e\\r\\n\\u003ctbody\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003eopen\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e返回 SYN/ACK\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003eclosed\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e返回 RST\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003ctr\\u003e\\r\\n\\u003ctd\\u003e\\u003cstrong\\u003efiltered\\u003c/strong\\u003e\\u003c/td\\u003e\\r\\n\\u003ctd style\\u003d\\\"text-align:center\\\"\\u003e数次重发后仍没响应；或者收到ICMP不可到达错误\\u003c/td\\u003e\\r\\n\\u003c/tr\\u003e\\r\\n\\u003c/tbody\\u003e\\r\\n\\u003c/table\\u003e\\r\\n\\u003cp\\u003e图例如下：\\u003cbr\\u003e  \\u003cimg src\\u003d\\\"img/security_port_monitor/tcp_scan.png\\\" alt\\u003d\\\"\\\"\\u003e\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"-2-\\\"\\u003e方法2：流量分析\\u003c/h2\\u003e\\r\\n\\u003cblockquote\\u003e\\r\\n\\u003cp\\u003e源码面前，了无秘密。\\u003c/p\\u003e\\r\\n\\u003c/blockquote\\u003e\\r\\n\\u003cp\\u003e技术同学估计对侯捷老师的这句话不会陌生，这里我想将这一句话改一改以适应我们这里的情景：\\u003c/p\\u003e\\r\\n\\u003cblockquote\\u003e\\r\\n\\u003cp\\u003e流量面前，了无秘密。\\u003c/p\\u003e\\r\\n\\u003c/blockquote\\u003e\\r\\n\\u003cp\\u003e通过流量分析，我们可以及时知道有哪些端口对外开放了，然后通过解包分析的方式获取它使用的协议以及提供的服务，对于无法准确判断的，我们可以再用外网扫描的方式进行补充判断。\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e演进过程\\u003c/h1\\u003e\\r\\n\\u003ch2 id\\u003d\\\"nmap\\\"\\u003eNmap\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e早期我们就是通过Python调用Nmap进行的扫描，但随着公司规模的不断扩大，网段的不断增加，Nmap扫描的弊端就逐渐凸现且无法弥补了——大网段全端口扫描周期太长，无法及时出结果（一个扫描周期可能长达2周），也就根本达不到外网端口监控的目的了。直到后来出现了Masscan。\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"masscan\\\"\\u003eMasscan\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e大体架构如下：\\u003cbr\\u003e  \\u003cimg src\\u003d\\\"img/security_port_monitor/arch1.png\\\" alt\\u003d\\\"\\\"\\u003e\\u003c/p\\u003e\\r\\n\\u003cp\\u003eMasscan是大网段全端口扫描神器！！！\\u003cbr\\u003e就扫描速度来说应该是现有端口扫描器中最快的，同时准确性也比较高。在确定使用Masscan之前我们拿它和Zmap、Nmap一起做了对比测试，限于篇幅，具体的测试过程就不发出来了，这里只说测试结论：用TCP SYN扫描方式，对一个小型IP段进行全端口扫描，Masscan速度最快，准确性较高，可以满足需要。\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"-\\\"\\u003e经验分享\\u003c/h4\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e扫描服务器的带宽是关键；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e扫描最好避开业务高峰期；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e扫描选项需要根据具体带宽、机器配置、扫描范围、扫描速度要求进行调优；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e只要是远程检测的方法，就存在一定的不确定性，检测结果的准确性只能接近100%，无法达到100%，所以不要完全依赖外网扫描的结果；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e实际情况中单IP的开放端口数是有限的，如果你发现扫描结果中有单个IP开放了大量端口，你就要注意该IP对应的设备是不是在「欺骗」你了；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e前期对扫描结果做一个完整的梳理，后期只需要处理新增的高危端口就行。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch2 id\\u003d\\\"masscan-nmap\\\"\\u003eMasscan+Nmap\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e在Masscan版本上线了之后，全端口扫描的速度得到了大幅提升，外网端口的开放情况也了解的比较清楚了，但是对于Banner的获取以及具体服务的识别还达不到要求，而这也不是Masscan的强项，所以这时候我们就需要借助Nmap丰富的服务指纹库来提高我们监控数据的准确性了。\\u003cbr\\u003e和之前相比，就是在Masscan全量扫描环节之后增加了一个只针对判断为开放的端口用Nmap进行增量扫描的环节，然后将结果更新至数据库方便展示、分析。大体架构如下：\\u003cbr\\u003e  \\u003cimg src\\u003d\\\"img/security_port_monitor/arch2.png\\\" alt\\u003d\\\"\\\"\\u003e\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"masscan-nmap-dpdk-storm-nmap\\\"\\u003eMasscan+Nmap \\u0026amp; DPDK+Storm+Nmap\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e外网的扫描有它的优势——以攻击者视角获取当前外网安全状态，但是因为Masscan全端口扫描再快他也是需要时间的，特别是在网段较大、带宽有限的情况下。所以单独的周期性外网扫描就存在一个天然的真空期，如果在这段真空期内，内部员工因为大意将测试端口对外，且忘了关闭的情况下，就可能会被攻击者进行利用，为了应对这种情况（即便可能性比较小），我们决定从实时流量中进行分析，实时找出对外开放的新增/异常端口，然后调用Nmap进行扫描，以解决单独外网扫描存在的真空期问题。大体架构如下：\\u003cbr\\u003e  \\u003cimg src\\u003d\\\"img/security_port_monitor/arch3.png\\\" alt\\u003d\\\"\\\"\\u003e\\u003c/p\\u003e\\r\\n\\u003ch4 id\\u003d\\\"-\\\"\\u003e经验分享\\u003c/h4\\u003e\\r\\n\\u003col\\u003e\\r\\n\\u003cli\\u003e联合相关兄弟团队全面梳理IP、设备资产信息，同时资产变更系统化（避免手工操作）势在必行；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e扫描范围最好（一定）通过API拉取，避免出现因为资产变动而导致漏扫的情况；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e这种情况下安全监控信息的时效性要高于准确性，但准确性也很重要（所以要先拿Masscan缩小范围，再拿Nmap获取细节）；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e发现典型高危案例要记得抄送双方老板，在有可能的情况下看能不能升级至更高层面，因为制度或政策的确立由高往低会比较好推动。\\u003c/li\\u003e\\r\\n\\u003c/ol\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e延伸扩展\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e端口监控系统除了可以起到监控外网开放的新增高危端口的作用之外，还可以考虑从以下几个方面扩展一下它的功能和效果，以实现效用的最大化：\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"1-\\\"\\u003e1. 系统漏洞扫描器联动\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e对于非安全的同学来说，他们会很难理解一个外网开放端口能造成多大的危害，所以经常会出现当安全人员找到他们的时候，他们不认为这是一个安全问题，因此沟通起来会有点麻烦。\\u003cbr\\u003e虽然问题最终都会得到解决，但如果能有一个直观的演示给到他们的话，他们也会更愿意配合我们去修复以及避免这类问题。所以和系统漏洞扫描器的联动对于推动问题的处理和漏洞的修复是有帮助的。\\u003cbr\\u003e注意事项：\\u003cstrong\\u003e避免高风险性扫描操作\\u003c/strong\\u003e；\\u003cstrong\\u003e需要人工确认后主动触发\\u003c/strong\\u003e。\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"2-web-\\\"\\u003e2. Web漏洞扫描器联动\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e通常情况下我们会认为，新增Web端口对外是可以接受的，但这是建立在对应的Web系统通过了完整的内部安全测试的前提下。当碰到类似于为了方便起见将Zabbix的Web系统对外，且为弱口令时，情况就不那么乐观了，这时就可以通过调用Web漏洞扫描器自动对暴露在外的Web系统进行扫描，并将结果及时通报，以减少这类问题带来的危害。\\u003c/p\\u003e\\r\\n\\u003ch2 id\\u003d\\\"3-\\\"\\u003e3. 内部漏洞管理系统联动\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e可以获得的好处有：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e自动录入，由漏洞管理系统流程进行自动跟进，效率提升；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e结果在漏洞管理系统中进行展示，风格统一。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e补充\\u003c/h1\\u003e\\r\\n\\u003ch2 id\\u003d\\\"udp-\\\"\\u003eUDP 高危端口监控\\u003c/h2\\u003e\\r\\n\\u003cp\\u003e上面介绍了常规服务器的TCP端口监控，意在提醒大家注意一下服务器的安全；但还有一类UDP端口安全的问题上面没有介绍，也容易被忽略——防火墙、交换机等网络设备的安全。在2016年8月份的时候The Shadow Brokers公布了一款针对思科Adaptive Security Appliance（ASA，实际涵盖了防火墙和路由器设备，PIX也在其列）产品的漏洞利用工具ExtraBacon，虽然漏洞利用有一定条件限制，但是一旦漏洞利用成功，攻击者就可在无需输入身份凭证的情况下建立起SSH或telnet连接。就是不需要输入有效用户名或密码，就能闯进ASA，危害巨大。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e针对这方面的问题，有以下几点建议：\\u003c/p\\u003e\\r\\n\\u003cul\\u003e\\r\\n\\u003cli\\u003e快速监控部分高危UDP端口的状态；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e如无必要，关闭服务/对外访问；\\u003c/li\\u003e\\r\\n\\u003cli\\u003e如有需要，尽早升级且限制访问IP来源。\\u003c/li\\u003e\\r\\n\\u003c/ul\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e结语\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e本文主要介绍美团点评安全团队对外网端口监控系统的开发演进过程，整理总结了其中的一些实践经验以及前景展望。欢迎大家批评指正，有好的建议也希望能提出来帮助我们改进。我们后续将不断优化，也将继续与大家保持讨论。耐心看到这里的读者，表示十二万分的感谢！\\u003c/p\\u003e\\r\\n\\u003ch1 id\\u003d\\\"-\\\"\\u003e作者简介\\u003c/h1\\u003e\\r\\n\\u003cp\\u003e光宗，2015年加入美团点评安全团队，先后从事过生产网主机、软件安全防护的工作，目前主要负责美团点评集团内部安全审计系统相关的开发工作。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e最后打个小广告，美团点评集团安全部正在招Web\\u0026amp;二进制攻防、后台\\u0026amp;系统开发、机器学习\\u0026amp;算法等各路小伙伴，我们想做的事情：构建一套基于海量 IDC 环境下的，横跨网络层、虚拟化层、Server 软件层（内核态/用户态）、语言执行虚拟机层(JVM/Zend/JavaScript V8)、Web应用层、数据访问层(DAL)的基于大数据+机器学习的全自动安全事件感知系统，规模上对应美团点评全线业务的服务器，技术栈覆盖了几乎大多数云环境下的互联网应用，数据规模也将是很大的挑战。此外我们还关注 Google Facebook Amazon 这类公司在企业安全建设方面的实践，努力构建类似于Google的内置式安全架构和纵深防御体系，对在安全和工程技术领域有所追求的同学来说应该是一个很好的机会。如果您想加入我们，欢迎简历请发至邮箱zhaoyan17#meituan.com。\\u003c/p\\u003e\\r\\n\\u003cp\\u003e详情请点击：\\u003ca href\\u003d\\\"http://www.freebuf.com/jobs/150061.html\\\"\\u003e美团点评集团安全部招聘安全人才\\u003c/a\\u003e。\\u003c/p\\u003e\"],\"summary\":[\"本文主要介绍美团点评安全部门在外网开放端口监控过程中面临的挑战及其解决方案，总结了其中的一些实践经验以及前景展望。\"],\"blIds\":[\"[\\\"7\\\"]\"],\"ishide\":[\"0\"]}');
INSERT INTO `timeline` VALUES ('1672', '1', '1', '2017-11-06 15:10:53', '{}');
INSERT INTO `timeline` VALUES ('1673', '1', '10', '2017-11-06 15:10:54', '{}');
INSERT INTO `timeline` VALUES ('1674', '1', '30', '2017-11-06 15:15:35', '{\"bId\":[\"13\"]}');
INSERT INTO `timeline` VALUES ('1675', '1', '31', '2017-11-06 15:15:35', '{\"int1\":[\"13\"],\"page\":[\"1\"],\"rows\":[\"100\"],\"sort\":[\"createTime\"],\"order\":[\"desc\"]}');
INSERT INTO `timeline` VALUES ('1676', '1', '1', '2017-11-06 15:24:00', '{}');
INSERT INTO `timeline` VALUES ('1677', '1', '10', '2017-11-06 15:24:00', '{}');

-- ----------------------------
-- Table structure for `token`
-- ----------------------------
DROP TABLE IF EXISTS `token`;
CREATE TABLE `token` (
  `token` varchar(255) NOT NULL,
  `u_id` int(11) NOT NULL,
  `invalid_time` datetime NOT NULL,
  PRIMARY KEY (`token`),
  UNIQUE KEY `token` (`token`),
  KEY `u_id` (`u_id`),
  CONSTRAINT `token_ibfk_1` FOREIGN KEY (`u_id`) REFERENCES `users` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of token
-- ----------------------------
INSERT INTO `token` VALUES ('242144403063347', '2', '2017-10-25 21:56:38');
INSERT INTO `token` VALUES ('52220382472672', '5', '2017-11-06 22:20:38');
INSERT INTO `token` VALUES ('61313341516030', '3', '2017-11-07 13:13:34');
INSERT INTO `token` VALUES ('6146543894329', '4', '2017-11-07 14:10:40');
INSERT INTO `token` VALUES ('61515332062777', '1', '2017-11-07 15:24:00');

-- ----------------------------
-- Table structure for `users`
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `usernum` varchar(255) NOT NULL,
  `userpass` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `mail` varchar(255) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `isdelete` int(11) NOT NULL DEFAULT '0',
  `create_time` datetime NOT NULL,
  `rids` varchar(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `usernum` (`usernum`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('1', 'yd7111', '123456', '张顺', '', '', '0', '2017-10-12 14:51:44', '1', null);
INSERT INTO `users` VALUES ('2', 'viewer', '123456', '观光者', null, null, '0', '2017-10-18 17:34:52', '1', null);
INSERT INTO `users` VALUES ('3', '15817383353', '123456', '张顺小号1', '', '15817383353', '0', '2017-10-26 17:54:12', '3', null);
INSERT INTO `users` VALUES ('4', '1217360619@qq.com', '123456', '张顺邮箱用户', '1217360619@qq.com', '', '0', '2017-10-27 17:50:04', '1,2,3', null);
INSERT INTO `users` VALUES ('5', '15817383352', '123456', '测试手机用户2', '', '15817383352', '0', '2017-10-27 17:57:24', '4', null);
